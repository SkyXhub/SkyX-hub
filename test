--[[    
    SkyX | BladeBall Executor Script
    Using OrionX-UI with Dark Theme
    
    Features:
    - Auto Parry (with customizable distance and timing)
    - ESP for players and balls
    - Auto Farm mode
    - Teleport utilities
]]

-- Load the OrionX-UI library
local OrionLib = loadstring(game:HttpGet('https://raw.githubusercontent.com/SkyXhub/OrionX-UI/refs/heads/main/OrionX-UI'))() 

-- Apply Dark theme immediately
OrionLib.Themes:SetTheme("Dark")

-- Game detection
if game.PlaceId ~= 13772394625 and game.PlaceId ~= 14732610803 and game.PlaceId ~= 15216371542 then
    OrionLib:MakeNotification({
        Name = "Game Not Supported",
        Content = "This script only works in Blade Ball! Please join a supported game.",
        Image = "warning",
        Time = 10
    })
    return
end

-- Variables
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local Humanoid = Character:WaitForChild("Humanoid")
local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")

-- Settings with default values
local Settings = {
    AutoParry = false,
    ParryDistance = 20,
    ParryTiming = 0.25,
    ESP = false,
    AutoFarm = false,
    TargetPlayer = nil,
    PingBased = true
}

-- Helper functions
local function GetBall()
    for _, ball in pairs(workspace:GetChildren()) do
        if ball.Name == "Ball" and ball:IsA("BasePart") then
            return ball
        end
    end
    return nil
end

local function GetDistanceFromBall(ball)
    if not ball or not HumanoidRootPart then return 999 end
    return (ball.Position - HumanoidRootPart.Position).Magnitude
end

local function DetectBallMovingTowardsPlayer(ball)
    if not ball or not HumanoidRootPart then return false end
    local ballVelocity = ball.Velocity
    local playerPosition = HumanoidRootPart.Position
    local ballPosition = ball.Position
    local direction = (playerPosition - ballPosition).Unit
    local dotProduct = ballVelocity:Dot(direction)
    
    return dotProduct > 0 -- Ball is moving towards the player
end

local function AutoParry()
    local ball = GetBall()
    if not ball then return end
    
    local distance = GetDistanceFromBall(ball)
    local isMovingTowardsPlayer = DetectBallMovingTowardsPlayer(ball)
    local speed = ball.Velocity.Magnitude
    
    if distance <= Settings.ParryDistance and isMovingTowardsPlayer then
        local timeToImpact = distance / speed
        
        if Settings.PingBased then
            -- Adjust timing based on ping
            local ping = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValue() / 1000
            timeToImpact = timeToImpact - (ping / 2) -- Compensate for ping
        end
        
        if timeToImpact <= Settings.ParryTiming and timeToImpact > 0 then
            -- Trigger parry
            local args = {[1] = 0.5} -- Parry timing argument
            game:GetService("ReplicatedStorage").Remotes.ParryButtonPress:FireServer(unpack(args))
            
            -- Show notification
            OrionLib:MakeNotification({
                Name = "Auto Parry",
                Content = "Parried ball at distance: " .. math.floor(distance) .. "m",
                Image = "check",
                Time = 1
            })
        end
    end
end

local function ToggleESP(enabled)
    if enabled then
        -- Create ESP highlights
        for _, player in pairs(Players:GetPlayers()) do
            if player ~= LocalPlayer and player.Character then
                local highlight = Instance.new("Highlight")
                highlight.FillColor = Color3.fromRGB(255, 0, 0)
                highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
                highlight.FillTransparency = 0.5
                highlight.OutlineTransparency = 0
                highlight.Adornee = player.Character
                highlight.Parent = player.Character
                highlight.Name = "SkyXESP"
            end
        end
        
        -- Create ESP for balls
        local ball = GetBall()
        if ball then
            local highlight = Instance.new("Highlight")
            highlight.FillColor = Color3.fromRGB(0, 255, 0)
            highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
            highlight.FillTransparency = 0.3
            highlight.OutlineTransparency = 0
            highlight.Adornee = ball
            highlight.Parent = ball
            highlight.Name = "SkyXESP"
        end
    else
        -- Remove all ESP highlights
        for _, player in pairs(Players:GetPlayers()) do
            if player.Character then
                local highlight = player.Character:FindFirstChild("SkyXESP")
                if highlight then highlight:Destroy() end
            end
        end
        
        local ball = GetBall()
        if ball then
            local highlight = ball:FindFirstChild("SkyXESP")
            if highlight then highlight:Destroy() end
        end
    end
end

local function StartAutoFarm()
    -- Teleport to the center of the arena
    HumanoidRootPart.CFrame = CFrame.new(0, 50, 0)
    
    -- Enable auto parry if not already enabled
    Settings.AutoParry = true
end

local function StopAutoFarm()
    Settings.AutoParry = false
end

local function TeleportToPlayer(targetPlayer)
    if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
        HumanoidRootPart.CFrame = targetPlayer.Character.HumanoidRootPart.CFrame
    end
end

-- Create main window
local Window = OrionLib:MakeWindow({
    Name = "SkyX | Blade Ball",
    HidePremium = false,
    SaveConfig = true,
    ConfigFolder = "SkyXBladeBall",
    IntroEnabled = true,
    IntroText = "SkyX Hub",
    IntroIcon = "rbxassetid://10618644218",  -- Replace with your actual icon
    Icon = "rbxassetid://10618644218"        -- Replace with your actual icon
})

-- Main tab
local MainTab = Window:MakeTab({
    Name = "Main",
    Icon = "sword",
    PremiumOnly = false
})

local InfoSection = MainTab:AddSection({
    Name = "Information"
})

InfoSection:AddParagraph("Welcome to SkyX Blade Ball", "This script provides various utilities for Blade Ball including auto parry, ESP, and auto farm.")

-- Auto Parry section
local AutoParrySection = MainTab:AddSection({
    Name = "Auto Parry"
})

AutoParrySection:AddToggle({
    Name = "Auto Parry",
    Default = false,
    Flag = "AutoParry",
    Save = true,
    Callback = function(Value)
        Settings.AutoParry = Value
    end
})

AutoParrySection:AddSlider({
    Name = "Parry Distance",
    Min = 5,
    Max = 50,
    Default = 20,
    Color = Color3.fromRGB(60, 100, 200),
    Increment = 1,
    ValueName = "meters",
    Flag = "ParryDistance",
    Save = true,
    Callback = function(Value)
        Settings.ParryDistance = Value
    end    
})

AutoParrySection:AddSlider({
    Name = "Parry Timing",
    Min = 0.1,
    Max = 1,
    Default = 0.25,
    Color = Color3.fromRGB(60, 200, 100),
    Increment = 0.01,
    ValueName = "seconds",
    Flag = "ParryTiming",
    Save = true,
    Callback = function(Value)
        Settings.ParryTiming = Value
    end    
})

AutoParrySection:AddToggle({
    Name = "Ping-Based Timing",
    Default = true,
    Flag = "PingBased",
    Save = true,
    Callback = function(Value)
        Settings.PingBased = Value
    end
})

-- Visual tab
local VisualsTab = Window:MakeTab({
    Name = "Visuals",
    Icon = "eye",
    PremiumOnly = false
})

local ESPSection = VisualsTab:AddSection({
    Name = "ESP"
})

ESPSection:AddToggle({
    Name = "ESP",
    Default = false,
    Flag = "ESP",
    Save = true,
    Callback = function(Value)
        Settings.ESP = Value
        ToggleESP(Value)
    end
})

-- Teleport tab
local TeleportTab = Window:MakeTab({
    Name = "Teleport",
    Icon = "bolt",
    PremiumOnly = false
})

local TeleportSection = TeleportTab:AddSection({
    Name = "Teleport Options"
})

-- Create dropdown of players
local playerList = {}
for _, player in pairs(Players:GetPlayers()) do
    if player ~= LocalPlayer then
        table.insert(playerList, player.Name)
    end
end

local PlayerDropdown = TeleportTab:AddDropdown({
    Name = "Select Player",
    Default = "",
    Options = playerList,
    Flag = "TargetPlayer",
    Save = false,
    Callback = function(Value)
        for _, player in pairs(Players:GetPlayers()) do
            if player.Name == Value then
                Settings.TargetPlayer = player
                break
            end
        end
    end    
})

TeleportTab:AddButton({
    Name = "Refresh Player List",
    Callback = function()
        local newPlayerList = {}
        for _, player in pairs(Players:GetPlayers()) do
            if player ~= LocalPlayer then
                table.insert(newPlayerList, player.Name)
            end
        end
        PlayerDropdown:Refresh(newPlayerList, true)
    end    
})

TeleportTab:AddButton({
    Name = "Teleport to Player",
    Callback = function()
        if Settings.TargetPlayer then
            TeleportToPlayer(Settings.TargetPlayer)
        else
            OrionLib:MakeNotification({
                Name = "Teleport Failed",
                Content = "Please select a player first!",
                Image = "warning",
                Time = 3
            })
        end
    end    
})

TeleportTab:AddButton({
    Name = "Teleport to Center",
    Callback = function()
        HumanoidRootPart.CFrame = CFrame.new(0, 50, 0)
    end    
})

-- Auto farm tab
local FarmTab = Window:MakeTab({
    Name = "Auto Farm",
    Icon = "rotate",
    PremiumOnly = false
})

local FarmSection = FarmTab:AddSection({
    Name = "Auto Farm"
})

FarmSection:AddToggle({
    Name = "Auto Farm",
    Default = false,
    Flag = "AutoFarm",
    Save = true,
    Callback = function(Value)
        Settings.AutoFarm = Value
        if Value then
            StartAutoFarm()
        else
            StopAutoFarm()
        end
    end
})

FarmSection:AddParagraph("How Auto Farm Works", "Auto Farm teleports you to the center of the arena and automatically parries incoming balls to accumulate wins.")

-- Theme tab
local ThemeTab = Window:MakeTab({
    Name = "Theme",
    Icon = "palette",
    PremiumOnly = false
})

local ThemeSection = ThemeTab:AddSection({
    Name = "UI Theme"
})

local themes = {"Default", "Dark", "Light", "Ocean", "Blood"}

for _, themeName in pairs(themes) do
    ThemeTab:AddButton({
        Name = "Switch to " .. themeName,
        Callback = function()
            OrionLib.Themes:SetTheme(themeName)
            OrionLib:MakeNotification({
                Name = "Theme Changed",
                Content = "Switched to " .. themeName .. " theme",
                Image = "check",
                Time = 3
            })
        end
    })
end

-- Mobile support
local MobileSection = ThemeTab:AddSection({
    Name = "Mobile Support"
})

MobileSection:AddToggle({
    Name = "Show Mobile Toggle",
    Default = true,
    Callback = function(Value)
        OrionLib.Mobile:SetToggleVisibility(Value)
    end
})

MobileSection:AddDropdown({
    Name = "Toggle Position",
    Default = "TopRight",
    Options = {"TopRight", "TopLeft", "BottomRight", "BottomLeft"},
    Callback = function(Value)
        OrionLib.Mobile:SetTogglePosition(Value)
    end
})

-- Credits tab
local CreditsTab = Window:MakeTab({
    Name = "Credits",
    Icon = "info",
    PremiumOnly = false
})

CreditsTab:AddParagraph("SkyX Hub", "Created by SkyX Team")
CreditsTab:AddParagraph("UI Library", "Using OrionX-UI - An enhanced version of Orion Library")

-- Initialize connections
RunService.Heartbeat:Connect(function()
    if Settings.AutoParry then
        AutoParry()
    end
    
    if Settings.ESP then
        -- Refresh ESP on new players or balls
        ToggleESP(true)
    end
})

-- Handle player joining
Players.PlayerAdded:Connect(function(player)
    local newPlayerList = {}
    for _, p in pairs(Players:GetPlayers()) do
        if p ~= LocalPlayer then
            table.insert(newPlayerList, p.Name)
        end
    end
    PlayerDropdown:Refresh(newPlayerList, true)
    
    -- Add ESP to new player if enabled
    if Settings.ESP and player ~= LocalPlayer and player.Character then
        local highlight = Instance.new("Highlight")
        highlight.FillColor = Color3.fromRGB(255, 0, 0)
        highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
        highlight.FillTransparency = 0.5
        highlight.OutlineTransparency = 0
        highlight.Adornee = player.Character
        highlight.Parent = player.Character
        highlight.Name = "SkyXESP"
    end
})

-- Handle player leaving
Players.PlayerRemoving:Connect(function(player)
    local newPlayerList = {}
    for _, p in pairs(Players:GetPlayers()) do
        if p ~= LocalPlayer and p ~= player then
            table.insert(newPlayerList, p.Name)
        end
    end
    PlayerDropdown:Refresh(newPlayerList, true)
    
    -- Reset target player if they leave
    if Settings.TargetPlayer == player then
        Settings.TargetPlayer = nil
    end
})

-- Initialize the library
OrionLib:Init()
