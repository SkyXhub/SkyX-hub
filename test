--[[
🌊 SkyX Hub - Dead Rails Easy Loader 🌊
This is a simplified loader that handles errors and fixes URL issues
]]

-- Check if in Dead Rails
if game.PlaceId ~= 6729832410 and game.PlaceId ~= 12355337193 then
    warn("⚠️ This script is only for Dead Rails! Please execute in Dead Rails.")
    return
end

-- Prevent multiple executions
if _G.SkyXDeadRailsLoading then
    warn("⚠️ SkyX Dead Rails is already loading...")
    return
end
_G.SkyXDeadRailsLoading = true

-- Notification function
local function Notify(title, text, duration)
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = title,
        Text = text,
        Duration = duration or 5
    })
end

Notify("SkyX Hub", "Loading Dead Rails script...", 3)
print("🔍 SkyX Dead Rails Loader started")

-- Try to load from multiple different sources for resilience
local function TryLoadScript(urls)
    for i, url in ipairs(urls) do
        local success, result = pcall(function()
            return game:HttpGet(url)
        end)
        
        if success and result and #result > 1000 then
            print("✅ Successfully loaded script from source #" .. i)
            return result
        else
            print("❌ Failed to load from source #" .. i)
        end
    end
    
    return nil
end

-- Try to fix module URLs in the script content
local function FixModuleURLs(scriptContent)
    -- Fix URL issues by replacing URLs that might be incorrect
    local fixedContent = scriptContent:gsub(
        "https://raw.githubusercontent.com/SkyXhub/modularsystem.lua/refs/heads/main/",
        "https://raw.githubusercontent.com/SkyXhub/modularsystem.lua/main/"
    )
    
    -- Also try to fix teleport URL which has special characters
    fixedContent = fixedContent:gsub(
        "deadrails_teleport%%20%(1%).lua", 
        "deadrails_teleport.lua"
    )
    
    return fixedContent
end

-- Main loader function
local function LoadScript()
    -- Different possible sources for the script
    local scriptUrls = {
        "https://raw.githubusercontent.com/SkyXhub/modularsystem.lua/main/deadrails_direct_modular.lua",
        "https://raw.githubusercontent.com/SkyXhub/modularsystem.lua/refs/heads/main/deadrails_direct_modular.lua",
        "https://raw.githubusercontent.com/SkyXhub/SkyXhub/main/DeadRails/deadrails_direct_modular.lua",
        -- Add more fallback URLs if needed
    }
    
    -- Try to load from any of the sources
    local scriptContent = TryLoadScript(scriptUrls)
    
    if not scriptContent then
        -- If all loading attempts failed, try loading each module separately
        Notify("SkyX Hub", "Direct loading failed, trying modular loading...", 3)
        
        -- Try to load internal file
        if isfile and isfile("deadrails_direct_modular.lua") then
            scriptContent = readfile("deadrails_direct_modular.lua")
            print("✅ Loaded script from local file")
        end
    end
    
    if scriptContent then
        -- Fix any URL issues
        local fixedContent = FixModuleURLs(scriptContent)
        
        -- Try to execute the fixed script
        local success, result = pcall(function()
            return loadstring(fixedContent)()
        end)
        
        if success then
            Notify("SkyX Hub", "Dead Rails script loaded successfully!", 5)
            print("✅ SkyX Dead Rails loaded successfully!")
        else
            Notify("SkyX Hub Error", "Error executing script: " .. (result or "Unknown error"), 5)
            warn("❌ Script execution failed: " .. (result or "Unknown error"))
            
            -- Emergency mode - try loading the script with hardcoded module loading
            Notify("SkyX Hub", "Trying emergency mode...", 3)
            EmergencyMode()
        end
    else
        Notify("SkyX Hub Error", "Failed to load script from all sources!", 5)
        warn("❌ Could not load script from any source")
        
        -- Fall back to emergency mode
        EmergencyMode()
    end
    
    _G.SkyXDeadRailsLoading = false
end

-- Emergency mode will try to load each module separately
function EmergencyMode()
    print("🚨 Entering emergency mode - loading modules directly")
    
    -- URLs for each module
    local moduleUrls = {
        AntiDetect = "https://raw.githubusercontent.com/SkyXhub/modularsystem.lua/main/deadrails_antidetect.lua",
        ESP = "https://raw.githubusercontent.com/SkyXhub/modularsystem.lua/main/deadrails_esp.lua",
        Aimbot = "https://raw.githubusercontent.com/SkyXhub/modularsystem.lua/main/deadrails_aimbot.lua",
        GunMods = "https://raw.githubusercontent.com/SkyXhub/modularsystem.lua/main/deadrails_gunmods.lua", 
        Teleport = "https://raw.githubusercontent.com/SkyXhub/modularsystem.lua/main/deadrails_teleport.lua",
        AutoFarm = "https://raw.githubusercontent.com/SkyXhub/modularsystem.lua/main/deadrails_autofarm.lua"
    }
    
    -- Try to load each module
    local modules = {}
    local loadCount = 0
    
    for name, url in pairs(moduleUrls) do
        local success, content = pcall(function()
            return game:HttpGet(url)
        end)
        
        if success and content and #content > 100 then
            local loadSuccess, module = pcall(function()
                return loadstring(content)()
            end)
            
            if loadSuccess and module then
                modules[name] = module
                loadCount = loadCount + 1
                print("✅ Loaded module: " .. name)
            else
                print("❌ Failed to execute module: " .. name)
            end
        else
            print("❌ Failed to load module: " .. name)
        end
    end
    
    -- Check if we loaded at least the essential modules
    if loadCount >= 3 then
        print("🔄 Loaded " .. loadCount .. "/6 modules, trying to run minimal UI")
        
        -- Try to initialize modules
        for name, module in pairs(modules) do
            if module.Initialize then
                pcall(function() module.Initialize() end)
            end
        end
        
        -- Create a minimal UI with the loaded modules
        CreateEmergencyUI(modules)
    else
        Notify("SkyX Hub Error", "Failed to load essential modules", 5)
        _G.SkyXDeadRailsLoading = false
    end
end

-- Create a minimal UI with loaded modules
function CreateEmergencyUI(modules)
    print("🔧 Creating emergency UI with available modules")
    
    -- Basic UI setup (minimal version of the full UI)
    local SkyXUI = Instance.new("ScreenGui")
    SkyXUI.Name = "SkyXEmergencyUI"
    
    -- Handle different executor security models
    if syn then
        syn.protect_gui(SkyXUI)
        SkyXUI.Parent = game.CoreGui
    else
        SkyXUI.Parent = gethui() or game.CoreGui
    end
    
    -- Create main frame
    local MainFrame = Instance.new("Frame")
    MainFrame.Name = "MainFrame"
    MainFrame.Size = UDim2.new(0, 300, 0, 400)
    MainFrame.Position = UDim2.new(0.5, -150, 0.5, -200)
    MainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 45)
    MainFrame.BorderSizePixel = 0
    MainFrame.Parent = SkyXUI
    
    -- Add corner radius
    local Corner = Instance.new("UICorner")
    Corner.CornerRadius = UDim.new(0, 10)
    Corner.Parent = MainFrame
    
    -- Add title
    local Title = Instance.new("TextLabel")
    Title.Name = "Title"
    Title.Size = UDim2.new(1, 0, 0, 40)
    Title.BackgroundColor3 = Color3.fromRGB(80, 120, 240)
    Title.BorderSizePixel = 0
    Title.Font = Enum.Font.GothamBold
    Title.TextSize = 18
    Title.TextColor3 = Color3.fromRGB(255, 255, 255)
    Title.Text = "SkyX Dead Rails - Emergency Mode"
    Title.Parent = MainFrame
    
    -- Add corner to title
    local TitleCorner = Instance.new("UICorner")
    TitleCorner.CornerRadius = UDim.new(0, 10)
    TitleCorner.Parent = Title
    
    -- Create a scrolling frame for buttons
    local ScrollFrame = Instance.new("ScrollingFrame")
    ScrollFrame.Name = "ScrollFrame"
    ScrollFrame.Size = UDim2.new(1, -20, 1, -60)
    ScrollFrame.Position = UDim2.new(0, 10, 0, 50)
    ScrollFrame.BackgroundTransparency = 1
    ScrollFrame.BorderSizePixel = 0
    ScrollFrame.ScrollBarThickness = 4
    ScrollFrame.Parent = MainFrame
    
    -- Add layout for the scroll frame
    local Layout = Instance.new("UIListLayout")
    Layout.Padding = UDim.new(0, 10)
    Layout.Parent = ScrollFrame
    
    -- Add buttons for the modules that were loaded
    local yPos = 0
    
    -- Add section headings and buttons based on available modules
    if modules.AntiDetect then
        AddSection(ScrollFrame, "Anti-Detection", yPos)
        yPos = yPos + 30
        
        AddToggle(ScrollFrame, "Enable Anti-Detection", yPos, function(value)
            modules.AntiDetect.SetEnableDeadRailsBypass(value)
            modules.AntiDetect.SetEnableRemoteSpyProtection(value)
        end)
        yPos = yPos + 40
    end
    
    if modules.ESP then
        AddSection(ScrollFrame, "ESP", yPos)
        yPos = yPos + 30
        
        AddToggle(ScrollFrame, "Enable ESP", yPos, function(value)
            modules.ESP.SetEnabled(value)
        end)
        yPos = yPos + 40
        
        AddToggle(ScrollFrame, "Show Names", yPos, function(value)
            modules.ESP.SetShowNames(value)
        end)
        yPos = yPos + 40
    end
    
    if modules.Aimbot then
        AddSection(ScrollFrame, "Aimbot", yPos)
        yPos = yPos + 30
        
        AddToggle(ScrollFrame, "Enable Aimbot", yPos, function(value)
            modules.Aimbot.SetEnabled(value)
        end)
        yPos = yPos + 40
    end
    
    if modules.GunMods then
        AddSection(ScrollFrame, "Gun Mods", yPos)
        yPos = yPos + 30
        
        AddToggle(ScrollFrame, "No Recoil", yPos, function(value)
            modules.GunMods.SetNoRecoil(value)
        end)
        yPos = yPos + 40
        
        AddToggle(ScrollFrame, "No Spread", yPos, function(value)
            modules.GunMods.SetNoSpread(value)
        end)
        yPos = yPos + 40
    end
    
    if modules.AutoFarm then
        AddSection(ScrollFrame, "Auto Farm", yPos)
        yPos = yPos + 30
        
        AddToggle(ScrollFrame, "Auto Bone Farm", yPos, function(value)
            modules.AutoFarm.SetAutoBone(value)
        end)
        yPos = yPos + 40
        
        AddToggle(ScrollFrame, "Auto End", yPos, function(value)
            modules.AutoFarm.SetAutoEnd(value)
        end)
        yPos = yPos + 40
    end
    
    -- Update scrollframe size
    ScrollFrame.CanvasSize = UDim2.new(0, 0, 0, yPos)
    
    -- Make draggable
    local UserInputService = game:GetService("UserInputService")
    local dragging, dragInput, dragStart, startPos
    
    local function UpdateDrag(input)
        local delta = input.Position - dragStart
        MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
    
    Title.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = MainFrame.Position
            
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)
    
    Title.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            UpdateDrag(input)
        end
    end)
    
    -- Add a close button
    local CloseButton = Instance.new("TextButton")
    CloseButton.Name = "CloseButton"
    CloseButton.Size = UDim2.new(0, 20, 0, 20)
    CloseButton.Position = UDim2.new(1, -30, 0, 10)
    CloseButton.BackgroundTransparency = 1
    CloseButton.Font = Enum.Font.GothamBold
    CloseButton.TextSize = 14
    CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    CloseButton.Text = "X"
    CloseButton.Parent = Title
    
    CloseButton.MouseButton1Click:Connect(function()
        -- Close UI and clean up
        SkyXUI:Destroy()
        _G.SkyXDeadRailsLoading = false
        
        -- Stop modules
        for name, module in pairs(modules) do
            if module.Stop then
                pcall(function() module.Stop() end)
            end
        end
    end)
    
    -- Toggle visibility with RightControl
    UserInputService.InputBegan:Connect(function(input, gameProcessed)
        if not gameProcessed and input.KeyCode == Enum.KeyCode.RightControl then
            MainFrame.Visible = not MainFrame.Visible
        end
    end)
    
    Notify("SkyX Hub", "Emergency mode loaded! Press RightControl to toggle UI", 5)
end

-- Helper function to add a section heading
function AddSection(parent, name, yPos)
    local Section = Instance.new("TextLabel")
    Section.Name = name .. "Section"
    Section.Size = UDim2.new(1, 0, 0, 25)
    Section.Position = UDim2.new(0, 0, 0, yPos)
    Section.BackgroundColor3 = Color3.fromRGB(40, 40, 60)
    Section.BorderSizePixel = 0
    Section.Font = Enum.Font.GothamBold
    Section.TextSize = 14
    Section.TextColor3 = Color3.fromRGB(255, 255, 255)
    Section.Text = "  " .. name
    Section.TextXAlignment = Enum.TextXAlignment.Left
    Section.Parent = parent
    
    -- Add corner
    local Corner = Instance.new("UICorner")
    Corner.CornerRadius = UDim.new(0, 4)
    Corner.Parent = Section
    
    return Section
end

-- Helper function to add a toggle button
function AddToggle(parent, name, yPos, callback)
    local Toggle = Instance.new("Frame")
    Toggle.Name = name .. "Toggle"
    Toggle.Size = UDim2.new(1, 0, 0, 30)
    Toggle.Position = UDim2.new(0, 0, 0, yPos)
    Toggle.BackgroundColor3 = Color3.fromRGB(30, 30, 45)
    Toggle.BorderSizePixel = 0
    Toggle.Parent = parent
    
    -- Add corner
    local Corner = Instance.new("UICorner")
    Corner.CornerRadius = UDim.new(0, 4)
    Corner.Parent = Toggle
    
    -- Add text
    local Text = Instance.new("TextLabel")
    Text.Name = "Text"
    Text.Size = UDim2.new(1, -60, 1, 0)
    Text.Position = UDim2.new(0, 10, 0, 0)
    Text.BackgroundTransparency = 1
    Text.Font = Enum.Font.Gotham
    Text.TextSize = 14
    Text.TextColor3 = Color3.fromRGB(255, 255, 255)
    Text.TextXAlignment = Enum.TextXAlignment.Left
    Text.Text = name
    Text.Parent = Toggle
    
    -- Add indicator
    local Indicator = Instance.new("Frame")
    Indicator.Name = "Indicator"
    Indicator.Size = UDim2.new(0, 40, 0, 20)
    Indicator.Position = UDim2.new(1, -50, 0.5, -10)
    Indicator.BackgroundColor3 = Color3.fromRGB(240, 70, 90) -- Off by default
    Indicator.BorderSizePixel = 0
    Indicator.Parent = Toggle
    
    -- Add corner to indicator
    local IndicatorCorner = Instance.new("UICorner")
    IndicatorCorner.CornerRadius = UDim.new(0, 10)
    IndicatorCorner.Parent = Indicator
    
    -- Add circle 
    local Circle = Instance.new("Frame")
    Circle.Name = "Circle" 
    Circle.Size = UDim2.new(0, 16, 0, 16)
    Circle.Position = UDim2.new(0, 2, 0.5, -8)
    Circle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Circle.BorderSizePixel = 0
    Circle.Parent = Indicator
    
    -- Add corner to circle
    local CircleCorner = Instance.new("UICorner")
    CircleCorner.CornerRadius = UDim.new(1, 0)
    CircleCorner.Parent = Circle
    
    -- Add button 
    local Button = Instance.new("TextButton")
    Button.Name = "Button"
    Button.Size = UDim2.new(1, 0, 1, 0)
    Button.BackgroundTransparency = 1
    Button.Text = ""
    Button.Parent = Toggle
    
    -- Toggle state
    local enabled = false
    
    -- Click function
    Button.MouseButton1Click:Connect(function()
        enabled = not enabled
        
        -- Update visual
        if enabled then
            Indicator.BackgroundColor3 = Color3.fromRGB(70, 200, 120) -- Green
            Circle:TweenPosition(UDim2.new(1, -18, 0.5, -8), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.2, true)
        else
            Indicator.BackgroundColor3 = Color3.fromRGB(240, 70, 90) -- Red
            Circle:TweenPosition(UDim2.new(0, 2, 0.5, -8), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.2, true)
        end
        
        -- Call callback
        pcall(callback, enabled)
    end)
    
    return Toggle
end

-- Start the loader
LoadScript()
