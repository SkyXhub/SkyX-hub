--[[    
    Complete OrionX-UI Example
    Demonstrates all UI elements and parameters
]]

-- Load the OrionX-UI library 
local OrionLib = loadstring(game:HttpGet('https://raw.githubusercontent.com/SkyXhub/OrionX-UI/refs/heads/main/OrionX-UI'))()

-- Create window with all options
local Window = OrionLib:MakeWindow({
    Name = "Complete OrionX UI", 
    HidePremium = false,
    SaveConfig = true, 
    ConfigFolder = "OrionXComplete",
    IntroEnabled = true,
    IntroText = "OrionX UI",
    IntroIcon = "rbxassetid://10618644218",
    Icon = "rbxassetid://10618644218",
    CloseCallback = function()
        print("UI was closed")
    end
})

-- Create main tab
local MainTab = Window:MakeTab({
    Name = "Main",
    Icon = "home", 
    PremiumOnly = false
})

-- Create information section
local InfoSection = MainTab:AddSection({
    Name = "Information"
})

-- Add a paragraph
InfoSection:AddParagraph("Welcome to OrionX-UI", "This example demonstrates all UI elements and parameters available in the library.")

-- Add a label
InfoSection:AddLabel("This is a basic label")

-- Create a controls section
local ControlsSection = MainTab:AddSection({
    Name = "UI Controls"
})

-- Add a button with all parameters
ControlsSection:AddButton({
    Name = "Click Me",
    Callback = function()
        OrionLib:MakeNotification({
            Name = "Button Clicked",
            Content = "You clicked the button!",
            Image = "check",
            Time = 5
        })
    end
})

-- Add a toggle with saving
local MyToggle = ControlsSection:AddToggle({
    Name = "Toggle Example",
    Default = false,
    Save = true,
    Flag = "toggleExample",
    Callback = function(Value)
        print("Toggle:", Value)
    end
})

-- Add button to demonstrate toggle manipulation
ControlsSection:AddButton({
    Name = "Toggle ON",
    Callback = function()
        MyToggle:Set(true)
    end
})

-- Add a slider with all parameters
ControlsSection:AddSlider({
    Name = "Slider Example",
    Min = 0,
    Max = 100,
    Default = 50,
    Color = Color3.fromRGB(60, 120, 220),
    Increment = 1,
    ValueName = "units",
    Save = true,
    Flag = "sliderExample",
    Callback = function(Value)
        print("Slider value:", Value)
    end
})

-- Add a dropdown with all parameters
local MyDropdown = ControlsSection:AddDropdown({
    Name = "Dropdown Example",
    Default = "Option 1",
    Options = {"Option 1", "Option 2", "Option 3"},
    Save = true,
    Flag = "dropdownExample", 
    Callback = function(Value)
        print("Selected:", Value)
    end
})

-- Add button to refresh dropdown options
ControlsSection:AddButton({
    Name = "Refresh Dropdown",
    Callback = function()
        MyDropdown:Refresh({"New Option 1", "New Option 2", "New Option 3", "New Option 4"}, true) -- true to clear old options
    end
})

-- Add a selectable dropdown value
ControlsSection:AddButton({
    Name = "Set Dropdown to New Option 2",
    Callback = function()
        MyDropdown:Set("New Option 2")
    end
})

-- Add a textbox
ControlsSection:AddTextbox({
    Name = "Textbox Example",
    Default = "Type here...",
    TextDisappear = false,
    Callback = function(Value)
        print("Textbox value:", Value)
    end
})

-- Add a colorpicker
local MyColorPicker = ControlsSection:AddColorpicker({
    Name = "Colorpicker Example",
    Default = Color3.fromRGB(255, 0, 0),
    Save = true,
    Flag = "colorExample",
    Callback = function(Value)
        print("Color picked:", Value)
    end
})

-- Set a default color
ControlsSection:AddButton({
    Name = "Set Color to Blue",
    Callback = function()
        MyColorPicker:Set(Color3.fromRGB(0, 0, 255))
    end
})

-- Add a keybind
ControlsSection:AddBind({
    Name = "Keybind Example",
    Default = Enum.KeyCode.E,
    Hold = false,
    Save = true,
    Flag = "keybindExample",
    Callback = function()
        print("Keybind triggered")
    end
})

-- Create a Mobile tab
local MobileTab = Window:MakeTab({
    Name = "Mobile",
    Icon = "settings",
    PremiumOnly = false
})

-- Create a mobile section
local MobileSection = MobileTab:AddSection({
    Name = "Mobile Settings"
})

-- Add mobile toggle button visibility toggle
MobileSection:AddToggle({
    Name = "Show Mobile Toggle",
    Default = true,
    Callback = function(Value)
        OrionLib.Mobile:SetToggleVisibility(Value)
    end
})

-- Add mobile toggle position dropdown
MobileSection:AddDropdown({
    Name = "Mobile Toggle Position",
    Default = "TopRight",
    Options = {"TopRight", "TopLeft", "BottomRight", "BottomLeft"},
    Callback = function(Value)
        OrionLib.Mobile:SetTogglePosition(Value)
    end
})

-- Create a Theme tab
local ThemeTab = Window:MakeTab({
    Name = "Themes",
    Icon = "palette",
    PremiumOnly = false
})

-- Create a theme section
local ThemeSection = ThemeTab:AddSection({
    Name = "Theme Options"
})

-- Available themes
local themes = {"Default", "Dark", "Light", "Ocean", "Blood"}

-- Add theme buttons
for _, themeName in pairs(themes) do
    ThemeSection:AddButton({
        Name = "Set " .. themeName .. " Theme",
        Callback = function()
            OrionLib.Themes:SetTheme(themeName)
            OrionLib:MakeNotification({
                Name = "Theme Changed",
                Content = "Switched to " .. themeName .. " theme",
                Image = "check",
                Time = 3
            })
        end
    })
end

-- Create a custom theme
ThemeSection:AddButton({
    Name = "Create Custom Purple Theme",
    Callback = function()
        -- Add a custom theme
        OrionLib.Themes:AddTheme("Purple", {
            Main = Color3.fromRGB(40, 30, 60),
            Second = Color3.fromRGB(50, 40, 70),
            Stroke = Color3.fromRGB(80, 70, 100),
            Divider = Color3.fromRGB(80, 70, 100),
            Text = Color3.fromRGB(240, 230, 255),
            TextDark = Color3.fromRGB(170, 160, 190)
        })
        
        -- Apply the custom theme
        OrionLib.Themes:SetTheme("Purple")
        
        -- Notification
        OrionLib:MakeNotification({
            Name = "Custom Theme Created",
            Content = "Created and applied Purple theme",
            Image = "check",
            Time = 3
        })
    end
})

-- Create a flags tab to demonstrate flags
local FlagsTab = Window:MakeTab({
    Name = "Flags",
    Icon = "key",
    PremiumOnly = false
})

-- Create a flags section
local FlagsSection = FlagsTab:AddSection({
    Name = "Saved Values"
})

-- Add button to print all flag values
FlagsSection:AddButton({
    Name = "Print All Flag Values",
    Callback = function()
        -- Loop through all flags
        for flagName, flagData in pairs(OrionLib.Flags) do
            print(flagName .. " = " .. tostring(flagData.Value))
        end
    end
})

-- Add buttons to show individual flags
FlagsSection:AddButton({
    Name = "Show Toggle Value",
    Callback = function()
        local value = OrionLib.Flags["toggleExample"].Value
        OrionLib:MakeNotification({
            Name = "Toggle Flag Value",
            Content = "Value: " .. tostring(value),
            Image = "info",
            Time = 5
        })
    end
})

FlagsSection:AddButton({
    Name = "Show Slider Value",
    Callback = function()
        local value = OrionLib.Flags["sliderExample"].Value
        OrionLib:MakeNotification({
            Name = "Slider Flag Value",
            Content = "Value: " .. tostring(value),
            Image = "info",
            Time = 5
        })
    end
})

FlagsSection:AddButton({
    Name = "Show Dropdown Value",
    Callback = function()
        local value = OrionLib.Flags["dropdownExample"].Value
        OrionLib:MakeNotification({
            Name = "Dropdown Flag Value",
            Content = "Value: " .. tostring(value),
            Image = "info",
            Time = 5
        })
    end
})

-- Create Utility Section
local UtilitySection = FlagsTab:AddSection({
    Name = "Utility"
})

-- Destroy UI button
UtilitySection:AddButton({
    Name = "Destroy UI",
    Callback = function()
        OrionLib:Destroy()
    end
})

-- Initialize the library
OrionLib:Init()
