--[[  
    SkyX Enhanced OrionX UI - Executor Example
    This script is designed to be run in a Roblox executor
]]--

-- Load the SkyX modded OrionX UI Library from GitHub
local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/SkyXhub/OrionX-UI/refs/heads/main/OrionX-UI')))()

-- Alternatively, if you have the library locally:
-- local OrionLib = loadstring(readfile("Orion_UI_Source.lua"))()

-- Create main window
local Window = OrionLib:MakeWindow({
    Name = "SkyX Executor Example", 
    HidePremium = false,
    SaveConfig = true, 
    ConfigFolder = "SkyXConfig",
    IntroEnabled = true,
    IntroText = "SkyX Enhanced",
    IntroIcon = "rocket" -- Using icon name instead of rbxassetid
})

-- Create main tab
local MainTab = Window:MakeTab({
    Name = "Main Functions",
    Icon = "home", -- Using icon name instead of rbxassetid
    PremiumOnly = false
})

-- Create ESP section
local ESPSection = MainTab:AddSection({
    Name = "ESP Options"
})

-- ESP Toggle
ESPSection:AddToggle({
    Name = "Enable ESP",
    Default = false,
    Save = true,
    Flag = "espEnabled",
    Callback = function(Value)
        -- ESP Logic would go here
        if Value then
            OrionLib:MakeNotification({
                Name = "ESP Enabled",
                Content = "ESP has been activated",
                Image = "check", -- Using icon name instead of rbxassetid
                Time = 5
            })
        else
            OrionLib:MakeNotification({
                Name = "ESP Disabled",
                Content = "ESP has been deactivated",
                Image = "rbxassetid://7734110484",
                Time = 5
            })
        end
    end    
})

-- ESP Color Picker
ESPSection:AddColorpicker({
    Name = "ESP Color",
    Default = Color3.fromRGB(255, 0, 0),
    Save = true,
    Flag = "espColor",
    Callback = function(Value)
        -- Color update logic would go here
        OrionLib:MakeNotification({
            Name = "ESP Color Updated",
            Content = "ESP color has been changed",
            Image = "rbxassetid://7733964148",
            Time = 3
        })
    end  
})

-- ESP Distance Slider
ESPSection:AddSlider({
    Name = "ESP Distance",
    Min = 10,
    Max = 1000,
    Default = 500,
    Color = Color3.fromRGB(0, 120, 215),
    Increment = 10,
    Save = true,
    Flag = "espDistance",
    ValueName = "studs",
    Callback = function(Value)
        -- Distance update logic would go here
    end    
})

-- Create Movement section
local MovementSection = MainTab:AddSection({
    Name = "Movement Options"
})

-- Speed Slider
MovementSection:AddSlider({
    Name = "Walk Speed",
    Min = 16,
    Max = 500,
    Default = 16,
    Color = Color3.fromRGB(0, 120, 215),
    Increment = 1,
    Save = true,
    Flag = "walkSpeed",
    ValueName = "speed",
    Callback = function(Value)
        -- This is where the actual speed change would happen
        pcall(function()
            game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value
        end)
    end    
})

-- Jump Power Slider
MovementSection:AddSlider({
    Name = "Jump Power",
    Min = 50,
    Max = 500,
    Default = 50,
    Color = Color3.fromRGB(0, 120, 215),
    Increment = 5,
    Save = true,
    Flag = "jumpPower",
    ValueName = "power",
    Callback = function(Value)
        -- This is where the actual jump power change would happen
        pcall(function()
            game.Players.LocalPlayer.Character.Humanoid.JumpPower = Value
        end)
    end    
})

-- Flight Toggle
MovementSection:AddToggle({
    Name = "Enable Flight",
    Default = false,
    Save = true,
    Flag = "flightEnabled",
    Callback = function(Value)
        -- Flight logic would go here
        OrionLib:MakeNotification({
            Name = Value and "Flight Enabled" or "Flight Disabled",
            Content = Value and "You can now fly around the map" or "Flight has been deactivated",
            Image = "bell", -- Using icon name instead of rbxassetid
            Time = 5
        })
    end    
})

-- Create Teleport section
local TeleportSection = MainTab:AddSection({
    Name = "Teleport Options"
})

-- Teleport to Player Dropdown
local PlayerDropdown = TeleportSection:AddDropdown({
    Name = "Select Player",
    Default = "",
    Options = {"Loading players..."},
    Save = false,
    Flag = "selectedPlayer",
    Callback = function(Value)
        -- Logic for saving selected player
    end    
})

-- Function to refresh player list
local function RefreshPlayerList()
    local Players = game:GetService("Players")
    local playerNames = {}
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= Players.LocalPlayer then
            table.insert(playerNames, player.Name)
        end
    end
    
    if #playerNames == 0 then
        table.insert(playerNames, "No other players")
    end
    
    PlayerDropdown:Refresh(playerNames, true)
end

-- Refresh the player list
RefreshPlayerList()

-- Refresh Button
TeleportSection:AddButton({
    Name = "Refresh Player List",
    Callback = function()
        RefreshPlayerList()
        OrionLib:MakeNotification({
            Name = "Player List Updated",
            Content = "The player list has been refreshed",
            Image = "refresh", -- Using icon name instead of rbxassetid
            Time = 3
        })
    end    
})

-- Teleport Button
TeleportSection:AddButton({
    Name = "Teleport to Player",
    Callback = function()
        local selectedPlayer = OrionLib.Flags["selectedPlayer"].Value
        
        if selectedPlayer and selectedPlayer ~= "No other players" then
            -- This is where the actual teleport would happen
            local Players = game:GetService("Players")
            local targetPlayer = Players:FindFirstChild(selectedPlayer)
            
            if targetPlayer and targetPlayer.Character then
                OrionLib:MakeNotification({
                    Name = "Teleporting",
                    Content = "Teleporting to " .. selectedPlayer,
                    Image = "info", -- Using icon name instead of rbxassetid
                    Time = 5
                })
                
                -- Teleport logic would go here
                game.Players.LocalPlayer.Character:SetPrimaryPartCFrame(targetPlayer.Character.HumanoidRootPart.CFrame)
            end
        else
            OrionLib:MakeNotification({
                Name = "Error",
                Content = "Please select a valid player first",
                Image = "rbxassetid://7734110484",
                Time = 5
            })
        end
    end    
})

-- Create Game section
local GameTab = Window:MakeTab({
    Name = "Game Options",
    Icon = "gamepad", -- Using icon name instead of rbxassetid
    PremiumOnly = false
})

-- Create About Tab
local AboutTab = Window:MakeTab({
    Name = "About",
    Icon = "info", -- Using icon name instead of rbxassetid
    PremiumOnly = false
})

AboutTab:AddParagraph("SkyX Enhanced OrionX UI", "This script showcases the new features added to the OrionX UI Library by SkyX Modded.")

AboutTab:AddParagraph("New Features", [[• Improved theme with modern styling
• Auto-save system that saves changes every 30 seconds
• Backup creation every 5 minutes
• Enhanced animations for UI elements
• Better notification system
• SkyX branding integration]])

AboutTab:AddParagraph("Configuration", "Settings are automatically saved to the SkyXConfig folder and will persist between sessions.")

-- Credits
AboutTab:AddButton({
    Name = "Copy Discord Link",
    Callback = function()
        -- This would copy a Discord link to clipboard in a real executor
        OrionLib:MakeNotification({
            Name = "Discord Link",
            Content = "Discord invite link copied to clipboard!",
            Image = "rbxassetid://7733964148",
            Time = 5
        })
    end    
})

-- Initialize library to trigger intro sequence and auto-save system
OrionLib:Init()

-- Welcome notification after a delay
wait(2) -- Wait for intro to finish
OrionLib:MakeNotification({
    Name = "Welcome",
    Content = "Welcome to the SkyX Enhanced Executor! Explore the tabs to discover all features.",
    Image = "rocket", -- Using icon name instead of rbxassetid
    Time = 7
})
