--[[
    SkyX MM2 Module Loader
    Mobile-Optimized Advanced Script with Modular Design
    
    This script loads all necessary modules from GitHub and initializes them.
    It's design to work with all mobile executors and provide a smooth experience.
]]

-- SkyX MM2 Module Loader
local SkyXModuleLoader = {}

-- GitHub repository information - Direct URLs
SkyXModuleLoader.ModuleURLs = {
    ESP = "https://raw.githubusercontent.com/SkyXhub/modularsystem.lua/refs/heads/main/esp.lua",
    CoinCollector = "https://raw.githubusercontent.com/SkyXhub/modularsystem.lua/refs/heads/main/coin.lua",
    MurderDetection = "https://raw.githubusercontent.com/SkyXhub/modularsystem.lua/refs/heads/main/MurderDetection%20.lua",
    Teleport = "https://raw.githubusercontent.com/SkyXhub/modularsystem.lua/refs/heads/main/SkyX_Teleport_Module.lua",
    AntiBan = "https://raw.githubusercontent.com/SkyXhub/modularsystem.lua/refs/heads/main/Anti-Ban.lua"
}

-- Loaded modules
SkyXModuleLoader.Modules = {
    ESP = nil,
    CoinCollector = nil,
    MurderDetection = nil,
    Teleport = nil,
    AntiBan = nil
}

-- Services
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

-- Check if on mobile device
local IsMobile = UserInputService.TouchEnabled and not UserInputService.MouseEnabled
local DeviceText = IsMobile and "Mobile" or "PC"

-- Print welcome message
print("SkyX MM2 Module Loader - Initializing for " .. DeviceText)

-- Function to load a module directly from URL
function SkyXModuleLoader.LoadModule(moduleName)
    -- Get the direct URL for the module
    local url = SkyXModuleLoader.ModuleURLs[moduleName]
    if not url then
        print("SkyX Error: No URL found for module: " .. moduleName)
        return nil
    end
    
    -- Fetch module code
    local success, content = pcall(function()
        return game:HttpGet(url)
    end)
    
    if not success then
        print("SkyX Error: Failed to fetch module from URL: " .. url)
        return nil
    end
    
    -- Load module
    local success, moduleOrError = pcall(function()
        return loadstring(content)()
    end)
    
    if success then
        print("SkyX Success: Loaded module: " .. moduleName)
        return moduleOrError
    else
        print("SkyX Error: Failed to initialize module: " .. moduleName)
        print(moduleOrError)
        return nil
    end
end

-- Function to load all modules
function SkyXModuleLoader.LoadAllModules()
    -- Load Anti-Ban module first
    SkyXModuleLoader.Modules.AntiBan = SkyXModuleLoader.LoadModule("AntiBan")
    
    -- Start anti-ban protection immediately
    if SkyXModuleLoader.Modules.AntiBan then
        SkyXModuleLoader.Modules.AntiBan.Start()
    end
    
    -- Load other modules
    SkyXModuleLoader.Modules.ESP = SkyXModuleLoader.LoadModule("ESP")
    SkyXModuleLoader.Modules.CoinCollector = SkyXModuleLoader.LoadModule("CoinCollector")
    SkyXModuleLoader.Modules.MurderDetection = SkyXModuleLoader.LoadModule("MurderDetection")
    SkyXModuleLoader.Modules.Teleport = SkyXModuleLoader.LoadModule("Teleport")
    
    -- Set up module dependencies
    if SkyXModuleLoader.Modules.MurderDetection and SkyXModuleLoader.Modules.ESP then
        SkyXModuleLoader.Modules.MurderDetection.SetESPModule(SkyXModuleLoader.Modules.ESP)
    end
    
    if SkyXModuleLoader.Modules.Teleport and SkyXModuleLoader.Modules.MurderDetection then
        SkyXModuleLoader.Modules.Teleport.SetMurderDetectionModule(SkyXModuleLoader.Modules.MurderDetection)
    end
    
    -- Start modules
    if SkyXModuleLoader.Modules.ESP then
        SkyXModuleLoader.Modules.ESP.Settings.Enabled = true
        SkyXModuleLoader.Modules.ESP.Start()
    end
    
    if SkyXModuleLoader.Modules.CoinCollector then
        SkyXModuleLoader.Modules.CoinCollector.Settings.ESP.Enabled = true
        SkyXModuleLoader.Modules.CoinCollector.Start()
    end
    
    if SkyXModuleLoader.Modules.MurderDetection then
        SkyXModuleLoader.Modules.MurderDetection.Settings.Enabled = true
        SkyXModuleLoader.Modules.MurderDetection.Start()
    end
    
    if SkyXModuleLoader.Modules.Teleport then
        SkyXModuleLoader.Modules.Teleport.Start()
    end
    
    return true
end

-- Create SkyX UI to control modules
function SkyXModuleLoader.CreateUI()
    -- Core UI elements
    local SkyXUI = Instance.new("ScreenGui")
    SkyXUI.Name = "SkyXModularUI"
    SkyXUI.ResetOnSpawn = false
    
    -- Handle different executor security models
    if syn then
        syn.protect_gui(SkyXUI)
        SkyXUI.Parent = game.CoreGui
    else
        SkyXUI.Parent = gethui() or game.CoreGui
    end
    
    -- Remove any existing UIs with the same name
    for _, Interface in pairs(game.CoreGui:GetChildren()) do
        if Interface.Name == SkyXUI.Name and Interface ~= SkyXUI then
            Interface:Destroy()
        end
    end
    
    -- Placeholder for your Orion UI code
    -- In a real implementation, this would be replaced with your actual UI library code
    local MainFrame = Instance.new("Frame")
    MainFrame.Name = "MainFrame"
    MainFrame.Size = UDim2.new(0, 500, 0, 350)
    MainFrame.Position = UDim2.new(0.5, -250, 0.5, -175)
    MainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    MainFrame.BorderSizePixel = 0
    MainFrame.Parent = SkyXUI
    
    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 8)
    UICorner.Parent = MainFrame
    
    local TitleBar = Instance.new("Frame")
    TitleBar.Name = "TitleBar"
    TitleBar.Size = UDim2.new(1, 0, 0, 40)
    TitleBar.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    TitleBar.BorderSizePixel = 0
    TitleBar.Parent = MainFrame
    
    local TitleBarCorner = Instance.new("UICorner")
    TitleBarCorner.CornerRadius = UDim.new(0, 8)
    TitleBarCorner.Parent = TitleBar
    
    local CornerFix = Instance.new("Frame")
    CornerFix.Name = "CornerFix"
    CornerFix.Size = UDim2.new(1, 0, 0, 10)
    CornerFix.Position = UDim2.new(0, 0, 1, -10)
    CornerFix.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    CornerFix.BorderSizePixel = 0
    CornerFix.Parent = TitleBar
    
    local TitleText = Instance.new("TextLabel")
    TitleText.Name = "Title"
    TitleText.Size = UDim2.new(1, -40, 1, 0)
    TitleText.Position = UDim2.new(0, 15, 0, 0)
    TitleText.BackgroundTransparency = 1
    TitleText.Font = Enum.Font.GothamBold
    TitleText.TextSize = 16
    TitleText.TextColor3 = Color3.fromRGB(255, 255, 255)
    TitleText.TextXAlignment = Enum.TextXAlignment.Left
    TitleText.Text = "SkyX MM2 Modular - " .. DeviceText .. " Edition"
    TitleText.Parent = TitleBar
    
    local CloseButton = Instance.new("TextButton")
    CloseButton.Name = "CloseButton"
    CloseButton.Size = UDim2.new(0, 30, 0, 30)
    CloseButton.Position = UDim2.new(1, -35, 0, 5)
    CloseButton.BackgroundColor3 = Color3.fromRGB(255, 50, 50)
    CloseButton.BorderSizePixel = 0
    CloseButton.Font = Enum.Font.GothamBold
    CloseButton.TextSize = 16
    CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    CloseButton.Text = "X"
    CloseButton.Parent = TitleBar
    
    local CloseButtonCorner = Instance.new("UICorner")
    CloseButtonCorner.CornerRadius = UDim.new(0, 6)
    CloseButtonCorner.Parent = CloseButton
    
    -- Content area
    local ContentFrame = Instance.new("Frame")
    ContentFrame.Name = "ContentFrame"
    ContentFrame.Size = UDim2.new(1, 0, 1, -40)
    ContentFrame.Position = UDim2.new(0, 0, 0, 40)
    ContentFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    ContentFrame.BorderSizePixel = 0
    ContentFrame.Parent = MainFrame
    
    local StatusText = Instance.new("TextLabel")
    StatusText.Name = "StatusText"
    StatusText.Size = UDim2.new(1, -20, 0, 30)
    StatusText.Position = UDim2.new(0, 10, 0, 10)
    StatusText.BackgroundTransparency = 1
    StatusText.Font = Enum.Font.GothamSemibold
    StatusText.TextSize = 14
    StatusText.TextColor3 = Color3.fromRGB(255, 255, 255)
    StatusText.Text = "Modules loaded successfully! Use your Orion UI to control them."
    StatusText.Parent = ContentFrame
    
    local InfoText = Instance.new("TextLabel")
    InfoText.Name = "InfoText"
    InfoText.Size = UDim2.new(1, -20, 0, 250)
    InfoText.Position = UDim2.new(0, 10, 0, 50)
    InfoText.BackgroundTransparency = 1
    InfoText.Font = Enum.Font.Gotham
    InfoText.TextSize = 14
    InfoText.TextColor3 = Color3.fromRGB(200, 200, 200)
    InfoText.TextXAlignment = Enum.TextXAlignment.Left
    InfoText.TextYAlignment = Enum.TextYAlignment.Top
    InfoText.TextWrapped = true
    InfoText.Text = [[
Loaded Modules:
✓ Enhanced ESP with Role Prediction
✓ Advanced Coin Collector
✓ Murder Detection & Warning System
✓ Anti-Detection Teleportation
✓ Military-Grade Anti-Ban Protection

This is a placeholder UI. In the full version, 
all modules are controlled through your Orion UI.

Add your existing Orion UI code in the CreateUI function
for a complete experience.
    ]]
    InfoText.Parent = ContentFrame
    
    -- Make UI draggable
    local dragging = false
    local dragStart, startPos
    
    TitleBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = MainFrame.Position
            
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)
    
    TitleBar.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            local delta = input.Position - dragStart
            MainFrame.Position = UDim2.new(
                startPos.X.Scale, 
                startPos.X.Offset + delta.X, 
                startPos.Y.Scale, 
                startPos.Y.Offset + delta.Y
            )
        end
    end)
    
    -- Close button
    CloseButton.MouseButton1Click:Connect(function()
        SkyXUI:Destroy()
    end)
    
    -- Return UI elements
    return {
        UI = SkyXUI,
        MainFrame = MainFrame,
        StatusText = StatusText,
        InfoText = InfoText
    }
end

-- Initialize everything
function SkyXModuleLoader.Initialize()
    -- Load all modules
    local success = SkyXModuleLoader.LoadAllModules()
    
    if success then
        -- Create UI
        SkyXModuleLoader.UI = SkyXModuleLoader.CreateUI()
        
        -- Notification for full initialization
        print("SkyX MM2 Module Loader - All modules loaded successfully!")
        
        -- Return the loader for external control
        return SkyXModuleLoader
    else
        print("SkyX Error: Failed to load all modules")
        return nil
    end
end

-- Start the loader
return SkyXModuleLoader.Initialize()
