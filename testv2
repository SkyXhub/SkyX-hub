-- SkyX Blox Fruits Script with SpeedHub X UI

local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/AhmadV99/Main/main/Library/V3.5"))()
loadstring(game:HttpGet("https://raw.githubusercontent.com/AhmadV99/Speed-Hub-X/main/Settings.lua"))()

local Window = Library:Start({
  ["Name"] = "SkyX Hub | " .. Version,
  ["SaveFolder"] = "SkyX Hub"
})

game.StarterGui:SetCore("SendNotification", {Title = "Script Status", Text = "Loading SkyX Hub...", Icon = "rbxassetid://0", Duration = 10})

local SpeedHubX = {}

local Funcs = {} do
  function Funcs:AddToggle(Section, Name, Content, Default)
    return Section:Toggle({
      ["Title"] = Name,
      ["Content"] = Content,
      ["Default"] = Default,
      ["Callback"] = function(Value)
        SpeedHubX[Name] = Value
      end,
      ["Flag"] = "SPD/Toggle/" .. tostring(Name)
    })
  end

  function Funcs:AddDropdown(Section, Name, Multi, Options, Default)
    return Section:Dropdown({
      ["Title"] = Name,
      ["Multi"] = Multi,
      ["Options"] = Options,
      ["Default"] = Default,
      ["PlaceHolderText"] = "Select Options",
      ["Callback"] = function(Value)
        if not Multi and type(Value) == "table" then
          for _, v in next, Value do
            SpeedHubX[Name] = v
          end
        else
          SpeedHubX[Name] = Value
        end
      end
    })
  end

  function Funcs:AddSlider(Section, Name, Content, Min, Max, Increment, Default)
    return Section:Slider({
      ["Title"] = Name,
      ["Content"] = Content,
      ["Min"] = Min,
      ["Max"] = Max,
      ["Increment"] = Increment,
      ["Default"] = Default,
      ["Callback"] = function(Value)
        SpeedHubX[Name] = Value
      end
    })
  end

  function Funcs:AddTextbox(Section, Name, Content, Default, ClearText)
    return Section:TextInput({
      ["Title"] = Name,
      ["Content"] = Content,
      ["PlaceHolderText"] = "Enter your text here...",
      ["ClearTextOnFocus"] = ClearText,
      ["Default"] = Default,
      ["Callback"] = function(Value)
        SpeedHubX[Name] = Value
      end
    })
  end

  function Funcs:AddButton(Section, Name, Content, Callback)
    return Section:Button({
      ["Title"] = Name,
      ["Content"] = Content,
      ["Callback"] = Callback
    })  
  end
end

local Players = game:GetService("Players")
local Lighting = game:GetService("Lighting")
local TeleportService = game:GetService("TeleportService")
local Workspace = game:GetService("Workspace")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local Player = Players.LocalPlayer
local Enemies = Workspace:WaitForChild("Enemies")
local Remotes = ReplicatedStorage:WaitForChild("Remotes")
local CommF_ = Remotes:WaitForChild("CommF_")
local Map = Workspace:WaitForChild("Map")
local WorldOrigin = Workspace:WaitForChild("_WorldOrigin")
local NPCs = Workspace:WaitForChild("NPCs")

local _setclipboard = setclipboard or (function()end)
local _hookfunction = hookfunction or hookfunc or (function()end)
local _require = require or (function()end)
local _getnilinstances = getnilinstances or (function()end)
local _isfile = isfile or (function()end)
local _delfile = delfile or (function()end)

local Raids = _require(ReplicatedStorage.Raids)

local _env = getgenv and getgenv() or {}

local Sea = {
  [1] = game.PlaceId == 2753915549,
  [2] = game.PlaceId == 4442272183,
  [3] = game.PlaceId == 7449423635
}
local FruitTable = {
  "Rocket Fruit",
  "Spin Fruit",
  "Chop Fruit",
  "Spring Fruit",
  "Bomb Fruit",
  "Smoke Fruit",
  "Spike Fruit",
  "Flame Fruit",
  "Falcon Fruit",
  "Ice Fruit",
  "Sand Fruit",
  "Dark Fruit",
  "Ghost Fruit",
  "Diamond Fruit",
  "Light Fruit",
  "Rubber Fruit",
  "Barrier Fruit",
  "Magma Fruit",
  "Quake Fruit",
  "Buddha Fruit",
  "Love Fruit",
  "Spider Fruit",
  "Sound Fruit",
  "Phoenix Fruit",
  "Portal Fruit",
  "Rumble Fruit",
  "Pain Fruit",
  "Blizzard Fruit",
  "Gravity Fruit",
  "Mammoth Fruit",
  "T-Rex Fruit",
  "Dough Fruit",
  "Shadow Fruit",
  "Venom Fruit",
  "Control Fruit",
  "Spirit Fruit",
  "Dragon Fruit",
  "Leopard Fruit",
  "Kitsune Fruit",
  "Gas Fruit",
  "Blade Fruit",
}

task.spawn(function()
  local Container = ReplicatedStorage.Effect.Container
  local CameraShaker = _require(ReplicatedStorage.Util.CameraShaker)
  local Death = _require(Container:FindFirstChild("Death"))
  local Respawn = _require(Container:FindFirstChild("Respawn"))
  local DisplayNPC = _require(ReplicatedStorage:FindFirstChild("GuideModule")).ChangeDisplayedNPC

  _hookfunction(Death, function()return nil end)
  _hookfunction(Respawn, function()return nil end)
  _hookfunction(DisplayNPC, function()return nil end)
  CameraShaker:Stop()
end)

_env.CodesRedeem = loadstring(game:HttpGet("https://raw.githubusercontent.com/AhmadV99/Main/main/Codes_BloxFruit"))()

_env.BossesList = function()
  local BossTable = {}
  
  local function GetBoss(Objects)
    for _, Boss in ipairs(Objects) do
      local Humanoid = Boss:FindFirstChildOfClass("Humanoid")
      if Humanoid and Humanoid.DisplayName:find("Boss") then
        table.insert(BossTable, Boss.Name)
      end
    end
  end

  GetBoss(ReplicatedStorage:GetDescendants())
  GetBoss(Enemies:GetDescendants())
  return BossTable
end

_env.CheckMob = function(Value)
  local Boolen = false

  local function GetMob(Object)
    for _, Mob in ipairs(Object) do
      if table.find(Value, Mob.Name) then
        local HD = Mob:FindFirstChild("Humanoid")
        if HD and HD.Health > 0 then
          Boolen = true
          break 
        end
      end
    end
  end

  local children = ReplicatedStorage:GetChildren()
  if not Boolen then
    GetMob(children)
  end
  if not Boolen then
    children = Enemies:GetChildren()
    GetMob(children)
  end
  return Boolen
end

_env.VerifyMaterial = function(NameC)
  for _, Item in pairs(CommF_:InvokeServer("getInventory")) do
    if Item.Type == "Material" then
      if Item.Name == NameC then
        return Item.Count
      end
    end
  end
  return 0
end

_env.IslandList = function()
  local ListName = {}
  local CheckName = {}
  local Sky = {"Sky 2","Sky 3"}

  for _, part in next, WorldOrigin.Locations:GetChildren() do
    if part and not CheckName[part.name] then
      table.insert(ListName, part.name)CheckName[part.name]=true
    end
  end
  
  if Sea[1] then
    for _, part in next, Sky do
      table.insert(ListName, part)
    end
  end

  return ListName
end

_env.NPCList = function()
  local ListNPC = {}
  local CheckName = {}

  local function CreateNPC(NPCGroup)
    for _, part in next, NPCGroup do
      local Head = part:FindFirstChild("Head")
      if Head then
        local QuestBBG = Head:FindFirstChild("QuestBBG")
        if QuestBBG and QuestBBG:FindFirstChild("Title") and not CheckName[part.Name] then
          table.insert(ListNPC, part.Name)CheckName[part.Name]=true
        end
      end
    end
  end

  CreateNPC(NPCs:GetChildren())
  CreateNPC(_getnilinstances())

  return ListNPC
end

_env.ChipsList = function()
  local ListName = {}

  for _, Raids in next, Raids.raids do
    table.insert(ListName, Raids)
  end
  for _, Raids in next, Raids.advancedRaids do
    table.insert(ListName, Raids)
  end

  return ListName
end

_env.PlayerList = function()
  local ListName = {}

  for _, v in next, Players:GetChildren() do
    table.insert(ListName, v.Name)
  end

  return ListName
end

if Sea[1] then
  _env.MaterialList = {"Angel Wings", "Leather + Scrap Metal", "Magma Ore", "Fish Tail"}
elseif Sea[2] then
  _env.MaterialList = {"Leather + Scrap Metal", "Magma Ore", "Mystic Droplet", "Radioactive Material", "Vampire Fang"}
elseif Sea[3] then
  _env.MaterialList = {"Leather + Scrap Metal", "Fish Tail", "Gunpowder", "Mini Tusk", "Conjured Cocoa", "Dragon Scale"}
end

if Sea[1] then
  _env.ItemListUpgrade = {"Cutlass", "Dual Katana", "Katana", "Iron Mace", "Shark Saw", "Triple Katana", "Dual-Headed Blade", "Pipe", "Soul Cane", "Trident", "Wardens Sword", "Bisento", "Pole (1st Form)", "Saber", "Slingshot", "Flintlock", "Musket", "Cannon", "Refined Flintlock", "Refined Musket", "Refined Slingshot", "Bazooka"}
elseif Sea[2] then
  _env.ItemListUpgrade = {"Dragon Trident", "Gravity Cane", "Jitte", "Longsword", "Koko", "Midnight Blade", "Pole (2nd Form)", "Rengoku", "Saddi", "Shisui", "Wando", "True Triple Katana", "Acidum Rifle", "Bizarre Rifle", "Kabucha"}
elseif Sea[3] then
  _env.ItemListUpgrade = {"Twin Hooks", "Buddy Sword", "Canvander", "Dark Dagger", "Fox Lamp", "Shark Anchor", "Spikey Trident", "Tushita", "Yama", "Cursed Dual Katana", "Hallow Scythe", "Serpent Bow", "Soul Guitar"}
end

local ShopTable = {
  {"Frags", {
    {"Race Rerol", {"BlackbeardReward", "Reroll", "2"}},
    {"Reset Stats", {"BlackbeardReward", "Refund", "2"}}
  }},
  {"Fighting Style", {
    {"Buy Black Leg", {"BuyBlackLeg"}},
    {"Buy Electro", {"BuyElectro"}},
    {"Buy Fishman Karate", {"BuyFishmanKarate"}},
    {"Buy Dragon Claw", {"BlackbeardReward", "DragonClaw", "2"}},
    {"Buy Superhuman", {"BuySuperhuman"}},
    {"Buy Death Step", {"BuyDeathStep"}},
    {"Buy Sharkman Karate", {"BuySharkmanKarate"}},
    {"Buy Electric Claw", {"BuyElectricClaw"}},
    {"Buy Dragon Talon", {"BuyDragonTalon"}},
    {"Buy GodHuman", {"BuyGodhuman"}},
    {"Buy Sanguine Art", {"BuySanguineArt"}}
  }},
  {"Ability Teacher", {
    {"Buy Geppo", {"BuyHaki", "Geppo"}},
    {"Buy Buso", {"BuyHaki", "Buso"}},
    {"Buy Soru", {"BuyHaki", "Soru"}},
    {"Buy Ken", {"KenTalk", "Buy"}}
  }},
  {"Sword", {
    {"Buy Katana", {"BuyItem", "Katana"}},
    {"Buy Cutlass", {"BuyItem", "Cutlass"}},
    {"Buy Dual Katana", {"BuyItem", "Dual Katana"}},
    {"Buy Iron Mace", {"BuyItem", "Iron Mace"}},
    {"Buy Triple Katana", {"BuyItem", "Triple Katana"}},
    {"Buy Pipe", {"BuyItem", "Pipe"}},
    {"Buy Dual-Headed Blade", {"BuyItem", "Dual-Headed Blade"}},
    {"Buy Soul Cane", {"BuyItem", "Soul Cane"}},
    {"Buy Bisento", {"BuyItem", "Bisento"}}
  }},
  {"Gun", {
    {"Buy Musket", {"BuyItem", "Musket"}},
    {"Buy Slingshot", {"BuyItem", "Slingshot"}},
    {"Buy Flintlock", {"BuyItem", "Flintlock"}},
    {"Buy Refined Slingshot", {"BuyItem", "Refined Slingshot"}},
    {"Buy Refined Flintlock", {"BuyItem", "Refined Flintlock"}},
    {"Buy Cannon", {"BuyItem", "Cannon"}},
    {"Buy Kabucha", {"BlackbeardReward", "Slingshot", "2"}}
  }},
  {"Accessories", {
    {"Buy Black Cape", {"BuyItem", "Black Cape"}},
    {"Buy Swordsman Hat", {"BuyItem", "Swordsman Hat"}},
    {"Buy Tomoe Ring", {"BuyItem", "Tomoe Ring"}}
  }},
  {"Race", {
    {"Ghoul Race", {"Ectoplasm", "Change", 4}},
    {"Cyborg Race", {"CyborgTrainer", "Buy"}}
  }}
}

_env.FruitList = function()
  local ListName = {}

  for _, Fruit in next, CommF_:InvokeServer("GetFruits") do
    table.insert(ListName, Fruit.Name)
  end

  return ListName
end

local _home = Window:MakeTab("Home") do
  local _info = _home:Section({["Title"] = "Information", ["Content"] = ""}) do
    Funcs:AddButton(_info, "Discord Invite", "Click to copy invite server", function()
      _setclipboard(Discord)
    end)

    _info:Seperator("Status")

    local _timeServer = _info:Paragraph({["Title"] = "Time Server", ["Content"] = "" })
    task.spawn(function()
      while task.wait(2) do
        _timeServer:Set({
          ["Title"] = "Time Server",
          ["Content"] = tostring(Lighting.TimeOfDay)
        })
      end
    end)
  end

  local _localplayer = _home:Section({["Title"] = "LocalPlayer", ["Content"] = ""}) do
    Funcs:AddDropdown(_localplayer, "Set WalkSpeed", false, {"100", "200", "300", "400", "500"}, {"300"})
    Funcs:AddToggle(_localplayer, "Enable WalkSpeed", "", false)
    Funcs:AddToggle(_localplayer, "Anti-Knockback", "", false)
    Funcs:AddToggle(_localplayer, "Anti-Busy", "", true)
  end

  local _config = _home:Section({["Title"] = "Config", ["Content"] = ""}) do
    _config:Seperator("Weapon")
    Funcs:AddDropdown(_config, "Weapon Tool", false, {"Melee","Sword","Blox Fruit","Gun"}, {"Melee"})
    _config:Seperator("Tween/Distance")
    Funcs:AddDropdown(_config, "Farm Distance", false, {"10", "20", "30", "40", "50", "60"}, {"40"})
    Funcs:AddDropdown(_config, "Tween Speed", false, {"100", "200", "300", "400", "500"}, {"200"})
    _config:Seperator("Bring Mob")
    Funcs:AddToggle(_config, "Bring Mob", "", true)
    Funcs:AddDropdown(_config, "Bring Mob Radius", false, {"100", "200", "300", "400", "500"}, {"200"})
    _config:Seperator("Fast Attack")
    Funcs:AddToggle(_config, "Fast Attack", "", true)
    Funcs:AddDropdown(_config, "Fast Attack Delay", false, {"0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10"}, {"0"})
    _config:Seperator("Other")
    Funcs:AddToggle(_config, "Hop if Admin or Staff", "", true)
    Funcs:AddToggle(_config, "Auto Dodge Skill", "", false)
    _config:Seperator("Active Race")
    Funcs:AddToggle(_config, "Auto Active Race (V4)", "", false)
  end
end

local _farm = Window:MakeTab("Farm") do
  local _main = _farm:Section({["Title"] = "Main Farm", ["Content"] = ""}) do
    Funcs:AddToggle(_main, "Auto Farm Level", "", false)
    Funcs:AddToggle(_main, "Auto Farm Fruit Mastery", "", false)
    Funcs:AddToggle(_main, "Auto Farm Gun Mastery", "", false)
    Funcs:AddToggle(_main, "Auto Farm Nearest Mob", "", false)
  end

  local _mastery = _farm:Section({["Title"] = "Mastery Setting", ["Content"] = ""}) do
    Funcs:AddSlider(_mastery, "Kill At", "Kill mob when it reaches this percentage of health", 0, 100, 1, 25)
    Funcs:AddToggle(_mastery, "Skill Z", "", true)
    Funcs:AddToggle(_mastery, "Skill X", "", true)
    Funcs:AddToggle(_mastery, "Skill C", "", true)
    Funcs:AddToggle(_mastery, "Skill V", "", true)
    Funcs:AddToggle(_mastery, "Skill F", "", false)
  end

  local _quests = _farm:Section({["Title"] = "Quests", ["Content"] = ""}) do
    Funcs:AddToggle(_quests, "Auto Quest", "", true)
    Funcs:AddToggle(_quests, "Auto Quest Boss", "", true)
  end

  local _bosses = _farm:Section({["Title"] = "Bosses", ["Content"] = ""}) do
    Funcs:AddDropdown(_bosses, "Select Boss", false, _env.BossesList(), {_env.BossesList()[1]})
    Funcs:AddToggle(_bosses, "Auto Farm Boss", "", false)
    Funcs:AddToggle(_bosses, "Auto Farm All Boss", "", false)
  end

  local _materials = _farm:Section({["Title"] = "Materials", ["Content"] = ""}) do
    Funcs:AddDropdown(_materials, "Select Material", false, _env.MaterialList, {_env.MaterialList[1]})
    Funcs:AddToggle(_materials, "Auto Farm Material", "", false)
  end
end

local _island = Window:MakeTab("Island") do
  local _teleport = _island:Section({["Title"] = "Teleport", ["Content"] = ""}) do
    Funcs:AddDropdown(_teleport, "Select Island", false, _env.IslandList(), {_env.IslandList()[1]})
    Funcs:AddButton(_teleport, "Teleport to Island", "", function()
      -- Teleport function would go here
    end)
  end
end

local _stats = Window:MakeTab("Stats") do
  local _points = _stats:Section({["Title"] = "Stats Points", ["Content"] = ""}) do
    Funcs:AddToggle(_points, "Auto Stats Melee", "", false)
    Funcs:AddToggle(_points, "Auto Stats Defense", "", false)
    Funcs:AddToggle(_points, "Auto Stats Sword", "", false)
    Funcs:AddToggle(_points, "Auto Stats Gun", "", false)
    Funcs:AddToggle(_points, "Auto Stats Devil Fruit", "", false)
  end

  local _custom = _stats:Section({["Title"] = "Custom Stats", ["Content"] = ""}) do
    Funcs:AddSlider(_custom, "Melee Points", "", 0, 2500, 1, 0)
    Funcs:AddSlider(_custom, "Defense Points", "", 0, 2500, 1, 0)
    Funcs:AddSlider(_custom, "Sword Points", "", 0, 2500, 1, 0)
    Funcs:AddSlider(_custom, "Gun Points", "", 0, 2500, 1, 0)
    Funcs:AddSlider(_custom, "Devil Fruit Points", "", 0, 2500, 1, 0)
    Funcs:AddToggle(_custom, "Auto Custom Stats", "", false)
  end
end

local _combat = Window:MakeTab("Combat") do
  local _players = _combat:Section({["Title"] = "Players", ["Content"] = ""}) do
    Funcs:AddDropdown(_players, "Select Player", false, _env.PlayerList(), {_env.PlayerList()[1]})
    Funcs:AddToggle(_players, "Spectate Player", "", false)
    Funcs:AddToggle(_players, "Teleport to Player", "", false)
    Funcs:AddToggle(_players, "Auto Farm Player", "", false)
  end
end

local _devil = Window:MakeTab("Devil Fruits") do
  local _manager = _devil:Section({["Title"] = "Devil Fruit Manager", ["Content"] = ""}) do
    Funcs:AddToggle(_manager, "Auto Random Fruit", "", false)
    Funcs:AddToggle(_manager, "Auto Store Fruit", "", false)
    Funcs:AddDropdown(_manager, "Select Devil Fruit", false, FruitTable, {FruitTable[1]})
    Funcs:AddToggle(_manager, "Auto Buy Devil Fruit", "", false)
    Funcs:AddToggle(_manager, "Auto Raid Devil Fruit", "", false)
  end

  local _esp = _devil:Section({["Title"] = "ESP", ["Content"] = ""}) do
    Funcs:AddToggle(_esp, "ESP Devil Fruit", "", false)
    Funcs:AddToggle(_esp, "ESP Island", "", false)
    Funcs:AddToggle(_esp, "ESP Flower", "", false)
    Funcs:AddToggle(_esp, "ESP Chest", "", false)
  end
end

local _raid = Window:MakeTab("Raid") do
  local _dungeon = _raid:Section({["Title"] = "Dungeon", ["Content"] = ""}) do
    Funcs:AddDropdown(_dungeon, "Select Microchip", false, _env.ChipsList(), {_env.ChipsList()[1]})
    Funcs:AddToggle(_dungeon, "Auto Raid", "", false)
    Funcs:AddToggle(_dungeon, "Auto Awakener", "", false)
    Funcs:AddToggle(_dungeon, "Auto Next Place", "", true)
    Funcs:AddToggle(_dungeon, "Kill Aura", "", false)
  end
end

local _shop = Window:MakeTab("Shop") do
  for _, Shop in next, ShopTable do
    local _shop_section = _shop:Section({["Title"] = Shop[1], ["Content"] = ""}) do
      for _, Item in next, Shop[2] do
        Funcs:AddButton(_shop_section, Item[1], "", function()
          CommF_:InvokeServer(unpack(Item[2]))
        end)
      end
    end
  end
end

local _misc = Window:MakeTab("Misc") do
  local _codes = _misc:Section({["Title"] = "Codes", ["Content"] = ""}) do
    Funcs:AddButton(_codes, "Redeem All Codes", "", function()
      if _env.CodesRedeem then
        for _, Code in next, _env.CodesRedeem do
          CommF_:InvokeServer("Redeem", Code)
        end
      end
    end)
  end
  
  local _haki = _misc:Section({["Title"] = "Haki", ["Content"] = ""}) do
    Funcs:AddToggle(_haki, "Auto Buy Haki Colors", "", false)
    Funcs:AddToggle(_haki, "Auto Active Haki", "", true)
  end

  local _server = _misc:Section({["Title"] = "Server", ["Content"] = ""}) do
    Funcs:AddButton(_server, "Rejoin Server", "", function()
      TeleportService:Teleport(game.PlaceId, Player)
    end)
    Funcs:AddButton(_server, "Server Hop", "", function()
      -- Server hop function would go here
    end)
    Funcs:AddButton(_server, "Hop to Lower Player", "", function()
      -- Hop to lower player count server function would go here
    end)
  end
end

-- Initialize implementation functions
task.spawn(function()
  while task.wait() do
    -- Enable WalkSpeed if toggled
    if SpeedHubX["Enable WalkSpeed"] and Player.Character and Player.Character:FindFirstChild("Humanoid") then
      Player.Character.Humanoid.WalkSpeed = tonumber(SpeedHubX["Set WalkSpeed"] or 16)
    end
    
    -- Add more implementation functions here
  end
end)

-- Game notification
game:GetService("StarterGui"):SetCore("SendNotification", {
  Title = "SkyX Hub",
  Text = "Blox Fruits script loaded successfully! Made by SkyX Team",
  Duration = 5
})
