local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Rayfield/main/source'))()

local Window = Rayfield:CreateWindow({
   Name = "Combat Exploits",
   LoadingTitle = "Loading Aimbot...",
   LoadingSubtitle = "by SkyX",
   ConfigurationSaving = {
      Enabled = true,
      FolderName = "CombatConfig",
      FileName = "Config"
   }
})

local AimbotTab = Window:CreateTab("Aimbot", 4483362458)
local MovementTab = Window:CreateTab("Movement", 4483362458)

-- Aimbot settings
local AimbotEnabled = false
local AimPart = "Head"
local TeamCheck = true
local AimRadius = 250
local Sensitivity = 0.2

-- Aimbot implementation
local function GetClosestPlayer()
    local ClosestDistance = AimRadius
    local ClosestPlayer = nil
    
    for _, player in pairs(game:GetService("Players"):GetPlayers()) do
        if player ~= game.Players.LocalPlayer then
            if not TeamCheck or player.Team ~= game.Players.LocalPlayer.Team then
                if player.Character and player.Character:FindFirstChild("HumanoidRootPart") and player.Character:FindFirstChild(AimPart) then
                    local pos = game.Workspace.CurrentCamera:WorldToViewportPoint(player.Character[AimPart].Position)
                    local magnitude = (Vector2.new(pos.X, pos.Y) - Vector2.new(game.Players.LocalPlayer:GetMouse().X, game.Players.LocalPlayer:GetMouse().Y)).Magnitude
                    
                    if magnitude < ClosestDistance then
                        ClosestPlayer = player
                        ClosestDistance = magnitude
                    end
                end
            end
        end
    end
    
    return ClosestPlayer
end

-- Add aimbot toggle to UI
AimbotTab:CreateToggle({
   Name = "Enable Aimbot",
   CurrentValue = false,
   Flag = "AimbotEnabled",
   Callback = function(Value)
       AimbotEnabled = Value
   end,
})

AimbotTab:CreateDropdown({
   Name = "Aim Part",
   Options = {"Head", "HumanoidRootPart", "Torso"},
   CurrentOption = "Head",
   Flag = "AimPart",
   Callback = function(Value)
       AimPart = Value
   end,
})

AimbotTab:CreateToggle({
   Name = "Team Check",
   CurrentValue = true,
   Flag = "TeamCheck",
   Callback = function(Value)
       TeamCheck = Value
   end,
})

AimbotTab:CreateSlider({
   Name = "Aim Radius",
   Range = {50, 500},
   Increment = 10,
   Suffix = "px",
   CurrentValue = 250,
   Flag = "AimRadius",
   Callback = function(Value)
       AimRadius = Value
   end,
})

AimbotTab:CreateSlider({
   Name = "Smoothness",
   Range = {0.1, 1},
   Increment = 0.1,
   Suffix = "x",
   CurrentValue = 0.2,
   Flag = "Smoothness",
   Callback = function(Value)
       Sensitivity = Value
   end,
})

-- Implement aimbot
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local IsAiming = false

UserInputService.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton2 then
        IsAiming = true
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton2 then
        IsAiming = false
    end
end)

RunService.RenderStepped:Connect(function()
    if AimbotEnabled and IsAiming then
        local ClosestPlayer = GetClosestPlayer()
        if ClosestPlayer and ClosestPlayer.Character and Clos
