--[[
    🌊 SkyX Hub - Blox Fruits (Improved Auto Farm) 🌊
    
    Auto Farm with quest automation using Fluent UI
    Fixed implementation with ReworkX features added
eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee    Mobile-compatible with optimized performance
]]

-- Check if we're in Blox Fruits
if game.PlaceId ~= 2753915549 and game.PlaceId ~= 4442272183 and game.PlaceId ~= 7449423635 then
    -- Wrong game notification
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "SkyX Hub",
        Text = "This script is designed for Blox Fruits!",
        Duration = 5
    })
    return
end

print("=== SkyX Hub - Blox Fruits (Fluent UI) ===")
print("Starting script...")

-- Services
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local VirtualUser = game:GetService("VirtualUser")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

-- Player references
local LocalPlayer = Players.LocalPlayer
local Character

-- Handle character references differently in standalone mode
if isRoblox then
    Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    local Humanoid = Character:WaitForChild("Humanoid")
    local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")
else
    Character = LocalPlayer.Character -- Already defined in the mock environment
    print("Using simulated character in standalone mode")
end

-- Anti-AFK
if isRoblox then
    Players.LocalPlayer.Idled:connect(function()
        VirtualUser:Button2Down(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
        wait(1)
        VirtualUser:Button2Up(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
    end)
end

-- Load Fluent UI Library
local Fluent = isRoblox and loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))() or {}
local SaveManager = isRoblox and loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))() or {}
local InterfaceManager = isRoblox and loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))() or {}

if not isRoblox then
    -- Mock Fluent UI
    print("Creating mock Fluent UI Library for standalone mode")
    Fluent = {
        Options = {},
        Notify = function(self, params)
            print("Notification: " .. (params.Title or ""))
            print("  " .. (params.Content or ""))
            print("  Duration: " .. (params.Duration or 3) .. "s")
        end,
        CreateWindow = function(self, params)
            print("Creating Fluent window: " .. (params.Title or "Unnamed Window"))
            return {
                AddTab = function(self, params)
                    print("  Creating tab: " .. (params.Title or "Unnamed Tab"))
                    return {
                        AddParagraph = function(self, title, content)
                            print("    Adding paragraph: " .. (title or "Unnamed Paragraph"))
                            return {}
                        end,
                        AddToggle = function(self, params)
                            print("    Adding toggle: " .. (params.Title or "Unnamed Toggle"))
                            return {
                                Set = function(self, value) end
                            }
                        end,
                        AddDropdown = function(self, params)
                            print("    Adding dropdown: " .. (params.Title or "Unnamed Dropdown"))
                            return {
                                Set = function(self, value) end
                            }
                        end,
                        AddSlider = function(self, params)
                            print("    Adding slider: " .. (params.Title or "Unnamed Slider") .. " (Range: " .. (params.Min or 0) .. "-" .. (params.Max or 100) .. ")")
                            return {
                                Set = function(self, value) end
                            }
                        end,
                        AddButton = function(self, params)
                            print("    Adding button: " .. (params.Title or "Unnamed Button"))
                            return {}
                        end,
                        AddLabel = function(self, text)
                            print("    Adding label: " .. (text or "Unnamed Label"))
                            return {
                                Set = function(self, text) end
                            }
                        end
                    }
                end,
                SelectTab = function(self, index) 
                    print("  Selected tab")
                end
            }
        end
    }
    
    SaveManager = {
        SetLibrary = function(self, lib) end,
        IgnoreThemeSettings = function(self) end,
        SetIgnoreIndexes = function(self, indexes) end,
        SetFolder = function(self, folder) end,
        BuildConfigSection = function(self, tab) end,
        Save = function(self, name) end,
        Load = function(self, name) end
    }
    
    InterfaceManager = {
        SetLibrary = function(self, lib) end,
        SetFolder = function(self, folder) end,
        BuildInterfaceSection = function(self, tab) end
    }
end

-- Utility functions
local function AddComma(amount)
    local formatted = amount
    while true do
        formatted, k = string.gsub(formatted, "^(-?%d+)(%d%d%d)", '%1,%2')
        if (k == 0) then break end
    end
    return formatted
end

-- Sea world detection
local First_Sea = false
local Second_Sea = false
local Third_Sea = false

if game.PlaceId == 2753915549 then
    First_Sea = true
elseif game.PlaceId == 4442272183 then
    Second_Sea = true
elseif game.PlaceId == 7449423635 then
    Third_Sea = true
end

-- Flag Player Anti-Ban
function AntiBan()
    for i,v in pairs(game:GetService("Players").LocalPlayer.Character:GetDescendants()) do
        if v:IsA("LocalScript") then
            if v.Name == "General" or v.Name == "Shiftlock" or v.Name == "FallDamage" or v.Name == "4444" or v.Name == "CamBob" or v.Name == "JumpCD" or v.Name == "Looking" or v.Name == "Run" then
                v:Destroy()
            end
        end
     end
     for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerScripts:GetDescendants()) do
        if v:IsA("LocalScript") then
            if v.Name == "RobloxMotor6DBugFix" or v.Name == "Clans" or v.Name == "Codes" or v.Name == "CustomForceField" or v.Name == "MenuBloodSp" or v.Name == "PlayerList" then
                v:Destroy()
            end
        end
     end
end

-- Call Anti-Ban function
if isRoblox then
    AntiBan()
end

-- Auto Farm settings
local FarmSettings = {
    Enabled = false,
    FarmType = "Level", -- Level, Nearest, Boss, Region
    FastAttack = true,
    AutoHaki = true,
    MobAura = false,
    AutoQuest = true,
    ChestFarm = false,
    SelectedWeapon = "Combat",
    FarmRadius = 100,
    SkillsEnabled = {
        Z = true,
        X = true,
        C = false,
        V = false
    }
}

-- Connection storage for cleanup
local Connections = {}
local ActiveTween = nil
local CurrentQuest = nil
local CurrentMob = nil
local Target = nil
local Farming = false

-- Quest data based on level
function CheckLevel()
    local Lv = game:GetService("Players").LocalPlayer.Data.Level.Value
    local Ms = ""
    local NameQuest = ""
    local QuestLv = 0
    local NameMon = ""
    local CFrameQ = CFrame.new(0, 0, 0)
    local CFrameMon = CFrame.new(0, 0, 0)
    
    if First_Sea then
        if Lv == 1 or Lv <= 9 then -- Bandit
            Ms = "Bandit"
            NameQuest = "BanditQuest1"
            QuestLv = 1
            NameMon = "Bandit"
            CFrameQ = CFrame.new(1060.9383544922, 16.455066680908, 1547.7841796875)
            CFrameMon = CFrame.new(1038.5533447266, 41.296249389648, 1576.5098876953)
        elseif Lv == 10 or Lv <= 14 then -- Monkey
            Ms = "Monkey"
            NameQuest = "JungleQuest"
            QuestLv = 1
            NameMon = "Monkey"
            CFrameQ = CFrame.new(-1601.6553955078, 36.85213470459, 153.38809204102)
            CFrameMon = CFrame.new(-1448.1446533203, 50.851993560791, 63.60718536377)
        elseif Lv == 15 or Lv <= 29 then -- Gorilla
            Ms = "Gorilla"
            NameQuest = "JungleQuest"
            QuestLv = 2
            NameMon = "Gorilla"
            CFrameQ = CFrame.new(-1601.6553955078, 36.85213470459, 153.38809204102)
            CFrameMon = CFrame.new(-1142.6488037109, 40.462348937988, -515.39227294922)
        elseif Lv == 30 or Lv <= 39 then -- Pirate
            Ms = "Pirate"
            NameQuest = "BuggyQuest1"
            QuestLv = 1
            NameMon = "Pirate"
            CFrameQ = CFrame.new(-1140.1761474609, 4.752049446106, 3827.4057617188)
            CFrameMon = CFrame.new(-1201.0881347656, 40.628940582275, 3857.5966796875)
        elseif Lv == 40 or Lv <= 59 then -- Brute
            Ms = "Brute"
            NameQuest = "BuggyQuest1"
            QuestLv = 2
            NameMon = "Brute"
            CFrameQ = CFrame.new(-1140.1761474609, 4.752049446106, 3827.4057617188)
            CFrameMon = CFrame.new(-1387.5324707031, 24.592035293579, 4100.9575195313)
        elseif Lv == 60 or Lv <= 74 then -- Desert Bandit
            Ms = "Desert Bandit"
            NameQuest = "DesertQuest"
            QuestLv = 1
            NameMon = "Desert Bandit"
            CFrameQ = CFrame.new(896.51721191406, 6.4384617805481, 4390.1494140625)
            CFrameMon = CFrame.new(984.99896240234, 16.109552383423, 4417.91015625)
        elseif Lv == 75 or Lv <= 89 then -- Desert Officer
            Ms = "Desert Officer"
            NameQuest = "DesertQuest"
            QuestLv = 2
            NameMon = "Desert Officer"
            CFrameQ = CFrame.new(896.51721191406, 6.4384617805481, 4390.1494140625)
            CFrameMon = CFrame.new(1547.1510009766, 14.452038764954, 4381.8002929688)
        elseif Lv == 90 or Lv <= 99 then -- Snow Bandit
            Ms = "Snow Bandit"
            NameQuest = "SnowQuest"
            QuestLv = 1
            NameMon = "Snow Bandit"
            CFrameQ = CFrame.new(1386.8073730469, 87.272789001465, -1298.3576660156)
            CFrameMon = CFrame.new(1356.3028564453, 105.76865386963, -1328.2418212891)
        elseif Lv == 100 or Lv <= 119 then -- Snowman
            Ms = "Snowman"
            NameQuest = "SnowQuest"
            QuestLv = 2
            NameMon = "Snowman"
            CFrameQ = CFrame.new(1386.8073730469, 87.272789001465, -1298.3576660156)
            CFrameMon = CFrame.new(1218.7956542969, 138.01184082031, -1488.0262451172)
        end
    end
    
    return {
        Ms = Ms,
        NameQuest = NameQuest,
        QuestLv = QuestLv,
        NameMon = NameMon,
        CFrameQ = CFrameQ,
        CFrameMon = CFrameMon
    }
end

-- Teleport to position function
local function Teleport(Position)
    if not isRoblox then
        print("Teleporting to simulated position")
        return
    end
    
    local Character = game.Players.LocalPlayer.Character
    if not Character or not Character:FindFirstChild("HumanoidRootPart") then return end
    
    local Distance = (Character.HumanoidRootPart.Position - Position.Position).Magnitude
    local Speed = Distance <= 250 and 300 or Distance <= 500 and 275 or Distance <= 1000 and 250 or 225
    
    local TweenInfo = TweenInfo.new(Distance / Speed, Enum.EasingStyle.Linear)
    
    local Tween = TweenService:Create(
        Character.HumanoidRootPart,
        TweenInfo,
        {CFrame = Position}
    )
    
    if ActiveTween then
        ActiveTween:Cancel()
    end
    
    ActiveTween = Tween
    Tween:Play()
    return Tween.Completed
end

-- Attack function
local function Attack()
    if not isRoblox then
        print("Attack simulated")
        return
    end
    
    local AC = game.Players.LocalPlayer.Character:FindFirstChild("Combat") or game.Players.LocalPlayer.Backpack:FindFirstChild("Combat")
    
    if FarmSettings.SelectedWeapon == "Combat" then
        AC = game.Players.LocalPlayer.Character:FindFirstChild("Combat") or game.Players.LocalPlayer.Backpack:FindFirstChild("Combat")
    else
        AC = game.Players.LocalPlayer.Character:FindFirstChild(FarmSettings.SelectedWeapon) or game.Players.LocalPlayer.Backpack:FindFirstChild(FarmSettings.SelectedWeapon)
    end
    
    if AC then
        game.Players.LocalPlayer.Character.Humanoid:EquipTool(AC)
        AC:Activate()
    end
end

-- Fast attack function
local function FastAttack()
    if not isRoblox then
        print("Using Fast Attack")
        return
    end
    
    if FarmSettings.FastAttack then
        keypress(0x58) -- X key
        wait(0.1)
        keyrelease(0x58)
    end
end

-- Buso Haki function
local function BusoHaki()
    if not isRoblox then
        print("Buso Haki activation simulated")
        return
    end
    
    if FarmSettings.AutoHaki then
        if not game.Players.LocalPlayer.Character:FindFirstChild("HasBuso") then
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Buso")
        end
    end
end

-- Get monsters function
local function GetMobs(questData)
    if not isRoblox then
        print("Getting mobs for: " .. (questData.NameMon or "Unknown"))
        return {{Name = questData.NameMon, HumanoidRootPart = {Position = Vector3.new(0,0,0), CFrame = CFrame.new(0,0,0)}, Humanoid = {Health = 100}}}
    end
    
    local Mobs = {}
    
    for i,v in pairs(workspace.Enemies:GetChildren()) do
        if v.Name == questData.NameMon and v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 then
            table.insert(Mobs, v)
        end
    end
    
    return Mobs
end

-- Farm nearest monster function
local function FarmNearestMob()
    if not isRoblox then
        print("Farming nearest mob simulation")
        return
    end
    
    local NearestMob = nil
    local ShortestDistance = FarmSettings.FarmRadius
    
    for i,v in pairs(workspace.Enemies:GetChildren()) do
        if v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 then
            local Distance = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.HumanoidRootPart.Position).Magnitude
            if Distance <= ShortestDistance then
                ShortestDistance = Distance
                NearestMob = v
            end
        end
    end
    
    return NearestMob
end

-- Main farming function
local function StartFarming()
    if Farming then return end
    
    Farming = true
    print("Starting Auto Farm simulation...")
    
    if not isRoblox then
        local playerLevel = game:GetService("Players").LocalPlayer.Data.Level.Value
        local questData = CheckLevel()
        
        print("Player level: " .. playerLevel)
        print("Selected target: " .. questData.NameMon .. " (Level " .. (playerLevel - 15) .. ")")
        
        if FarmSettings.AutoHaki then
            print("Buso Haki activation simulated")
        end
        
        print("Equipped weapon: " .. FarmSettings.SelectedWeapon)
        
        for i = 1, 5 do
            print("Farming " .. questData.NameMon .. " (" .. i .. "/5)")
            if FarmSettings.FastAttack then
                print("Using Fast Attack")
            end
            print("Waiting...")
            wait(1)
        end
        
        print("Farming simulation complete!")
        Farming = false
        return
    end
    
    spawn(function()
        while Farming and wait() do
            pcall(function()
                local QuestData = CheckLevel()
                
                -- Make sure player has the quest
                if FarmSettings.AutoQuest then
                    if not game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Visible then
                        Teleport(QuestData.CFrameQ)
                        wait(1.5)
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StartQuest", QuestData.NameQuest, QuestData.QuestLv)
                    end
                end
                
                -- Get mobs based on quest
                local MobsToFarm = GetMobs(QuestData)
                
                if #MobsToFarm > 0 then
                    for _, Mob in pairs(MobsToFarm) do
                        if Farming and Mob:FindFirstChild("HumanoidRootPart") and Mob:FindFirstChild("Humanoid") and Mob.Humanoid.Health > 0 then
                            repeat
                                wait()
                                BusoHaki()
                                
                                Teleport(Mob.HumanoidRootPart.CFrame * CFrame.new(0, 30, 0))
                                Attack()
                                FastAttack()
                                
                                -- Use skills if enabled
                                if FarmSettings.SkillsEnabled.Z then
                                    keypress(0x5A) -- Z key
                                    wait(0.1)
                                    keyrelease(0x5A)
                                end
                                
                                if FarmSettings.SkillsEnabled.X then
                                    keypress(0x58) -- X key
                                    wait(0.1)
                                    keyrelease(0x58)
                                end
                                
                                if FarmSettings.SkillsEnabled.C then
                                    keypress(0x43) -- C key
                                    wait(0.1)
                                    keyrelease(0x43)
                                end
                                
                                if FarmSettings.SkillsEnabled.V then
                                    keypress(0x56) -- V key
                                    wait(0.1)
                                    keyrelease(0x56)
                                end
                            until not Farming or not Mob or not Mob:FindFirstChild("HumanoidRootPart") or not Mob:FindFirstChild("Humanoid") or Mob.Humanoid.Health <= 0
                        end
                    end
                else
                    Teleport(QuestData.CFrameMon)
                end
            end)
        end
    end)
end

-- Stop farming function
local function StopFarming()
    Farming = false
    if ActiveTween then
        ActiveTween:Cancel()
        ActiveTween = nil
    end
    print("Auto Farm stopped")
end

-- Fluent UI Window setup
local Window = Fluent:CreateWindow({
    Title = "🌊 SkyX Hub - Blox Fruits 🌊",
    SubTitle = "Enhanced Auto Farm Edition",
    TabWidth = 160,
    Size = UDim2.fromOffset(600, 400),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.RightControl -- Right Control to toggle UI visibility
})

-- Create tabs
local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "home" }),
    Farm = Window:AddTab({ Title = "Farming", Icon = "swords" }),
    Teleport = Window:AddTab({ Title = "Teleport", Icon = "map-pin" }),
    Stats = Window:AddTab({ Title = "Stats", Icon = "bar-chart-2" }),
    Misc = Window:AddTab({ Title = "Misc", Icon = "settings" })
}

-- Main tab
Tabs.Main:AddParagraph("Welcome to SkyX Hub", "Enhanced Blox Fruits script with improved auto farm")

-- Level display
local LevelLabel = Tabs.Main:AddLabel("Level: " .. (isRoblox and game.Players.LocalPlayer.Data.Level.Value or "50") .. " (Sea: " .. (First_Sea and "1" or Second_Sea and "2" or Third_Sea and "3" or "Unknown") .. ")")

-- Auto Farm tab
Tabs.Farm:AddParagraph("Auto Farm Settings", "Configure your farming preferences")

-- Enable auto farm toggle
local EnableFarm = Tabs.Farm:AddToggle({
    Title = "Enable Auto Farm",
    Default = false,
    Callback = function(Value)
        FarmSettings.Enabled = Value
        if Value then
            StartFarming()
        else
            StopFarming()
        end
    end
})

-- Fast attack toggle
local FastAttackToggle = Tabs.Farm:AddToggle({
    Title = "Fast Attack",
    Default = true,
    Callback = function(Value)
        FarmSettings.FastAttack = Value
    end
})

-- Auto Haki toggle
local AutoHakiToggle = Tabs.Farm:AddToggle({
    Title = "Auto Buso Haki",
    Default = true,
    Callback = function(Value)
        FarmSettings.AutoHaki = Value
    end
})

-- Mob Aura toggle
local MobAuraToggle = Tabs.Farm:AddToggle({
    Title = "Mob Aura",
    Default = false,
    Callback = function(Value)
        FarmSettings.MobAura = Value
    end
})

-- Auto Quest toggle
local AutoQuestToggle = Tabs.Farm:AddToggle({
    Title = "Auto Quest",
    Default = true,
    Callback = function(Value)
        FarmSettings.AutoQuest = Value
    end
})

-- Farm type dropdown
local FarmTypeDropdown = Tabs.Farm:AddDropdown({
    Title = "Farm Type",
    Values = {"Level", "Nearest", "Boss", "Region"},
    Default = "Level",
    Callback = function(Value)
        FarmSettings.FarmType = Value
        if FarmSettings.Enabled then
            StopFarming()
            StartFarming()
        end
    end
})

-- Weapon selection dropdown
local WeaponDropdown = Tabs.Farm:AddDropdown({
    Title = "Select Weapon",
    Values = {"Combat", "Sword", "Fruit"},
    Default = "Combat",
    Callback = function(Value)
        FarmSettings.SelectedWeapon = Value
    end
})

-- Farm radius slider
local RadiusSlider = Tabs.Farm:AddSlider({
    Title = "Farm Radius",
    Min = 10,
    Max = 200,
    Default = 100,
    Callback = function(Value)
        FarmSettings.FarmRadius = Value
    end
})

-- Skills toggles section
Tabs.Farm:AddParagraph("Skill Settings", "Choose which skills to use during auto farm")

-- Z skill toggle
local ZSkillToggle = Tabs.Farm:AddToggle({
    Title = "Use Z Skill",
    Default = true,
    Callback = function(Value)
        FarmSettings.SkillsEnabled.Z = Value
    end
})

-- X skill toggle
local XSkillToggle = Tabs.Farm:AddToggle({
    Title = "Use X Skill",
    Default = true,
    Callback = function(Value)
        FarmSettings.SkillsEnabled.X = Value
    end
})

-- C skill toggle
local CSkillToggle = Tabs.Farm:AddToggle({
    Title = "Use C Skill",
    Default = false,
    Callback = function(Value)
        FarmSettings.SkillsEnabled.C = Value
    end
})

-- V skill toggle
local VSkillToggle = Tabs.Farm:AddToggle({
    Title = "Use V Skill",
    Default = false,
    Callback = function(Value)
        FarmSettings.SkillsEnabled.V = Value
    end
})

-- Teleport tab
Tabs.Teleport:AddParagraph("Teleport Options", "Quick travel to important locations")

if First_Sea then
    Tabs.Teleport:AddButton({
        Title = "Pirate Starter Island",
        Callback = function()
            if isRoblox then
                Teleport(CFrame.new(1071.2832, 16.3085976, 1426.86792))
            else
                print("Teleporting to Pirate Starter Island")
            end
        end
    })
    
    Tabs.Teleport:AddButton({
        Title = "Marine Starter Island",
        Callback = function()
            if isRoblox then
                Teleport(CFrame.new(-2573.3374, 6.88881969, 2046.99817))
            else
                print("Teleporting to Marine Starter Island")
            end
        end
    })
    
    Tabs.Teleport:AddButton({
        Title = "Middle Town",
        Callback = function()
            if isRoblox then
                Teleport(CFrame.new(-655.824158, 7.88708115, 1436.67908))
            else
                print("Teleporting to Middle Town")
            end
        end
    })
    
    Tabs.Teleport:AddButton({
        Title = "Jungle",
        Callback = function()
            if isRoblox then
                Teleport(CFrame.new(-1448.1446533203, 50.851993560791, 63.60718536377))
            else
                print("Teleporting to Jungle")
            end
        end
    })
    
    Tabs.Teleport:AddButton({
        Title = "Pirate Village",
        Callback = function()
            if isRoblox then
                Teleport(CFrame.new(-1201.0881347656, 40.628940582275, 3857.5966796875))
            else
                print("Teleporting to Pirate Village")
            end
        end
    })
end

-- Stats tab
Tabs.Stats:AddParagraph("Player Stats", "Upgrade your character's statistics")

local StatPoints = Tabs.Stats:AddLabel("Available Points: " .. (isRoblox and game:GetService("Players").LocalPlayer.Data.Points.Value or "0"))

-- Melee stat button
Tabs.Stats:AddButton({
    Title = "Upgrade Melee",
    Callback = function()
        if isRoblox then
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("AddPoint", "Melee", 1)
            StatPoints:Set("Available Points: " .. game:GetService("Players").LocalPlayer.Data.Points.Value)
        else
            print("Upgrading Melee stat")
        end
    end
})

-- Defense stat button
Tabs.Stats:AddButton({
    Title = "Upgrade Defense",
    Callback = function()
        if isRoblox then
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("AddPoint", "Defense", 1)
            StatPoints:Set("Available Points: " .. game:GetService("Players").LocalPlayer.Data.Points.Value)
        else
            print("Upgrading Defense stat")
        end
    end
})

-- Sword stat button
Tabs.Stats:AddButton({
    Title = "Upgrade Sword",
    Callback = function()
        if isRoblox then
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("AddPoint", "Sword", 1)
            StatPoints:Set("Available Points: " .. game:GetService("Players").LocalPlayer.Data.Points.Value)
        else
            print("Upgrading Sword stat")
        end
    end
})

-- Gun stat button
Tabs.Stats:AddButton({
    Title = "Upgrade Gun",
    Callback = function()
        if isRoblox then
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("AddPoint", "Gun", 1)
            StatPoints:Set("Available Points: " .. game:GetService("Players").LocalPlayer.Data.Points.Value)
        else
            print("Upgrading Gun stat")
        end
    end
})

-- Demon Fruit stat button
Tabs.Stats:AddButton({
    Title = "Upgrade Demon Fruit",
    Callback = function()
        if isRoblox then
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("AddPoint", "Demon Fruit", 1)
            StatPoints:Set("Available Points: " .. game:GetService("Players").LocalPlayer.Data.Points.Value)
        else
            print("Upgrading Demon Fruit stat")
        end
    end
})

-- Setup save managers
if isRoblox then
    SaveManager:SetLibrary(Fluent)
    InterfaceManager:SetLibrary(Fluent)
    SaveManager:IgnoreThemeSettings()
    SaveManager:SetIgnoreIndexes({})
    InterfaceManager:SetFolder("SkyXHub")
    SaveManager:SetFolder("SkyXHub/BloxFruits")
    InterfaceManager:BuildInterfaceSection(Tabs.Misc)
    SaveManager:BuildConfigSection(Tabs.Misc)
    
    -- Cleanup when script stops
    spawn(function()
        if game:GetService("CoreGui").ChildRemoved then
            game:GetService("CoreGui").ChildRemoved:Connect(function(child)
                if child.Name == "Fluent_1" then
                    StopFarming()
                end
            end)
        end
    end)
else
    print("Skipping SaveManager setup in standalone mode")
end

-- Select first tab
Window:SelectTab(1)

-- Welcome notification
Fluent:Notify({
    Title = "SkyX Hub",
    Content = "Blox Fruits script loaded with enhanced Auto Farm!",
    Duration = 5
})

print("\nSkyX Hub - Blox Fruits script loaded successfully!")
print("Version: 2.0.0 (Enhanced Auto Farm)")
print("⭐ Thanks for using SkyX Hub! ⭐")

-- Periodically update level display
spawn(function()
    while wait(5) do
        if isRoblox then
            LevelLabel:Set("Level: " .. game.Players.LocalPlayer.Data.Level.Value .. " (Sea: " .. (First_Sea and "1" or Second_Sea and "2" or Third_Sea and "3" or "Unknown") .. ")")
        end
    end
end)

-- Script end
print("SkyX Hub - BloxFruits Auto Farm script loaded!")
print("Version: 2.1.0")
print("⭐ Thanks for using SkyX Hub! ⭐")
