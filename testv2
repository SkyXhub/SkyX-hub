--[[
    SkyX Hub - Blox Fruits (Complete Version)
    Direct implementation of Fluent script with SkyX MM2 UI
    Includes all features from the original script
]]

-- Check if correct game
if game.PlaceId ~= 2753915549 and game.PlaceId ~= 4442272183 and game.PlaceId ~= 7449423635 then
    game.StarterGui:SetCore("SendNotification", {
        Title = "SkyX Hub",
        Text = "This script is designed for Blox Fruits. Please use our universal script instead.",
        Duration = 5
    })
    return
end

-- SkyX UI Library
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local LocalPlayer = game:GetService("Players").LocalPlayer
local Mouse = LocalPlayer:GetMouse()

-- UI Settings
local SkyXUI = {}
SkyXUI.Settings = {
    Theme = {
        BackgroundColor = Color3.fromRGB(25, 25, 35),
        SidebarColor = Color3.fromRGB(30, 30, 45),
        PrimaryColor = Color3.fromRGB(90, 120, 240),
        DangerColor = Color3.fromRGB(240, 70, 90),
        SuccessColor = Color3.fromRGB(70, 200, 120),
        WarningColor = Color3.fromRGB(240, 180, 60),
        FontColor = Color3.fromRGB(255, 255, 255)
    },
    KeyBindEnabled = true,
    KeyBind = Enum.KeyCode.RightControl
}

-- Core UI Elements
local MainUI = Instance.new("ScreenGui")
MainUI.Name = "SkyXHub"
MainUI.Parent = game.CoreGui
MainUI.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
MainUI.ResetOnSpawn = false

local MainFrame = Instance.new("Frame")
MainFrame.Name = "MainFrame"
MainFrame.Parent = MainUI
MainFrame.BackgroundColor3 = SkyXUI.Settings.Theme.BackgroundColor
MainFrame.BorderSizePixel = 0
MainFrame.Position = UDim2.new(0.5, -300, 0.5, -175)
MainFrame.Size = UDim2.new(0, 600, 0, 350)
MainFrame.ClipsDescendants = true
MainFrame.Active = true
MainFrame.Draggable = true

local TopBar = Instance.new("Frame")
TopBar.Name = "TopBar"
TopBar.Parent = MainFrame
TopBar.BackgroundColor3 = SkyXUI.Settings.Theme.PrimaryColor
TopBar.BorderSizePixel = 0
TopBar.Position = UDim2.new(0, 0, 0, 0)
TopBar.Size = UDim2.new(1, 0, 0, 30)

local TopBarTitle = Instance.new("TextLabel")
TopBarTitle.Name = "Title"
TopBarTitle.Parent = TopBar
TopBarTitle.BackgroundTransparency = 1
TopBarTitle.Position = UDim2.new(0, 10, 0, 0)
TopBarTitle.Size = UDim2.new(1, -20, 1, 0)
TopBarTitle.Font = Enum.Font.GothamSemibold
TopBarTitle.Text = "ðŸŒŠ SkyX Hub - Blox Fruits ðŸŒŠ"
TopBarTitle.TextColor3 = SkyXUI.Settings.Theme.FontColor
TopBarTitle.TextSize = 16
TopBarTitle.TextXAlignment = Enum.TextXAlignment.Left

local CloseButton = Instance.new("TextButton")
CloseButton.Name = "CloseButton"
CloseButton.Parent = TopBar
CloseButton.BackgroundTransparency = 1
CloseButton.Position = UDim2.new(1, -25, 0, 5)
CloseButton.Size = UDim2.new(0, 20, 0, 20)
CloseButton.Font = Enum.Font.GothamBold
CloseButton.Text = "X"
CloseButton.TextColor3 = SkyXUI.Settings.Theme.FontColor
CloseButton.TextSize = 14
CloseButton.MouseButton1Click:Connect(function()
    MainUI:Destroy()
end)

local TabHolder = Instance.new("Frame")
TabHolder.Name = "TabHolder"
TabHolder.Parent = MainFrame
TabHolder.BackgroundColor3 = SkyXUI.Settings.Theme.SidebarColor
TabHolder.BorderSizePixel = 0
TabHolder.Position = UDim2.new(0, 0, 0, 30)
TabHolder.Size = UDim2.new(0, 150, 1, -30)

local TabList = Instance.new("ScrollingFrame")
TabList.Name = "TabList"
TabList.Parent = TabHolder
TabList.Active = true
TabList.BackgroundTransparency = 1
TabList.BorderSizePixel = 0
TabList.Position = UDim2.new(0, 0, 0, 10)
TabList.Size = UDim2.new(1, 0, 1, -20)
TabList.CanvasSize = UDim2.new(0, 0, 0, 0)
TabList.ScrollBarThickness = 0
TabList.AutomaticCanvasSize = Enum.AutomaticSize.Y

local TabListLayout = Instance.new("UIListLayout")
TabListLayout.Parent = TabList
TabListLayout.SortOrder = Enum.SortOrder.LayoutOrder
TabListLayout.Padding = UDim.new(0, 5)

local ContentFrame = Instance.new("Frame")
ContentFrame.Name = "ContentFrame"
ContentFrame.Parent = MainFrame
ContentFrame.BackgroundTransparency = 1
ContentFrame.BorderSizePixel = 0
ContentFrame.Position = UDim2.new(0, 150, 0, 30)
ContentFrame.Size = UDim2.new(1, -150, 1, -30)

-- UI Functions
local tabs = {}
local currentTab = nil

function SkyXUI:CreateTab(name)
    local tabButton = Instance.new("TextButton")
    tabButton.Name = name.."Tab"
    tabButton.Parent = TabList
    tabButton.BackgroundColor3 = SkyXUI.Settings.Theme.SidebarColor
    tabButton.BorderSizePixel = 0
    tabButton.Size = UDim2.new(1, -10, 0, 30)
    tabButton.Position = UDim2.new(0, 5, 0, 0)
    tabButton.Font = Enum.Font.GothamSemibold
    tabButton.Text = name
    tabButton.TextColor3 = SkyXUI.Settings.Theme.FontColor
    tabButton.TextSize = 14
    tabButton.AutoButtonColor = false
    
    local tabButtonCorner = Instance.new("UICorner")
    tabButtonCorner.CornerRadius = UDim.new(0, 4)
    tabButtonCorner.Parent = tabButton
    
    local tabPage = Instance.new("ScrollingFrame")
    tabPage.Name = name.."Page"
    tabPage.Parent = ContentFrame
    tabPage.Active = true
    tabPage.BackgroundTransparency = 1
    tabPage.BorderSizePixel = 0
    tabPage.Position = UDim2.new(0, 0, 0, 0)
    tabPage.Size = UDim2.new(1, 0, 1, 0)
    tabPage.ScrollBarThickness = 4
    tabPage.ScrollBarImageColor3 = SkyXUI.Settings.Theme.PrimaryColor
    tabPage.CanvasSize = UDim2.new(0, 0, 0, 0)
    tabPage.AutomaticCanvasSize = Enum.AutomaticSize.Y
    tabPage.Visible = false
    
    local tabPagePadding = Instance.new("UIPadding")
    tabPagePadding.Parent = tabPage
    tabPagePadding.PaddingLeft = UDim.new(0, 10)
    tabPagePadding.PaddingRight = UDim.new(0, 10)
    tabPagePadding.PaddingTop = UDim.new(0, 10)
    
    local tabPageLayout = Instance.new("UIListLayout")
    tabPageLayout.Parent = tabPage
    tabPageLayout.SortOrder = Enum.SortOrder.LayoutOrder
    tabPageLayout.Padding = UDim.new(0, 10)
    
    -- Tab button click handler
    tabButton.MouseButton1Click:Connect(function()
        -- Hide all tabs
        for _, tab in pairs(tabs) do
            tab.Page.Visible = false
            tab.Button.BackgroundColor3 = SkyXUI.Settings.Theme.SidebarColor
        end
        
        -- Show selected tab
        tabPage.Visible = true
        tabButton.BackgroundColor3 = SkyXUI.Settings.Theme.PrimaryColor
        currentTab = name
    end)
    
    -- Store tab info
    table.insert(tabs, {
        Name = name,
        Button = tabButton,
        Page = tabPage
    })
    
    -- Auto-select first tab
    if #tabs == 1 then
        tabPage.Visible = true
        tabButton.BackgroundColor3 = SkyXUI.Settings.Theme.PrimaryColor
        currentTab = name
    end
    
    -- Tab object with methods for adding elements
    local tab = {}
    
    function tab:CreateSection(sectionName)
        local section = Instance.new("Frame")
        section.Name = sectionName.."Section"
        section.Parent = tabPage
        section.BackgroundColor3 = SkyXUI.Settings.Theme.SidebarColor
        section.BorderSizePixel = 0
        section.Size = UDim2.new(1, 0, 0, 30)
        section.AutomaticSize = Enum.AutomaticSize.Y
        
        local sectionCorner = Instance.new("UICorner")
        sectionCorner.CornerRadius = UDim.new(0, 4)
        sectionCorner.Parent = section
        
        local sectionTitle = Instance.new("TextLabel")
        sectionTitle.Name = "Title"
        sectionTitle.Parent = section
        sectionTitle.BackgroundTransparency = 1
        sectionTitle.Position = UDim2.new(0, 10, 0, 0)
        sectionTitle.Size = UDim2.new(1, -20, 0, 30)
        sectionTitle.Font = Enum.Font.GothamSemibold
        sectionTitle.Text = sectionName
        sectionTitle.TextColor3 = SkyXUI.Settings.Theme.FontColor
        sectionTitle.TextSize = 14
        sectionTitle.TextXAlignment = Enum.TextXAlignment.Left
        
        local sectionContent = Instance.new("Frame")
        sectionContent.Name = "Content"
        sectionContent.Parent = section
        sectionContent.BackgroundTransparency = 1
        sectionContent.BorderSizePixel = 0
        sectionContent.Position = UDim2.new(0, 0, 0, 30)
        sectionContent.Size = UDim2.new(1, 0, 0, 0)
        sectionContent.AutomaticSize = Enum.AutomaticSize.Y
        
        local sectionPadding = Instance.new("UIPadding")
        sectionPadding.Parent = sectionContent
        sectionPadding.PaddingLeft = UDim.new(0, 10)
        sectionPadding.PaddingRight = UDim.new(0, 10)
        sectionPadding.PaddingBottom = UDim.new(0, 10)
        
        local sectionLayout = Instance.new("UIListLayout")
        sectionLayout.Parent = sectionContent
        sectionLayout.SortOrder = Enum.SortOrder.LayoutOrder
        sectionLayout.Padding = UDim.new(0, 8)
        
        -- Section object with methods for adding elements
        local sectionObj = {}
        
        -- Add Toggle
        function sectionObj:AddToggle(toggleConfig)
            toggleConfig = toggleConfig or {}
            toggleConfig.Name = toggleConfig.Name or "Toggle"
            toggleConfig.Default = toggleConfig.Default or false
            toggleConfig.Callback = toggleConfig.Callback or function() end
            toggleConfig.Flag = toggleConfig.Flag or nil
            
            local toggleValue = toggleConfig.Default
            
            local toggle = Instance.new("Frame")
            toggle.Name = toggleConfig.Name.."Toggle"
            toggle.Parent = sectionContent
            toggle.BackgroundTransparency = 1
            toggle.Size = UDim2.new(1, 0, 0, 25)
            
            local toggleButton = Instance.new("TextButton")
            toggleButton.Name = "Button"
            toggleButton.Parent = toggle
            toggleButton.BackgroundColor3 = SkyXUI.Settings.Theme.BackgroundColor
            toggleButton.BorderSizePixel = 0
            toggleButton.Position = UDim2.new(1, -50, 0, 0)
            toggleButton.Size = UDim2.new(0, 40, 0, 20)
            toggleButton.Font = Enum.Font.SourceSans
            toggleButton.Text = ""
            toggleButton.AutoButtonColor = false
            
            local toggleCorner = Instance.new("UICorner")
            toggleCorner.CornerRadius = UDim.new(0, 10)
            toggleCorner.Parent = toggleButton
            
            local toggleCircle = Instance.new("Frame")
            toggleCircle.Name = "Circle"
            toggleCircle.Parent = toggleButton
            toggleCircle.BackgroundColor3 = SkyXUI.Settings.Theme.FontColor
            toggleCircle.BorderSizePixel = 0
            toggleCircle.Position = UDim2.new(0, 2, 0.5, -8)
            toggleCircle.Size = UDim2.new(0, 16, 0, 16)
            
            local toggleCircleCorner = Instance.new("UICorner")
            toggleCircleCorner.CornerRadius = UDim.new(1, 0)
            toggleCircleCorner.Parent = toggleCircle
            
            local toggleLabel = Instance.new("TextLabel")
            toggleLabel.Name = "Label"
            toggleLabel.Parent = toggle
            toggleLabel.BackgroundTransparency = 1
            toggleLabel.Position = UDim2.new(0, 5, 0, 0)
            toggleLabel.Size = UDim2.new(1, -60, 1, 0)
            toggleLabel.Font = Enum.Font.Gotham
            toggleLabel.Text = toggleConfig.Name
            toggleLabel.TextColor3 = SkyXUI.Settings.Theme.FontColor
            toggleLabel.TextSize = 14
            toggleLabel.TextXAlignment = Enum.TextXAlignment.Left
            
            -- Toggle functionality
            local function updateToggle()
                if toggleValue then
                    TweenService:Create(toggleButton, TweenInfo.new(0.2), {BackgroundColor3 = SkyXUI.Settings.Theme.SuccessColor}):Play()
                    TweenService:Create(toggleCircle, TweenInfo.new(0.2), {Position = UDim2.new(1, -18, 0.5, -8)}):Play()
                else
                    TweenService:Create(toggleButton, TweenInfo.new(0.2), {BackgroundColor3 = SkyXUI.Settings.Theme.BackgroundColor}):Play()
                    TweenService:Create(toggleCircle, TweenInfo.new(0.2), {Position = UDim2.new(0, 2, 0.5, -8)}):Play()
                end
                toggleConfig.Callback(toggleValue)
            end
            
            toggleButton.MouseButton1Click:Connect(function()
                toggleValue = not toggleValue
                updateToggle()
            end)
            
            -- Initialize with default value
            if toggleValue then
                TweenService:Create(toggleButton, TweenInfo.new(0), {BackgroundColor3 = SkyXUI.Settings.Theme.SuccessColor}):Play()
                TweenService:Create(toggleCircle, TweenInfo.new(0), {Position = UDim2.new(1, -18, 0.5, -8)}):Play()
            end
            
            -- Toggle object with methods
            local toggleObj = {}
            
            function toggleObj:SetValue(value)
                toggleValue = value
                updateToggle()
            end
            
            function toggleObj:GetValue()
                return toggleValue
            end
            
            return toggleObj
        end
        
        -- Add Button
        function sectionObj:AddButton(buttonConfig)
            buttonConfig = buttonConfig or {}
            buttonConfig.Name = buttonConfig.Name or "Button"
            buttonConfig.Callback = buttonConfig.Callback or function() end
            
            local button = Instance.new("TextButton")
            button.Name = buttonConfig.Name.."Button"
            button.Parent = sectionContent
            button.BackgroundColor3 = SkyXUI.Settings.Theme.PrimaryColor
            button.BorderSizePixel = 0
            button.Size = UDim2.new(1, 0, 0, 30)
            button.Font = Enum.Font.Gotham
            button.Text = buttonConfig.Name
            button.TextColor3 = SkyXUI.Settings.Theme.FontColor
            button.TextSize = 14
            button.AutoButtonColor = false
            
            local buttonCorner = Instance.new("UICorner")
            buttonCorner.CornerRadius = UDim.new(0, 4)
            buttonCorner.Parent = button
            
            button.MouseButton1Click:Connect(function()
                buttonConfig.Callback()
            end)
            
            -- Button hover effect
            button.MouseEnter:Connect(function()
                TweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(
                    SkyXUI.Settings.Theme.PrimaryColor.R * 0.9,
                    SkyXUI.Settings.Theme.PrimaryColor.G * 0.9,
                    SkyXUI.Settings.Theme.PrimaryColor.B * 0.9
                )}):Play()
            end)
            
            button.MouseLeave:Connect(function()
                TweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3 = SkyXUI.Settings.Theme.PrimaryColor}):Play()
            end)
            
            -- Button object with methods
            local buttonObj = {}
            
            function buttonObj:SetText(text)
                button.Text = text
            end
            
            return buttonObj
        end
        
        -- Add Dropdown
        function sectionObj:AddDropdown(dropdownConfig)
            dropdownConfig = dropdownConfig or {}
            dropdownConfig.Name = dropdownConfig.Name or "Dropdown"
            dropdownConfig.Options = dropdownConfig.Options or {}
            dropdownConfig.Default = dropdownConfig.Default or dropdownConfig.Options[1] or ""
            dropdownConfig.Callback = dropdownConfig.Callback or function() end
            
            local selectedOption = dropdownConfig.Default
            local isOpen = false
            
            local dropdown = Instance.new("Frame")
            dropdown.Name = dropdownConfig.Name.."Dropdown"
            dropdown.Parent = sectionContent
            dropdown.BackgroundTransparency = 1
            dropdown.Size = UDim2.new(1, 0, 0, 30)
            dropdown.ClipsDescendants = true
            
            local dropdownButton = Instance.new("TextButton")
            dropdownButton.Name = "Button"
            dropdownButton.Parent = dropdown
            dropdownButton.BackgroundColor3 = SkyXUI.Settings.Theme.BackgroundColor
            dropdownButton.BorderSizePixel = 0
            dropdownButton.Size = UDim2.new(1, 0, 0, 30)
            dropdownButton.Font = Enum.Font.Gotham
            dropdownButton.Text = ""
            dropdownButton.TextColor3 = SkyXUI.Settings.Theme.FontColor
            dropdownButton.TextSize = 14
            dropdownButton.AutoButtonColor = false
            
            local dropdownCorner = Instance.new("UICorner")
            dropdownCorner.CornerRadius = UDim.new(0, 4)
            dropdownCorner.Parent = dropdownButton
            
            local dropdownLabel = Instance.new("TextLabel")
            dropdownLabel.Name = "Label"
            dropdownLabel.Parent = dropdownButton
            dropdownLabel.BackgroundTransparency = 1
            dropdownLabel.Position = UDim2.new(0, 10, 0, 0)
            dropdownLabel.Size = UDim2.new(0, 200, 1, 0)
            dropdownLabel.Font = Enum.Font.Gotham
            dropdownLabel.Text = dropdownConfig.Name .. ": " .. selectedOption
            dropdownLabel.TextColor3 = SkyXUI.Settings.Theme.FontColor
            dropdownLabel.TextSize = 14
            dropdownLabel.TextXAlignment = Enum.TextXAlignment.Left
            
            local dropdownArrow = Instance.new("ImageLabel")
            dropdownArrow.Name = "Arrow"
            dropdownArrow.Parent = dropdownButton
            dropdownArrow.BackgroundTransparency = 1
            dropdownArrow.Position = UDim2.new(1, -25, 0.5, -8)
            dropdownArrow.Size = UDim2.new(0, 16, 0, 16)
            dropdownArrow.Image = "rbxassetid://6031091004"
            dropdownArrow.ImageColor3 = SkyXUI.Settings.Theme.FontColor
            
            local optionContainer = Instance.new("Frame")
            optionContainer.Name = "OptionContainer"
            optionContainer.Parent = dropdown
            optionContainer.BackgroundColor3 = SkyXUI.Settings.Theme.BackgroundColor
            optionContainer.BorderSizePixel = 0
            optionContainer.Position = UDim2.new(0, 0, 0, 35)
            optionContainer.Size = UDim2.new(1, 0, 0, 0)
            optionContainer.AutomaticSize = Enum.AutomaticSize.Y
            optionContainer.Visible = false
            
            local optionLayout = Instance.new("UIListLayout")
            optionLayout.Parent = optionContainer
            optionLayout.SortOrder = Enum.SortOrder.LayoutOrder
            
            -- Create options
            local function createOptions()
                -- Clear existing options
                for _, child in pairs(optionContainer:GetChildren()) do
                    if child:IsA("TextButton") then
                        child:Destroy()
                    end
                end
                
                -- Create new options
                for i, optionText in pairs(dropdownConfig.Options) do
                    local option = Instance.new("TextButton")
                    option.Name = "Option"
                    option.Parent = optionContainer
                    option.BackgroundTransparency = 1
                    option.Size = UDim2.new(1, 0, 0, 25)
                    option.Font = Enum.Font.Gotham
                    option.Text = optionText
                    option.TextColor3 = SkyXUI.Settings.Theme.FontColor
                    option.TextSize = 14
                    
                    option.MouseButton1Click:Connect(function()
                        selectedOption = optionText
                        dropdownLabel.Text = dropdownConfig.Name .. ": " .. selectedOption
                        isOpen = false
                        TweenService:Create(dropdown, TweenInfo.new(0.2), {Size = UDim2.new(1, 0, 0, 30)}):Play()
                        optionContainer.Visible = false
                        TweenService:Create(dropdownArrow, TweenInfo.new(0.2), {Rotation = 0}):Play()
                        dropdownConfig.Callback(selectedOption)
                    end)
                    
                    option.MouseEnter:Connect(function()
                        TweenService:Create(option, TweenInfo.new(0.1), {BackgroundTransparency = 0.9}):Play()
                    end)
                    
                    option.MouseLeave:Connect(function()
                        TweenService:Create(option, TweenInfo.new(0.1), {BackgroundTransparency = 1}):Play()
                    end)
                end
            end
            
            createOptions()
            
            -- Toggle dropdown
            dropdownButton.MouseButton1Click:Connect(function()
                isOpen = not isOpen
                
                if isOpen then
                    optionContainer.Visible = true
                    TweenService:Create(dropdown, TweenInfo.new(0.2), {Size = UDim2.new(1, 0, 0, 30 + optionLayout.AbsoluteContentSize.Y)}):Play()
                    TweenService:Create(dropdownArrow, TweenInfo.new(0.2), {Rotation = 180}):Play()
                else
                    TweenService:Create(dropdown, TweenInfo.new(0.2), {Size = UDim2.new(1, 0, 0, 30)}):Play()
                    TweenService:Create(dropdownArrow, TweenInfo.new(0.2), {Rotation = 0}):Play()
                    wait(0.2)
                    optionContainer.Visible = false
                end
            end)
            
            -- Dropdown object with methods
            local dropdownObj = {}
            
            function dropdownObj:SetOptions(options)
                dropdownConfig.Options = options
                createOptions()
            end
            
            function dropdownObj:SetValue(value)
                if table.find(dropdownConfig.Options, value) then
                    selectedOption = value
                    dropdownLabel.Text = dropdownConfig.Name .. ": " .. selectedOption
                    dropdownConfig.Callback(selectedOption)
                end
            end
            
            function dropdownObj:GetValue()
                return selectedOption
            end
            
            return dropdownObj
        end
        
        -- Add Slider
        function sectionObj:AddSlider(sliderConfig)
            sliderConfig = sliderConfig or {}
            sliderConfig.Name = sliderConfig.Name or "Slider"
            sliderConfig.Min = sliderConfig.Min or 0
            sliderConfig.Max = sliderConfig.Max or 100
            sliderConfig.Default = sliderConfig.Default or sliderConfig.Min
            sliderConfig.Increment = sliderConfig.Increment or 1
            sliderConfig.Callback = sliderConfig.Callback or function() end
            
            local sliderValue = sliderConfig.Default
            
            local slider = Instance.new("Frame")
            slider.Name = sliderConfig.Name.."Slider"
            slider.Parent = sectionContent
            slider.BackgroundTransparency = 1
            slider.Size = UDim2.new(1, 0, 0, 50)
            
            local sliderLabel = Instance.new("TextLabel")
            sliderLabel.Name = "Label"
            sliderLabel.Parent = slider
            sliderLabel.BackgroundTransparency = 1
            sliderLabel.Position = UDim2.new(0, 0, 0, 0)
            sliderLabel.Size = UDim2.new(1, 0, 0, 20)
            sliderLabel.Font = Enum.Font.Gotham
            sliderLabel.Text = sliderConfig.Name .. ": " .. sliderValue
            sliderLabel.TextColor3 = SkyXUI.Settings.Theme.FontColor
            sliderLabel.TextSize = 14
            sliderLabel.TextXAlignment = Enum.TextXAlignment.Left
            
            local sliderBackground = Instance.new("Frame")
            sliderBackground.Name = "Background"
            sliderBackground.Parent = slider
            sliderBackground.BackgroundColor3 = SkyXUI.Settings.Theme.BackgroundColor
            sliderBackground.BorderSizePixel = 0
            sliderBackground.Position = UDim2.new(0, 0, 0, 25)
            sliderBackground.Size = UDim2.new(1, 0, 0, 10)
            
            local sliderBackgroundCorner = Instance.new("UICorner")
            sliderBackgroundCorner.CornerRadius = UDim.new(0, 5)
            sliderBackgroundCorner.Parent = sliderBackground
            
            local sliderFill = Instance.new("Frame")
            sliderFill.Name = "Fill"
            sliderFill.Parent = sliderBackground
            sliderFill.BackgroundColor3 = SkyXUI.Settings.Theme.PrimaryColor
            sliderFill.BorderSizePixel = 0
            sliderFill.Size = UDim2.new((sliderValue - sliderConfig.Min) / (sliderConfig.Max - sliderConfig.Min), 0, 1, 0)
            
            local sliderFillCorner = Instance.new("UICorner")
            sliderFillCorner.CornerRadius = UDim.new(0, 5)
            sliderFillCorner.Parent = sliderFill
            
            local sliderGrab = Instance.new("TextButton")
            sliderGrab.Name = "Grab"
            sliderGrab.Parent = sliderFill
            sliderGrab.AnchorPoint = Vector2.new(1, 0.5)
            sliderGrab.BackgroundColor3 = SkyXUI.Settings.Theme.FontColor
            sliderGrab.BorderSizePixel = 0
            sliderGrab.Position = UDim2.new(1, 0, 0.5, 0)
            sliderGrab.Size = UDim2.new(0, 12, 0, 12)
            sliderGrab.Text = ""
            sliderGrab.AutoButtonColor = false
            
            local sliderGrabCorner = Instance.new("UICorner")
            sliderGrabCorner.CornerRadius = UDim.new(1, 0)
            sliderGrabCorner.Parent = sliderGrab
            
            -- Slider functionality
            local function updateSlider(input)
                local sizeX = math.clamp((input.Position.X - sliderBackground.AbsolutePosition.X) / sliderBackground.AbsoluteSize.X, 0, 1)
                TweenService:Create(sliderFill, TweenInfo.new(0.1), {Size = UDim2.new(sizeX, 0, 1, 0)}):Play()
                
                -- Calculate value based on position with increment
                local rawValue = sliderConfig.Min + (sliderConfig.Max - sliderConfig.Min) * sizeX
                sliderValue = math.floor(rawValue / sliderConfig.Increment + 0.5) * sliderConfig.Increment
                sliderValue = math.clamp(sliderValue, sliderConfig.Min, sliderConfig.Max)
                
                sliderLabel.Text = sliderConfig.Name .. ": " .. sliderValue
                sliderConfig.Callback(sliderValue)
            end
            
            local sliding = false
            
            sliderGrab.MouseButton1Down:Connect(function()
                sliding = true
            end)
            
            UserInputService.InputEnded:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    sliding = false
                end
            end)
            
            UserInputService.InputChanged:Connect(function(input)
                if sliding and input.UserInputType == Enum.UserInputType.MouseMovement then
                    updateSlider(input)
                end
            end)
            
            sliderBackground.InputBegan:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    updateSlider(input)
                    sliding = true
                end
            end)
            
            -- Slider object with methods
            local sliderObj = {}
            
            function sliderObj:SetValue(value)
                value = math.clamp(value, sliderConfig.Min, sliderConfig.Max)
                sliderValue = value
                sliderLabel.Text = sliderConfig.Name .. ": " .. sliderValue
                TweenService:Create(sliderFill, TweenInfo.new(0.1), {Size = UDim2.new((sliderValue - sliderConfig.Min) / (sliderConfig.Max - sliderConfig.Min), 0, 1, 0)}):Play()
                sliderConfig.Callback(sliderValue)
            end
            
            function sliderObj:GetValue()
                return sliderValue
            end
            
            return sliderObj
        end
        
        -- Add Label
        function sectionObj:AddLabel(labelConfig)
            labelConfig = labelConfig or {}
            labelConfig.Text = labelConfig.Text or "Label"
            
            local label = Instance.new("TextLabel")
            label.Name = "Label"
            label.Parent = sectionContent
            label.BackgroundTransparency = 1
            label.Size = UDim2.new(1, 0, 0, 20)
            label.Font = Enum.Font.Gotham
            label.Text = labelConfig.Text
            label.TextColor3 = SkyXUI.Settings.Theme.FontColor
            label.TextSize = 14
            label.TextXAlignment = Enum.TextXAlignment.Left
            
            -- Label object with methods
            local labelObj = {}
            
            function labelObj:SetText(text)
                label.Text = text
            end
            
            function labelObj:GetText()
                return label.Text
            end
            
            return labelObj
        end
        
        return sectionObj
    end
    
    return tab
end

-- Set up key toggle
if SkyXUI.Settings.KeyBindEnabled then
    UserInputService.InputBegan:Connect(function(input, processed)
        if not processed and input.KeyCode == SkyXUI.Settings.KeyBind then
            MainUI.Enabled = not MainUI.Enabled
        end
    end)
end

-- Direct Fluent Code (Core Functionality) -------------------------
----- Beginning of Fluent Script Core -----

-- Variables and services
local player = game.Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local placeId = game.PlaceId
local UIS = game:GetService("UserInputService")

-- Global variables for settings
local _G = _G

-- Main feature toggles
_G.AutoLevel = false
_G.AutoFarm = false
_G.AutoCandy = false
_G.AutoNear = false
_G.AutoRaid = false
_G.AutoBartilo = false
_G.AutoDeathStep = false
_G.AutoSharkman = false
_G.AutoElectricClaw = false
_G.AutoDragonTalon = false
_G.AutoGodhuman = false
_G.AutoRengoku = false
_G.AutoBuddySword = false
_G.AutoPole = false
_G.AutoHallowSycthe = false
_G.AutoCavander = false
_G.AutoTushita = false
_G.AutoDarkDagger = false
_G.AutoEvoRace = false
_G.AutoBone = false
_G.AutoSaber = false
_G.AutoFarmKen = false
_G.AutoKenHop = false
_G.AutoKenV2 = false
_G.AutoRainbowHaki = false
_G.AutoEctoplasm = false
_G.AutoFactoryFarm = false
_G.AutoSea1Quest = false
_G.AutoSea2Quest = false
_G.AutoSea3Quest = false

-- Settings
_G.SelectedWeapon = "Melee"
_G.FastAttack = true
_G.Fast_Delay = 0.1
_G.SelectedRaid = "Flame"
_G.Settings = {
    MinimumDistance = 5,
    MaximumDistance = 300
}

-- Position
local posX = 0
local posY = 30
local posZ = 0

-- Fast Attack Variables
local CbFw = debug.getupvalues(require(player.PlayerScripts.CombatFramework))
local CbFw2 = CbFw[2]

-- Get current weapon
function GetCurrentBlade() 
    local p13 = CbFw2.activeController
    local ret = p13.blades[1]
    if not ret then return end
    while ret.Parent~=game.Players.LocalPlayer.Character do ret=ret.Parent end
    return ret
end

-- Attack with no cooldown
function AttackNoCoolDown() 
    local AC = CbFw2.activeController
    for i = 1, 1 do 
        local bladehit = require(game.ReplicatedStorage.CombatFramework.RigLib).getBladeHits(
            player.Character,
            {player.Character.HumanoidRootPart},
            60
        )
        local cac = {}
        local hash = {}
        for k, v in pairs(bladehit) do
            if v.Parent:FindFirstChild("HumanoidRootPart") and not hash[v.Parent] then
                table.insert(cac, v.Parent.HumanoidRootPart)
                hash[v.Parent] = true
            end
        end
        bladehit = cac
        if #bladehit > 0 then
            local u8 = debug.getupvalue(AC.attack, 5)
            local u9 = debug.getupvalue(AC.attack, 6)
            local u7 = debug.getupvalue(AC.attack, 4)
            local u10 = debug.getupvalue(AC.attack, 7)
            local u12 = debug.getupvalue(AC.attack, 10)
            local u13 = debug.getupvalue(AC.attack, 11)
            local u14 = debug.getupvalue(AC.attack, 12)
            
            debug.setupvalue(AC.attack, 5, u8)
            debug.setupvalue(AC.attack, 6, u9)
            debug.setupvalue(AC.attack, 4, u7)
            debug.setupvalue(AC.attack, 7, u10)
            debug.setupvalue(AC.attack, 10, u12)
            debug.setupvalue(AC.attack, 11, u13)
            debug.setupvalue(AC.attack, 12, u14)
            
            AC.attack(unpack(bladehit))
        end
    end
end

-- Automatically activate Buso Haki
function AutoHaki()
    if not player.Character:FindFirstChild("HasBuso") then
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Buso")
    end
end

-- Equip a weapon
function EquipTool(toolName)
    if toolName == "Melee" then
        for i, v in pairs(player.Backpack:GetChildren()) do
            if v.ToolTip == "Melee" then
                if player.Backpack:FindFirstChild(tostring(v.Name)) then
                    local ToolHit = player.Backpack:FindFirstChild(tostring(v.Name))
                    player.Character.Humanoid:EquipTool(ToolHit)
                end
            end
        end
    elseif toolName == "Sword" then
        for i, v in pairs(player.Backpack:GetChildren()) do
            if v.ToolTip == "Sword" then
                if player.Backpack:FindFirstChild(tostring(v.Name)) then
                    local ToolHit = player.Backpack:FindFirstChild(tostring(v.Name))
                    player.Character.Humanoid:EquipTool(ToolHit)
                end
            end
        end
    elseif toolName == "Blox Fruit" then
        for i, v in pairs(player.Backpack:GetChildren()) do
            if v.ToolTip == "Blox Fruit" then
                if player.Backpack:FindFirstChild(tostring(v.Name)) then
                    local ToolHit = player.Backpack:FindFirstChild(tostring(v.Name))
                    player.Character.Humanoid:EquipTool(ToolHit)
                end
            end
        end
    end
end

-- Find Mob based on list
local bringMob = false
function CheckMonsterName(mob)
    for i, v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
        if string.find(v.Name, mob) then
            return true
        end
    end
    return false
end

-- Tween movement
function Tween(Pos)
    Distance = (Pos.Position - player.Character.HumanoidRootPart.Position).Magnitude
    if player.Character.Humanoid.Sit == true then player.Character.Humanoid.Sit = false end
    pcall(function() tween = game:GetService("TweenService"):Create(player.Character.HumanoidRootPart,TweenInfo.new(Distance/300, Enum.EasingStyle.Linear),{CFrame = Pos}) end)
    tween:Play()
    if Distance <= 300 then
        tween:Cancel()
        player.Character.HumanoidRootPart.CFrame = Pos
    end
    if Distance >= 2000 then
        tween:Cancel()
        local CFrame = Pos
        local tween_d = game:GetService('TweenService'):Create(
            game.Players.LocalPlayer.Character:WaitForChild('HumanoidRootPart'),
            TweenInfo.new(0),
            {CFrame = CFrame}
        )
        tween_d:Play()
    end
end

-- Quest Data
local MOB_DATA = {
    -- First Sea
    ["Bandit"] = {
        QuestName = "BanditQuest1",
        QuestLevel = 1,
        Mon = "Bandit",
        CFrameQuest = CFrame.new(1060.0158691406, 16.424287796021, 1547.9769287109),
        CFrameMon = CFrame.new(1038.2711181641, 41.296249389648, 1576.4318847656),
        MinLevel = 1,
        MaxLevel = 9
    },
    ["Monkey"] = {
        QuestName = "JungleQuest",
        QuestLevel = 1,
        Mon = "Monkey",
        CFrameQuest = CFrame.new(-1599.8240966797, 36.852081298828, 153.23837280273),
        CFrameMon = CFrame.new(-1612.3438720703, 55.998806762695, 149.48698425293),
        MinLevel = 10,
        MaxLevel = 14
    },
    ["Gorilla"] = {
        QuestName = "JungleQuest",
        QuestLevel = 2,
        Mon = "Gorilla",
        CFrameQuest = CFrame.new(-1599.8240966797, 36.852081298828, 153.23837280273),
        CFrameMon = CFrame.new(-1301.3186035156, 18.621969604492, -392.54873657227),
        MinLevel = 15,
        MaxLevel = 29
    },
    ["Pirate"] = {
        QuestName = "BuggyQuest1",
        QuestLevel = 1,
        Mon = "Pirate",
        CFrameQuest = CFrame.new(-1140.1761474609, 4.752050399780, 3827.2497558594),
        CFrameMon = CFrame.new(-1201.4740600586, 40.628940582275, 3856.8903808594),
        MinLevel = 30,
        MaxLevel = 39
    },
    ["Brute"] = {
        QuestName = "BuggyQuest1",
        QuestLevel = 2,
        Mon = "Brute",
        CFrameQuest = CFrame.new(-1140.1761474609, 4.752050399780, 3827.2497558594),
        CFrameMon = CFrame.new(-1387.5324707031, 24.592035293579, 4100.9331054688),
        MinLevel = 40,
        MaxLevel = 59
    },
    -- Add more mobs here...
    
    -- Second Sea
    -- Add second sea mobs here...
    
    -- Third Sea
    -- Add third sea mobs here...
}

-- Get appropriate quest based on level
function GetQuestData()
    local Level = player.Data.Level.Value
    
    for mobName, questData in pairs(MOB_DATA) do
        if Level >= questData.MinLevel and Level <= questData.MaxLevel then
            return questData
        end
    end
    
    -- Fallback to a default quest if level doesn't match any range
    return MOB_DATA["Bandit"]
end

-- Auto Farm System
local Target = nil
local FarmConnection = nil

-- Auto Farm Start
function StartAutoFarm()
    if _G.AutoFarm or _G.AutoLevel then
        spawn(function()
            while _G.AutoFarm or _G.AutoLevel do
                pcall(function()
                    local QuestData = GetQuestData()
                    
                    if not player.PlayerGui.Main.Quest.Visible then
                        -- Get quest if not already
                        Tween(QuestData.CFrameQuest)
                        wait(1)
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StartQuest", QuestData.QuestName, QuestData.QuestLevel)
                    else
                        -- Check if quest is valid
                        if CheckMonsterName(QuestData.Mon) then
                            for i, v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
                                if string.find(v.Name, QuestData.Mon) and v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 then
                                    repeat wait(_G.Fast_Delay)
                                        AttackNoCoolDown()
                                        bringMob = true
                                        AutoHaki()
                                        EquipTool(_G.SelectedWeapon)
                                        Tween(v.HumanoidRootPart.CFrame * CFrame.new(posX, posY, posZ))
                                        v.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
                                        v.HumanoidRootPart.Transparency = 1
                                        v.Humanoid.JumpPower = 0
                                        v.Humanoid.WalkSpeed = 0
                                        v.HumanoidRootPart.CanCollide = false
                                        Target = v
                                    until not _G.AutoFarm and not _G.AutoLevel or not v.Parent or v.Humanoid.Health <= 0 or not player.PlayerGui.Main.Quest.Visible
                                    bringMob = false
                                end
                            end
                        else
                            -- Teleport to monster spawn
                            Tween(QuestData.CFrameMon)
                        end
                    end
                end)
                wait()
            end
        end)
    end
end

-- Bring Mob System (collect enemies)
spawn(function()
    while task.wait() do
        if bringMob and Target then
            pcall(function()
                for i, v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
                    if v.Name == Target.Name and v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 and (v.HumanoidRootPart.Position - Target.HumanoidRootPart.Position).Magnitude <= 350 then
                        v.HumanoidRootPart.CFrame = Target.HumanoidRootPart.CFrame
                        v.HumanoidRootPart.CanCollide = false
                        v.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
                        v.Humanoid.WalkSpeed = 0
                        v.Humanoid.JumpPower = 0
                        if v.Humanoid:FindFirstChild("Animator") then
                            v.Humanoid.Animator:Destroy()
                        end
                        sethiddenproperty(game.Players.LocalPlayer, "SimulationRadius", math.huge)
                    end
                end
            end)
        end
    end
end)

-- Auto Raid System
function StartAutoRaid()
    spawn(function()
        while _G.AutoRaid do
            if game:GetService("Players")["LocalPlayer"].PlayerGui.Main.Timer.Visible == true then
                for i,v in pairs(game:GetService("Workspace").Enemies:GetDescendants()) do
                    if v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
                        repeat task.wait(_G.Fast_Delay)
                            AttackNoCoolDown()
                            AutoHaki()
                            EquipTool(_G.SelectedWeapon)
                            v.HumanoidRootPart.CanCollide = false
                            v.Humanoid.WalkSpeed = 0
                            v.HumanoidRootPart.Size = Vector3.new(80, 80, 80)
                            Tween(v.HumanoidRootPart.CFrame * CFrame.new(posX, posY, posZ))
                        until not _G.AutoRaid or not v.Parent or v.Humanoid.Health <= 0
                    end
                end
            else
                -- If raid not active, try to buy microchip
                if not game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Island 1") then
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("RaidsNpc", "Select", _G.SelectedRaid)
                end
                if game:GetService("Players")["LocalPlayer"].PlayerGui.Main.Timer.Visible == false then
                    if game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Special Microchip") or game:GetService("Players").LocalPlayer.Character:FindFirstChild("Special Microchip") then
                        for i,v in pairs(game:GetService("Workspace")["_WorldOrigin"].Locations:GetChildren()) do
                            if v.Name == "Island 1" then -- Start with Island 1
                                Tween(v.CFrame * CFrame.new(0, 60, 0))
                            end
                        end
                        wait(1)
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("RaidsNpc", "Raid")
                    else
                        -- Buy Chip
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("RaidsNpc", "Select", _G.SelectedRaid)
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("RaidsNpc", "Buy")
                    end
                end
            end
            wait()
        end
    end)
end

-- Death Step Auto Farm
function StartAutoDeathStep()
    spawn(function()
        while _G.AutoDeathStep do
            if game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Black Leg") or game:GetService("Players").LocalPlayer.Character:FindFirstChild("Black Leg") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Death Step") or game:GetService("Players").LocalPlayer.Character:FindFirstChild("Death Step") then
                if game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Black Leg") and game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Black Leg").Level.Value >= 450 then
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyDeathStep")
                    _G.SelectedWeapon = "Death Step"
                end  
                if game:GetService("Players").LocalPlayer.Character:FindFirstChild("Black Leg") and game:GetService("Players").LocalPlayer.Character:FindFirstChild("Black Leg").Level.Value >= 450 then
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyDeathStep")
                    _G.SelectedWeapon = "Death Step"
                end  
                if game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Black Leg") and game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Black Leg").Level.Value <= 449 then
                    _G.SelectedWeapon = "Black Leg"
                end 
            else 
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyBlackLeg")
            end
        end
    end)
end

-- Function to redeem all codes
function RedeemAllCodes()
    local codes = {
        "Sub2UncleKizaru",
        "SUB2NOOBMASTER123",
        "StrawHatMaine",
        "Sub2OfficialNoobie",
        "SUB2GAMERROBOT_EXP1",
        "THEGREATACE",
        "BIGNEWS",
        "FUDD10",
        "FUDD10_V2",
        "TYRELLIOSAMA",
        "SUB2CAPTAINMAUI",
        "kittgaming",
        "DEVSCOOKING",
        "ADMINGIVEAWAY",
        "SUB2DAIGROCK",
        "JCWK",
        "Starcodeheo",
        "Bluxxy",
        "Axiore",
        "TANTAIGAMING",
        "STRAWHATMAINE",
    }
    
    for _, code in pairs(codes) do
        game:GetService("ReplicatedStorage").Remotes.Redeem:InvokeServer(code)
        wait(0.5)
    end
    
    game.StarterGui:SetCore("SendNotification", {
        Title = "SkyX Hub",
        Text = "All codes redeemed!",
        Duration = 3
    })
end

-- Auto Store Fruit
function CheckAllFruits()
    local fruitsStored = 0
    for i, v in pairs(game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("getInventoryFruits")) do
        if type(v) == "table" then
            fruitsStored = fruitsStored + 1
        end
    end
    return fruitsStored
end

function StoreAllFruits()
    for i, v in pairs(game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("getInventoryFruits")) do
        if type(v) == "table" then
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit", v.Name)
        end
    end
end

local AllFruits = {
    "Bomb-Bomb",
    "Spike-Spike",
    "Chop-Chop",
    "Spring-Spring",
    "Kilo-Kilo",
    "Smoke-Smoke",
    "Spin-Spin",
    "Flame-Flame",
    "Bird-Bird: Falcon",
    "Ice-Ice",
    "Sand-Sand",
    "Dark-Dark",
    "Revive-Revive",
    "Diamond-Diamond",
    "Light-Light",
    "Love-Love",
    "Rubber-Rubber",
    "Barrier-Barrier",
    "Magma-Magma",
    "Door-Door",
    "Quake-Quake",
    "Human-Human: Buddha",
    "String-String",
    "Bird-Bird: Phoenix",
    "Rumble-Rumble",
    "Paw-Paw",
    "Gravity-Gravity",
    "Dough-Dough",
    "Venom-Venom",
    "Shadow-Shadow",
    "Control-Control",
    "Soul-Soul",
    "Dragon-Dragon"
}

function StartAutoStoreFruit()
    spawn(function()
        while _G.AutoStoreFruit do
            -- Check backpack for fruits
            for i, v in pairs(game:GetService("Players").LocalPlayer.Backpack:GetChildren()) do
                if string.find(v.Name, "Fruit") and table.find(AllFruits, v.Name) then
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit", v.Name)
                end
            end
            
            -- Check character for fruits
            for i, v in pairs(game:GetService("Players").LocalPlayer.Character:GetChildren()) do
                if string.find(v.Name, "Fruit") and table.find(AllFruits, v.Name) then
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit", v.Name)
                end
            end
            
            wait(1)
        end
    end)
end

-- Auto Rejoin
function StartAutoRejoin()
    spawn(function()
        while _G.AutoRejoin do
            game:GetService("CoreGui").RobloxPromptGui.promptOverlay.ChildAdded:Connect(function(child)
                if child.Name == 'ErrorPrompt' and child:FindFirstChild('MessageArea') and child.MessageArea:FindFirstChild("ErrorFrame") then
                    game:GetService("TeleportService"):Teleport(game.PlaceId, game:GetService("Players").LocalPlayer)
                end
            end)
            wait(10)
        end
    end)
end

------ End of Fluent Script Core ------

-- Create SkyX Hub UI with Fluent functions
-- Main Tab
local MainTab = SkyXUI:CreateTab("Main")

local FarmingSection = MainTab:CreateSection("Auto Farm")

FarmingSection:AddToggle({
    Name = "Auto Farm",
    Default = false,
    Callback = function(Value)
        _G.AutoFarm = Value
        if Value then
            StartAutoFarm()
        end
    end
})

FarmingSection:AddToggle({
    Name = "Auto Level",
    Default = false,
    Callback = function(Value)
        _G.AutoLevel = Value
        if Value then
            StartAutoFarm()
        end
    end
})

local AttackSection = MainTab:CreateSection("Attack Settings")

AttackSection:AddToggle({
    Name = "Fast Attack",
    Default = true,
    Callback = function(Value)
        _G.FastAttack = Value
    end
})

local weaponTypes = {"Melee", "Sword", "Blox Fruit"}
AttackSection:AddDropdown({
    Name = "Select Weapon Type",
    Options = weaponTypes,
    Default = "Melee",
    Callback = function(Value)
        _G.SelectedWeapon = Value
    end
})

AttackSection:AddDropdown({
    Name = "Attack Speed",
    Options = {"Normal Attack", "Fast Attack", "Super Fast Attack"},
    Default = "Fast Attack",
    Callback = function(Value)
        if Value == "Fast Attack" then
            _G.Fast_Delay = 0.1
        elseif Value == "Normal Attack" then
            _G.Fast_Delay = 0.15
        elseif Value == "Super Fast Attack" then
            _G.Fast_Delay = 0
        end
    end
})

-- Raid Tab
local RaidTab = SkyXUI:CreateTab("Raid")

local RaidSection = RaidTab:CreateSection("Raid Settings")

RaidSection:AddToggle({
    Name = "Auto Raid",
    Default = false,
    Callback = function(Value)
        _G.AutoRaid = Value
        if Value then
            StartAutoRaid()
        end
    end
})

local raidOptions = {"Flame", "Ice", "Quake", "Light", "Dark", "String", "Rumble", "Magma", "Human: Buddha", "Sand", "Bird: Phoenix", "Dough"}
RaidSection:AddDropdown({
    Name = "Select Raid",
    Options = raidOptions,
    Default = "Flame",
    Callback = function(Value)
        _G.SelectedRaid = Value
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("RaidsNpc", "Select", Value)
    end
})

-- Fighting Style Tab
local StyleTab = SkyXUI:CreateTab("Fighting Style")

local StyleSection = StyleTab:CreateSection("Auto Fighting Style")

StyleSection:AddToggle({
    Name = "Auto Death Step",
    Default = false,
    Callback = function(Value)
        _G.AutoDeathStep = Value
        if Value then
            StartAutoDeathStep()
        end
    end
})

StyleSection:AddToggle({
    Name = "Auto Sharkman Karate",
    Default = false,
    Callback = function(Value)
        _G.AutoSharkman = Value
    end
})

StyleSection:AddToggle({
    Name = "Auto Electric Claw",
    Default = false,
    Callback = function(Value)
        _G.AutoElectricClaw = Value
    end
})

StyleSection:AddToggle({
    Name = "Auto Dragon Talon",
    Default = false,
    Callback = function(Value)
        _G.AutoDragonTalon = Value
    end
})

StyleSection:AddToggle({
    Name = "Auto God Human",
    Default = false,
    Callback = function(Value)
        _G.AutoGodhuman = Value
    end
})

-- Teleport Tab
local TeleportTab = SkyXUI:CreateTab("Teleport")

local IslandSection = TeleportTab:CreateSection("Islands")

-- First Sea Islands
if game.PlaceId == 2753915549 then
    local FirstSeaIslands = {
        ["Starter Island"] = CFrame.new(1071.2832031.25, 16.3.54874992371, 1426.8630371094),
        ["Marine Base"] = CFrame.new(-4968.9143066406, 20.6.52530670166, 4245.6489257813),
        ["Middle Town"] = CFrame.new(-654.77362060547, 7.8522434234619, 1436.567260.5469),
        ["Jungle"] = CFrame.new(-1342.3.18359375, 11.8521.0063477, 500.25341796875),
        ["Pirate Village"] = CFrame.new(-1188.6.28515625, 4.752050399780.4, 3881.5966796875),
        ["Desert"] = CFrame.new(1094.14453125, 6.4980626106262, 4192.88671875),
        ["Frozen Village"] = CFrame.new(1198.0073242188, 27.19756.5765381, -1211.4983.69141)
    }
    
    for name, cframe in pairs(FirstSeaIslands) do
        IslandSection:AddButton({
            Name = name,
            Callback = function()
                Tween(cframe)
                game.StarterGui:SetCore("SendNotification", {
                    Title = "SkyX Hub",
                    Text = "Teleporting to " .. name,
                    Duration = 3
                })
            end
        })
    end
end

-- Stats Tab
local StatsTab = SkyXUI:CreateTab("Stats")

local StatSection = StatsTab:CreateSection("Auto Stats")

local statTypes = {"Melee", "Defense", "Sword", "Gun", "Demon Fruit"}
for _, statType in pairs(statTypes) do
    StatSection:AddToggle({
        Name = "Auto " .. statType,
        Default = false,
        Callback = function(Value)
            _G["Auto" .. statType] = Value
            
            if Value then
                spawn(function()
                    while _G["Auto" .. statType] do
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("AddPoint", statType, 1)
                        wait(0.1)
                    end
                end)
            end
        end
    })
end

-- Devil Fruit Tab
local FruitTab = SkyXUI:CreateTab("Devil Fruit")

local FruitSection = FruitTab:CreateSection("Devil Fruit Settings")

FruitSection:AddToggle({
    Name = "Auto Store Fruit",
    Default = false,
    Callback = function(Value)
        _G.AutoStoreFruit = Value
        if Value then
            StartAutoStoreFruit()
        end
    end
})

FruitSection:AddButton({
    Name = "Store All Fruits",
    Callback = function()
        StoreAllFruits()
        game.StarterGui:SetCore("SendNotification", {
            Title = "SkyX Hub",
            Text = "All fruits have been stored!",
            Duration = 3
        })
    end
})

-- Misc Tab
local MiscTab = SkyXUI:CreateTab("Misc")

local CodeSection = MiscTab:CreateSection("Codes")

CodeSection:AddButton({
    Name = "Redeem All Codes",
    Callback = function()
        RedeemAllCodes()
    end
})

local AutoChestSection = MiscTab:CreateSection("Auto Chest")

AutoChestSection:AddButton({
    Name = "Auto Chest (Pirates Team)",
    Callback = function()
        _G.JoinTeam = "Pirates"
        _G.Stop_If_Has_Items = true
        loadstring(game:HttpGet("https://github.com/PNguyen0199/Script/raw/main/Trash_Auto_Chest.lua"))()
    end
})

local MiscSettingsSection = MiscTab:CreateSection("Misc Settings")

MiscSettingsSection:AddToggle({
    Name = "Auto Rejoin",
    Default = false,
    Callback = function(Value)
        _G.AutoRejoin = Value
        if Value then
            StartAutoRejoin()
        end
    end
})

-- Print loaded message
print("SkyX Hub - Blox Fruits Complete Version loaded successfully!")
