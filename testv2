--[[
    SkyX Premium MM2 Script (Advanced Luna Edition)
    20+ Powerful Features with custom engine
]]

-- Load the Luna Interface Suite
local Luna = loadstring(game:HttpGet("https://raw.githubusercontent.com/Nebula-Softworks/Luna-Interface-Suite/main/source.lua", true))()

-- Game check
if game.PlaceId ~= 142823291 and game.PlaceId ~= 881738579 then
    Luna:Notify({
        Title = "SkyX MM2 Script",
        Content = "This script is only for Murder Mystery 2!"
    })
    return
end

-- Services
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local Workspace = game:GetService("Workspace")
local CoreGui = game:GetService("CoreGui")

-- Variables
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local Humanoid = Character:WaitForChild("Humanoid")
local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")
local Camera = workspace.CurrentCamera
local Mouse = LocalPlayer:GetMouse()

-- Cached roles
local PlayerRoles = {}
local Murderer = nil
local Sheriff = nil

-- MM2 Values
local GunDrop = nil
local Knife = nil

-- ESP Settings
local ESPSettings = {
    Enabled = false,
    ShowMurderer = true,
    ShowSheriff = true,
    ShowGun = true,
    MurdererColor = Color3.fromRGB(255, 0, 0),
    SheriffColor = Color3.fromRGB(0, 0, 255),
    PlayerColor = Color3.fromRGB(0, 255, 0),
    GunColor = Color3.fromRGB(0, 255, 255),
    RainbowESP = false,
    ShowDistance = true,
    ShowNames = true,
    ShowBoxes = true,
    BoxOutline = true,
    UseTeamColors = false
}

-- Coin Collection Settings
local CoinSettings = {
    Enabled = false,
    CollectDistance = 20,
    CollectDelay = 0.1,
    CollectingCoins = false, -- State tracking
    LastCoinTime = 0
}

-- Auto Farm Settings
local AutoFarmSettings = {
    Enabled = false,
    SafeMode = true,
    HidePlayerName = true
}

-- Kill Aura Settings
local KillAuraSettings = {
    Enabled = false,
    Range = 10,
    TargetMurderer = false,
    Cooldown = 0.5,
    LastKill = 0
}

-- Anti-Sheriff Settings
local AntiSheriffSettings = {
    Enabled = false,
    Dodging = false,
    Range = 15,
    DodgeDistance = 15
}

-- Player Settings
local PlayerSettings = {
    SpeedEnabled = false,
    SpeedValue = 16,
    JumpEnabled = false,
    JumpPower = 50,
    NoClip = false,
    Invisible = false,
    AntiRagdoll = false,
    AutoGrabGun = false,
    GodMode = false,
    FlightEnabled = false,
    FlightSpeed = 50
}

-- Aimbot Settings
local AimbotSettings = {
    Enabled = false,
    TargetPart = "Head",
    TeamCheck = true,
    AimAtMurderer = true,
    Sensitivity = 0.5,
    FOV = 150,
    ShowFOV = true,
    FOVColor = Color3.fromRGB(255, 255, 255),
    Locked = false,
    CurrentTarget = nil
}

-- Teleport Settings
local TeleportSettings = {
    LoopTP = false,
    TPTarget = nil
}

-- Emote Settings
local EmoteSettings = {
    Enabled = false,
    CurrentEmote = "floss",
    LoopEmotes = false
}

-- Character respawn handling
LocalPlayer.CharacterAdded:Connect(function(NewCharacter)
    Character = NewCharacter
    Humanoid = Character:WaitForChild("Humanoid")
    HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")
    
    -- Reapply player settings
    if PlayerSettings.SpeedEnabled then
        Humanoid.WalkSpeed = PlayerSettings.SpeedValue
    end
    
    if PlayerSettings.JumpEnabled then
        Humanoid.JumpPower = PlayerSettings.JumpPower
    end
    
    if PlayerSettings.AntiRagdoll then
        EnableAntiRagdoll()
    end
    
    wait(1) -- Wait for character to load fully
    UpdateRoles() -- Refresh roles cache
 end)

-- Functions
local SkyXFunctions = {}

-- Get player role
function SkyXFunctions:GetPlayerRole(player)
    if player and player.Character then
        local Backpack = player:FindFirstChild("Backpack")
        
        if Backpack then
            if Backpack:FindFirstChild("Knife") or player.Character:FindFirstChild("Knife") then
                return "Murderer"
            elseif Backpack:FindFirstChild("Gun") or player.Character:FindFirstChild("Gun") then
                return "Sheriff"
            end
        end
    end
    return "Innocent"
end

-- Update all player roles
function UpdateRoles()
    PlayerRoles = {}
    Murderer = nil
    Sheriff = nil
    
    for _, player in pairs(Players:GetPlayers()) do
        local role = SkyXFunctions:GetPlayerRole(player)
        PlayerRoles[player.Name] = role
        
        if role == "Murderer" then
            Murderer = player
        elseif role == "Sheriff" then
            Sheriff = player
        end
        
        -- Find knife
        if role == "Murderer" and player.Character then
            local knife = player.Character:FindFirstChild("Knife") or 
                        (player.Backpack and player.Backpack:FindFirstChild("Knife"))
            if knife then
                Knife = knife
            end
        end
    end
    
    -- Look for dropped gun
    for _, item in pairs(Workspace:GetChildren()) do
        if item.Name == "GunDrop" then
            GunDrop = item
            break
        end
    end
end

-- Create ESP
local ESPObjects = {}

function CreateESP()
    -- Remove old ESP
    for obj, _ in pairs(ESPObjects) do
        if obj and obj:IsA("Folder") then
            obj:Destroy()
        end
    end
    ESPObjects = {}
    
    -- Create new ESP
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local role = PlayerRoles[player.Name] or SkyXFunctions:GetPlayerRole(player)
            
            -- Only show if enabled
            if (role == "Murderer" and ESPSettings.ShowMurderer) or 
               (role == "Sheriff" and ESPSettings.ShowSheriff) or 
               (role == "Innocent") then
                
                local espFolder = Instance.new("Folder")
                espFolder.Name = player.Name .. "_ESP"
                espFolder.Parent = CoreGui
                
                local boxOutline = nil
                local box = nil
                
                if ESPSettings.ShowBoxes then
                    if ESPSettings.BoxOutline then
                        boxOutline = Instance.new("BoxHandleAdornment")
                        boxOutline.Name = "BoxOutline"
                        boxOutline.Size = Vector3.new(4, 6, 4)
                        boxOutline.Color3 = Color3.new(0, 0, 0)
                        boxOutline.Transparency = 0.5
                        boxOutline.ZIndex = 0
                        boxOutline.AlwaysOnTop = true
                        boxOutline.Visible = true
                        boxOutline.Adornee = player.Character
                        boxOutline.Parent = espFolder
                    end
                    
                    box = Instance.new("BoxHandleAdornment")
                    box.Name = "Box"
                    box.Size = Vector3.new(3.5, 5.5, 3.5)
                    box.Transparency = 0.5
                    box.ZIndex = 1
                    box.AlwaysOnTop = true
                    box.Visible = true
                    box.Adornee = player.Character
                    box.Parent = espFolder
                end
                
                local nameLabel = nil
                if ESPSettings.ShowNames then
                    nameLabel = Instance.new("BillboardGui")
                    nameLabel.Name = "NameLabel"
                    nameLabel.Size = UDim2.new(0, 200, 0, 50)
                    nameLabel.Adornee = player.Character:FindFirstChild("Head")
                    nameLabel.StudsOffset = Vector3.new(0, 2, 0)
                    nameLabel.AlwaysOnTop = true
                    nameLabel.Parent = espFolder
                    
                    local nameText = Instance.new("TextLabel")
                    nameText.Name = "NameText"
                    nameText.Size = UDim2.new(0, 200, 0, 50)
                    nameText.BackgroundTransparency = 1
                    nameText.TextSize = 16
                    nameText.Font = Enum.Font.GothamBold
                    nameText.TextStrokeTransparency = 0.5
                    nameText.TextStrokeColor3 = Color3.new(0, 0, 0)
                    nameText.Parent = nameLabel
                    
                    -- Set text based on ESP settings
                    if ESPSettings.ShowDistance then
                        local distance = math.floor((player.Character.HumanoidRootPart.Position - HumanoidRootPart.Position).Magnitude)
                        nameText.Text = player.Name .. " [" .. role .. "] [" .. distance .. "m]"
                    else
                        nameText.Text = player.Name .. " [" .. role .. "]"
                    end
                end
                
                -- Determine color
                local color = ESPSettings.PlayerColor
                if role == "Murderer" then
                    color = ESPSettings.MurdererColor
                elseif role == "Sheriff" then
                    color = ESPSettings.SheriffColor
                end
                
                -- Apply colors
                if box then box.Color3 = color end
                if nameLabel and nameLabel:FindFirstChild("NameText") then
                    nameLabel.NameText.TextColor3 = color
                end
                
                -- Add to ESP objects
                ESPObjects[espFolder] = {
                    Player = player,
                    Box = box,
                    BoxOutline = boxOutline,
                    NameLabel = nameLabel,
                    Role = role
                }
            end
        end
    end
    
    -- Create ESP for dropped gun if enabled
    if ESPSettings.ShowGun and GunDrop then
        local gunEspFolder = Instance.new("Folder")
        gunEspFolder.Name = "GunDrop_ESP"
        gunEspFolder.Parent = CoreGui
        
        local gunBox = Instance.new("BoxHandleAdornment")
        gunBox.Name = "Box"
        gunBox.Size = Vector3.new(2, 2, 2)
        gunBox.Color3 = ESPSettings.GunColor
        gunBox.Transparency = 0.5
        gunBox.ZIndex = 1
        gunBox.AlwaysOnTop = true
        gunBox.Visible = true
        gunBox.Adornee = GunDrop
        gunBox.Parent = gunEspFolder
        
        local gunLabel = Instance.new("BillboardGui")
        gunLabel.Name = "GunLabel"
        gunLabel.Size = UDim2.new(0, 200, 0, 50)
        gunLabel.Adornee = GunDrop
        gunLabel.StudsOffset = Vector3.new(0, 1, 0)
        gunLabel.AlwaysOnTop = true
        gunLabel.Parent = gunEspFolder
        
        local gunText = Instance.new("TextLabel")
        gunText.Name = "GunText"
        gunText.Size = UDim2.new(0, 200, 0, 50)
        gunText.BackgroundTransparency = 1
        gunText.Text = "Gun"
        gunText.TextColor3 = ESPSettings.GunColor
        gunText.TextSize = 16
        gunText.Font = Enum.Font.GothamBold
        gunText.TextStrokeTransparency = 0.5
        gunText.TextStrokeColor3 = Color3.new(0, 0, 0)
        gunText.Parent = gunLabel
        
        -- Add distance if enabled
        if ESPSettings.ShowDistance then
            local distance = math.floor((GunDrop.Position - HumanoidRootPart.Position).Magnitude)
            gunText.Text = "Gun [" .. distance .. "m]"
        end
        
        -- Add to ESP objects
        ESPObjects[gunEspFolder] = {
            Gun = GunDrop,
            Box = gunBox,
            Label = gunLabel
        }
    end
end

-- Update ESP
function UpdateESP()
    if not ESPSettings.Enabled then return end
    
    for folder, data in pairs(ESPObjects) do
        if folder and folder:IsA("Folder") then
            -- For player ESP
            if data.Player and data.Player.Character and data.Player.Character:FindFirstChild("HumanoidRootPart") then
                -- Update distance
                if ESPSettings.ShowDistance and data.NameLabel and data.NameLabel:FindFirstChild("NameText") then
                    local distance = math.floor((data.Player.Character.HumanoidRootPart.Position - HumanoidRootPart.Position).Magnitude)
                    data.NameLabel.NameText.Text = data.Player.Name .. " [" .. data.Role .. "] [" .. distance .. "m]"
                end
                
                -- Rainbow color
                if ESPSettings.RainbowESP then
                    local hue = tick() % 10 / 10
                    local color = Color3.fromHSV(hue, 1, 1)
                    
                    if data.Box then data.Box.Color3 = color end
                    if data.NameLabel and data.NameLabel:FindFirstChild("NameText") then
                        data.NameLabel.NameText.TextColor3 = color
                    end
                end
            end
            
            -- For gun ESP
            if data.Gun then
                if ESPSettings.ShowDistance and data.Label and data.Label:FindFirstChild("GunText") then
                    local distance = math.floor((data.Gun.Position - HumanoidRootPart.Position).Magnitude)
                    data.Label.GunText.Text = "Gun [" .. distance .. "m]"
                end
                
                if ESPSettings.RainbowESP then
                    local hue = tick() % 10 / 10
                    local color = Color3.fromHSV(hue, 1, 1)
                    
                    if data.Box then data.Box.Color3 = color end
                    if data.Label and data.Label:FindFirstChild("GunText") then
                        data.Label.GunText.TextColor3 = color
                    end
                end
            end
        end
    end
end

-- Auto collect coins
function CollectCoins()
    if not CoinSettings.Enabled then return end
    if CoinSettings.CollectingCoins then return end
    if os.time() - CoinSettings.LastCoinTime < CoinSettings.CollectDelay then return end
    
    CoinSettings.CollectingCoins = true
    CoinSettings.LastCoinTime = os.time()
    
    -- Find coins
    local coins = {}
    for _, obj in pairs(Workspace:GetDescendants()) do
        if obj.Name == "Coin" and obj:IsA("Part") then
            local distance = (obj.Position - HumanoidRootPart.Position).Magnitude
            if distance <= CoinSettings.CollectDistance then
                table.insert(coins, obj)
            end
        end
    end
    
    -- Collect nearest coin
    if #coins > 0 then
        table.sort(coins, function(a, b)
            return (a.Position - HumanoidRootPart.Position).Magnitude < 
                   (b.Position - HumanoidRootPart.Position).Magnitude
        end)
        
        local coin = coins[1]
        local oldPosition = HumanoidRootPart.CFrame
        HumanoidRootPart.CFrame = CFrame.new(coin.Position)
        wait(0.1) -- Wait for collection
        HumanoidRootPart.CFrame = oldPosition
    end
    
    CoinSettings.CollectingCoins = false
end

-- Check if safe to teleport
function IsSafeTeleport(position)
    if not AutoFarmSettings.SafeMode then return true end
    if not Murderer then UpdateRoles() end
    
    if Murderer and Murderer.Character and Murderer.Character:FindFirstChild("HumanoidRootPart") then
        local distance = (position - Murderer.Character.HumanoidRootPart.Position).Magnitude
        if distance < 10 then -- Don't teleport near murderer
            return false
        end
    end
    
    return true
end

-- Auto farm
function AutoFarm()
    if not AutoFarmSettings.Enabled then return end
    
    -- Hide name if enabled
    if AutoFarmSettings.HidePlayerName then
        local playerHead = Character:FindFirstChild("Head")
        if playerHead then
            local nameTag = playerHead:FindFirstChild("Overhead")
            if nameTag then
                nameTag.Enabled = false
            end
        end
    end
    
    -- Auto collect coins with safety check
    if CoinSettings.Enabled then
        local coins = {}
        for _, obj in pairs(Workspace:GetDescendants()) do
            if obj.Name == "Coin" and obj:IsA("Part") then
                local distance = (obj.Position - HumanoidRootPart.Position).Magnitude
                if distance <= 100 then -- Search in wider range
                    table.insert(coins, obj)
                end
            end
        end
        
        if #coins > 0 then
            table.sort(coins, function(a, b)
                return (a.Position - HumanoidRootPart.Position).Magnitude < 
                       (b.Position - HumanoidRootPart.Position).Magnitude
            end)
            
            -- Check if coin is safe to collect
            for _, coin in ipairs(coins) do
                if IsSafeTeleport(coin.Position) then
                    local oldPosition = HumanoidRootPart.CFrame
                    HumanoidRootPart.CFrame = CFrame.new(coin.Position)
                    wait(0.1) -- Wait for collection
                    HumanoidRootPart.CFrame = oldPosition
                    break
                end
            end
        end
    end
    
    -- Auto grab gun if sheriff drops it
    if PlayerSettings.AutoGrabGun and GunDrop then
        if IsSafeTeleport(GunDrop.Position) then
            local oldPosition = HumanoidRootPart.CFrame
            HumanoidRootPart.CFrame = CFrame.new(GunDrop.Position)
            wait(0.2) -- Wait to grab gun
            HumanoidRootPart.CFrame = oldPosition
        end
    end
end

-- Kill Aura
function KillAura()
    if not KillAuraSettings.Enabled then return end
    if os.time() - KillAuraSettings.LastKill < KillAuraSettings.Cooldown then return end
    
    local role = SkyXFunctions:GetPlayerRole(LocalPlayer)
    if role ~= "Murderer" then return end
    
    local knife = Character:FindFirstChild("Knife") or
                 (LocalPlayer.Backpack and LocalPlayer.Backpack:FindFirstChild("Knife"))
    if not knife then return end
    
    -- Equip the knife if not already equipped
    if knife.Parent ~= Character then
        knife.Parent = Character
    end
    
    -- Find closest target
    local closestPlayer = nil
    local closestDistance = KillAuraSettings.Range
    
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and 
           player.Character:FindFirstChild("HumanoidRootPart") and
           player.Character:FindFirstChild("Humanoid") and 
           player.Character.Humanoid.Health > 0 then
            
            -- Skip murderer if targeting murderer is disabled
            if KillAuraSettings.TargetMurderer == false and PlayerRoles[player.Name] == "Murderer" then
                continue
            end
            
            local distance = (player.Character.HumanoidRootPart.Position - HumanoidRootPart.Position).Magnitude
            if distance < closestDistance then
                closestPlayer = player
                closestDistance = distance
            end
        end
    end
    
    -- Attempt to kill the target
    if closestPlayer then
        KillAuraSettings.LastKill = os.time()
        
        -- Teleport to the player briefly
        local oldPosition = HumanoidRootPart.CFrame
        HumanoidRootPart.CFrame = closestPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, 2)
        wait(0.1)
        
        -- Use knife/stab
        local knifeEvent = knife:FindFirstChild("StabEvent") or knife:FindFirstChild("Use")
        if knifeEvent and knifeEvent:IsA("RemoteEvent") then
            knifeEvent:FireServer()
        end
        
        wait(0.1)
        HumanoidRootPart.CFrame = oldPosition
    end
end

-- Anti-Sheriff
function AntiSheriff()
    if not AntiSheriffSettings.Enabled then return end
    if AntiSheriffSettings.Dodging then return end
    
    local role = SkyXFunctions:GetPlayerRole(LocalPlayer)
    if role ~= "Murderer" then return end
    
    if Sheriff and Sheriff.Character and Sheriff.Character:FindFirstChild("HumanoidRootPart") then
        local sheriffDistance = (Sheriff.Character.HumanoidRootPart.Position - HumanoidRootPart.Position).Magnitude
        
        -- Check if sheriff is aiming at us (has equipped gun)
        local sheriffHasGunEquipped = Sheriff.Character:FindFirstChild("Gun") ~= nil
        
        if sheriffHasGunEquipped and sheriffDistance <= AntiSheriffSettings.Range then
            AntiSheriffSettings.Dodging = true
            
            -- Quick teleport away in a random direction
            local direction = Vector3.new(math.random(-10, 10), 0, math.random(-10, 10)).Unit
            local targetPosition = HumanoidRootPart.Position + direction * AntiSheriffSettings.DodgeDistance
            
            -- Make sure we don't teleport into walls
            local ray = Ray.new(HumanoidRootPart.Position, direction * AntiSheriffSettings.DodgeDistance)
            local hit, hitPos = workspace:FindPartOnRayWithIgnoreList(ray, {Character})
            
            if hit then
                targetPosition = hitPos - direction * 2 -- Stay 2 studs away from the wall
            end
            
            HumanoidRootPart.CFrame = CFrame.new(targetPosition)
            
            wait(1) -- Cooldown
            AntiSheriffSettings.Dodging = false
        end
    end
end

-- Aimbot functions
local FOVCircle = Drawing.new("Circle")
FOVCircle.Thickness = 2
FOVCircle.NumSides = 120
FOVCircle.Radius = AimbotSettings.FOV
FOVCircle.Filled = false
FOVCircle.Visible = AimbotSettings.ShowFOV
FOVCircle.ZIndex = 1
FOVCircle.Transparency = 1
FOVCircle.Color = AimbotSettings.FOVColor

function UpdateFOVCircle()
    if not AimbotSettings.ShowFOV then
        FOVCircle.Visible = false
        return
    end
    
    FOVCircle.Visible = true
    FOVCircle.Radius = AimbotSettings.FOV
    FOVCircle.Color = AimbotSettings.FOVColor
    FOVCircle.Position = Vector2.new(Mouse.X, Mouse.Y + 36)
end

function GetClosestPlayerToCursor()
    if not AimbotSettings.Enabled then
        AimbotSettings.CurrentTarget = nil
        return nil
    end
    
    local closestPlayer = nil
    local shortestDistance = math.huge
    
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and 
           player.Character:FindFirstChild("HumanoidRootPart") and
           player.Character:FindFirstChild("Humanoid") and 
           player.Character.Humanoid.Health > 0 then
            
            -- Team check
            if AimbotSettings.TeamCheck then
                local role = PlayerRoles[player.Name] or SkyXFunctions:GetPlayerRole(player)
                
                -- Skip sheriff if we're the murderer
                if role == "Sheriff" and SkyXFunctions:GetPlayerRole(LocalPlayer) == "Murderer" then
                    continue
                end
                
                -- Only target murderer if that option is enabled
                if AimbotSettings.AimAtMurderer and role ~= "Murderer" then
                    continue
                end
            end
            
            local targetPart = player.Character:FindFirstChild(AimbotSettings.TargetPart) or 
                              player.Character:FindFirstChild("HumanoidRootPart")
            
            if targetPart then
                local screenPos, onScreen = Camera:WorldToScreenPoint(targetPart.Position)
                
                if onScreen then
                    local distFromMouse = (Vector2.new(Mouse.X, Mouse.Y) - Vector2.new(screenPos.X, screenPos.Y)).Magnitude
                    
                    if distFromMouse < AimbotSettings.FOV then
                        if distFromMouse < shortestDistance then
                            closestPlayer = player
                            shortestDistance = distFromMouse
                        end
                    end
                end
            end
        end
    end
    
    AimbotSettings.CurrentTarget = closestPlayer
    return closestPlayer
end

function EnableAimbot()
    UserInputService.InputBegan:Connect(function(input, gameProcessed)
        if not gameProcessed and input.UserInputType == Enum.UserInputType.MouseButton2 then
            AimbotSettings.Locked = true
        end
    end)
    
    UserInputService.InputEnded:Connect(function(input, gameProcessed)
        if input.UserInputType == Enum.UserInputType.MouseButton2 then
            AimbotSettings.Locked = false
        end
    end)
    
    RunService.RenderStepped:Connect(function()
        UpdateFOVCircle()
        
        if AimbotSettings.Enabled and AimbotSettings.Locked then
            local target = GetClosestPlayerToCursor()
            
            if target and target.Character then
                local targetPart = target.Character:FindFirstChild(AimbotSettings.TargetPart) or 
                                  target.Character:FindFirstChild("HumanoidRootPart")
                if targetPart then
                    local screenPos, onScreen = Camera:WorldToScreenPoint(targetPart.Position)
                    
                    if onScreen then
                        local moveX = (screenPos.X - Mouse.X) * AimbotSettings.Sensitivity
                        local moveY = (screenPos.Y - Mouse.Y) * AimbotSettings.Sensitivity
                        
                        mousemoverel(moveX, moveY)
                    end
                end
            end
        end
    end)
end

-- Anti-Ragdoll function
function EnableAntiRagdoll()
    if not Character then return end
    
    local function disableRagdoll()
        for _, limb in pairs(Character:GetChildren()) do
            if limb:IsA("BasePart") and limb.Name ~= "HumanoidRootPart" then
                if limb:FindFirstChild("RagdollBallSocket") then
                    limb.RagdollBallSocket.Enabled = false
                end
                
                if limb:FindFirstChild("RagdollHingeConstraint") then
                    limb.RagdollHingeConstraint.Enabled = false
                end
            end
        end
    end
    
    disableRagdoll() -- Initial call
    
    -- Watch for new constraints
    Character.ChildAdded:Connect(function(child)
        if child:IsA("BasePart") then
            child.ChildAdded:Connect(function(constraint)
                if constraint.Name:match("Ragdoll") and PlayerSettings.AntiRagdoll then
                    constraint.Enabled = false
                end
            end)
        end
    end)
 end

-- Flight function
local Flying = false
local FlyConnection = nil

function ToggleFlight(enabled)
    if enabled and not Flying then
        Flying = true
        
        local bodyVelocity = Instance.new("BodyVelocity")
        bodyVelocity.Velocity = Vector3.new(0, 0, 0)
        bodyVelocity.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
        bodyVelocity.Parent = HumanoidRootPart
        
        FlyConnection = RunService.RenderStepped:Connect(function()
            if Flying then
                local flyDirection = Vector3.new(0, 0, 0)
                
                if UserInputService:IsKeyDown(Enum.KeyCode.W) then
                    flyDirection = flyDirection + Camera.CFrame.LookVector
                end
                if UserInputService:IsKeyDown(Enum.KeyCode.S) then
                    flyDirection = flyDirection - Camera.CFrame.LookVector
                end
                if UserInputService:IsKeyDown(Enum.KeyCode.A) then
                    flyDirection = flyDirection - Camera.CFrame.RightVector
                end
                if UserInputService:IsKeyDown(Enum.KeyCode.D) then
                    flyDirection = flyDirection + Camera.CFrame.RightVector
                end
                if UserInputService:IsKeyDown(Enum.KeyCode.Space) then
                    flyDirection = flyDirection + Vector3.new(0, 1, 0)
                end
                if UserInputService:IsKeyDown(Enum.KeyCode.LeftControl) then
                    flyDirection = flyDirection - Vector3.new(0, 1, 0)
                end
                
                -- Normalize the direction if it's not zero
                if flyDirection.Magnitude > 0 then
                    flyDirection = flyDirection.Unit
                end
                
                -- Apply the flight speed
                bodyVelocity.Velocity = flyDirection * PlayerSettings.FlightSpeed
            end
        end)
    elseif not enabled and Flying then
        Flying = false
        
        if FlyConnection then
            FlyConnection:Disconnect()
            FlyConnection = nil
        end
        
        for _, child in pairs(HumanoidRootPart:GetChildren()) do
            if child:IsA("BodyVelocity") then
                child:Destroy()
            end
        end
    end
end

-- NoClip function
local NoClipConnection = nil

function ToggleNoClip(enabled)
    if enabled and not NoClipConnection then
        NoClipConnection = RunService.Stepped:Connect(function()
            if not Character then return end
            
            for _, part in pairs(Character:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.CanCollide = false
                end
            end
        end)
    elseif not enabled and NoClipConnection then
        NoClipConnection:Disconnect()
        NoClipConnection = nil
        
        -- Re-enable collisions
        for _, part in pairs(Character:GetDescendants()) do
            if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
                part.CanCollide = true
            end
        end
    end
end

-- GodMode function
function EnableGodMode()
    if not Character then return end
    
    -- Basic god mode method for MM2
    local clone = Character.Head:Clone()
    Character.Head:Destroy()
    clone.Parent = Character
    Humanoid.BreakJointsOnDeath = false
    
    -- Backup method
    for _, obj in pairs(Character:GetDescendants()) do
        if obj:IsA("Humanoid") then
            -- Set health properties
            obj.MaxHealth = math.huge
            obj.Health = math.huge
        end
    end
end

-- Create Luna UI window with simplified parameters
local Window = Luna:CreateWindow({
    Name = "SkyX MM2 Hub"
})

-- Create tabs with minimal parameters to prevent issues
local MainTab = Window:CreateTab({
    Name = "Main"
})

local ESPTab = Window:CreateTab({
    Name = "ESP"
})

local PlayerTab = Window:CreateTab({
    Name = "Player"
})

local CombatTab = Window:CreateTab({
    Name = "Combat"
})

local TeleportTab = Window:CreateTab({
    Name = "Teleport"
})

local MiscTab = Window:CreateTab({
    Name = "Misc"
})

-- Main Tab Sections
local MainInfo = MainTab:CreateSection("Information")

-- Info labels
MainTab:CreateLabel("Welcome to SkyX MM2 Hub!")
MainTab:CreateLabel("Join discord.gg/skyx for more scripts")

MainTab:CreateButton({
    Name = "Copy Discord Invite",
    Callback = function()
        setclipboard("discord.gg/skyx")
        Luna:Notify({
            Title = "SkyX Hub",
            Content = "Discord invite copied to clipboard!"
        })
    end
})

local RoleSection = MainTab:CreateSection("Role Information")

-- Role tracker/display
local MurdererLabel = MainTab:CreateLabel("Murderer: Unknown")
local SheriffLabel = MainTab:CreateLabel("Sheriff: Unknown")
local MyRoleLabel = MainTab:CreateLabel("Your Role: Unknown")

-- Auto-find murderer/sheriff
MainTab:CreateToggle({
    Name = "Auto-Track Roles",
    CurrentValue = true,
    Callback = function(Value)
        -- This will be handled in the main loop
    end
}, "AutoTrackRoles")

-- Coin farming section
local FarmingSection = MainTab:CreateSection("Coin Farming")

MainTab:CreateToggle({
    Name = "Auto Collect Coins",
    CurrentValue = false,
    Callback = function(Value)
        CoinSettings.Enabled = Value
    end
}, "AutoCollectCoins")

MainTab:CreateSlider({
    Name = "Collection Distance",
    Range = {5, 50},
    Increment = 1,
    CurrentValue = 20,
    Callback = function(Value)
        CoinSettings.CollectDistance = Value
    end
}, "CoinCollectDistance")

MainTab:CreateSlider({
    Name = "Collection Delay",
    Range = {0.1, 2},
    Increment = 0.1,
    CurrentValue = 0.5,
    Callback = function(Value)
        CoinSettings.CollectDelay = Value
    end
}, "CoinCollectDelay")

-- Auto Farm section
MainTab:CreateToggle({
    Name = "Auto Farm",
    CurrentValue = false,
    Callback = function(Value)
        AutoFarmSettings.Enabled = Value
    end
}, "AutoFarm")

MainTab:CreateToggle({
    Name = "Safe Mode",
    CurrentValue = true,
    Callback = function(Value)
        AutoFarmSettings.SafeMode = Value
    end
}, "SafeMode")

MainTab:CreateToggle({
    Name = "Hide Player Name",
    CurrentValue = true,
    Callback = function(Value)
        AutoFarmSettings.HidePlayerName = Value
    end
}, "HidePlayerName")

-- ESP Tab
local ESPSection = ESPTab:CreateSection("ESP Settings")

ESPTab:CreateToggle({
    Name = "Enable ESP",
    CurrentValue = false,
    Callback = function(Value)
        ESPSettings.Enabled = Value
        
        if Value then
            CreateESP()
        else
            -- Remove ESP objects
            for obj, _ in pairs(ESPObjects) do
                if obj and obj:IsA("Folder") then
                    obj:Destroy()
                end
            end
            ESPObjects = {}
        end
    end
}, "EnableESP")

ESPTab:CreateToggle({
    Name = "Show Murderer",
    CurrentValue = true,
    Callback = function(Value)
        ESPSettings.ShowMurderer = Value
        if ESPSettings.Enabled then CreateESP() end
    end
}, "ShowMurderer")

ESPTab:CreateToggle({
    Name = "Show Sheriff",
    CurrentValue = true,
    Callback = function(Value)
        ESPSettings.ShowSheriff = Value
        if ESPSettings.Enabled then CreateESP() end
    end
}, "ShowSheriff")

ESPTab:CreateToggle({
    Name = "Show Gun",
    CurrentValue = true,
    Callback = function(Value)
        ESPSettings.ShowGun = Value
        if ESPSettings.Enabled then CreateESP() end
    end
}, "ShowGun")

ESPTab:CreateToggle({
    Name = "Show Names",
    CurrentValue = true,
    Callback = function(Value)
        ESPSettings.ShowNames = Value
        if ESPSettings.Enabled then CreateESP() end
    end
}, "ShowNames")

ESPTab:CreateToggle({
    Name = "Show Distance",
    CurrentValue = true,
    Callback = function(Value)
        ESPSettings.ShowDistance = Value
        if ESPSettings.Enabled then CreateESP() end
    end
}, "ShowDistance")

ESPTab:CreateToggle({
    Name = "Show Boxes",
    CurrentValue = true,
    Callback = function(Value)
        ESPSettings.ShowBoxes = Value
        if ESPSettings.Enabled then CreateESP() end
    end
}, "ShowBoxes")

ESPTab:CreateToggle({
    Name = "Box Outlines",
    CurrentValue = true,
    Callback = function(Value)
        ESPSettings.BoxOutline = Value
        if ESPSettings.Enabled then CreateESP() end
    end
}, "BoxOutline")

ESPTab:CreateToggle({
    Name = "Rainbow ESP",
    CurrentValue = false,
    Callback = function(Value)
        ESPSettings.RainbowESP = Value
    end
}, "RainbowESP")

-- Player Tab
local PlayerSection = PlayerTab:CreateSection("Character Modifications")

PlayerTab:CreateToggle({
    Name = "Walk Speed",
    CurrentValue = false,
    Callback = function(Value)
        PlayerSettings.SpeedEnabled = Value
        if Value then
            Humanoid.WalkSpeed = PlayerSettings.SpeedValue
        else
            Humanoid.WalkSpeed = 16 -- Default speed
        end
    end
}, "SpeedEnabled")

PlayerTab:CreateSlider({
    Name = "Speed Value",
    Range = {16, 150},
    Increment = 1,
    CurrentValue = 50,
    Callback = function(Value)
        PlayerSettings.SpeedValue = Value
        if PlayerSettings.SpeedEnabled then
            Humanoid.WalkSpeed = Value
        end
    end
}, "SpeedValue")

PlayerTab:CreateToggle({
    Name = "Jump Power",
    CurrentValue = false,
    Callback = function(Value)
        PlayerSettings.JumpEnabled = Value
        if Value then
            Humanoid.JumpPower = PlayerSettings.JumpPower
        else
            Humanoid.JumpPower = 50 -- Default jump power
        end
    end
}, "JumpEnabled")

PlayerTab:CreateSlider({
    Name = "Jump Power Value",
    Range = {50, 200},
    Increment = 5,
    CurrentValue = 100,
    Callback = function(Value)
        PlayerSettings.JumpPower = Value
        if PlayerSettings.JumpEnabled then
            Humanoid.JumpPower = Value
        end
    end
}, "JumpPowerValue")

PlayerTab:CreateToggle({
    Name = "NoClip",
    CurrentValue = false,
    Callback = function(Value)
        PlayerSettings.NoClip = Value
        ToggleNoClip(Value)
    end
}, "NoClip")

PlayerTab:CreateToggle({
    Name = "Flight",
    CurrentValue = false,
    Callback = function(Value)
        PlayerSettings.FlightEnabled = Value
        ToggleFlight(Value)
    end
}, "Flight")

PlayerTab:CreateSlider({
    Name = "Flight Speed",
    Range = {10, 200},
    Increment = 5,
    CurrentValue = 50,
    Callback = function(Value)
        PlayerSettings.FlightSpeed = Value
    end
}, "FlightSpeed")

PlayerTab:CreateToggle({
    Name = "Anti-Ragdoll",
    CurrentValue = false,
    Callback = function(Value)
        PlayerSettings.AntiRagdoll = Value
        if Value then
            EnableAntiRagdoll()
        end
    end
}, "AntiRagdoll")

PlayerTab:CreateButton({
    Name = "God Mode (Risky)",
    Callback = function()
        PlayerSettings.GodMode = true
        EnableGodMode()
        Luna:Notify({
            Title = "GodMode",
            Content = "God Mode enabled! Note: This is risky and may be detected."
        })
    end
})

PlayerTab:CreateToggle({
    Name = "Auto Grab Gun",
    CurrentValue = false,
    Callback = function(Value)
        PlayerSettings.AutoGrabGun = Value
    end
}, "AutoGrabGun")

-- Combat Tab
local CombatSection = CombatTab:CreateSection("Combat Features")

CombatTab:CreateToggle({
    Name = "Kill Aura",
    CurrentValue = false,
    Callback = function(Value)
        KillAuraSettings.Enabled = Value
    end
}, "KillAura")

CombatTab:CreateSlider({
    Name = "Kill Aura Range",
    Range = {5, 30},
    Increment = 1,
    CurrentValue = 10,
    Callback = function(Value)
        KillAuraSettings.Range = Value
    end
}, "KillAuraRange")

CombatTab:CreateToggle({
    Name = "Target Murderer Only",
    CurrentValue = false,
    Callback = function(Value)
        KillAuraSettings.TargetMurderer = Value
    end
}, "TargetMurderer")

CombatTab:CreateSlider({
    Name = "Kill Cooldown",
    Range = {0.1, 2},
    Increment = 0.1,
    CurrentValue = 0.5,
    Callback = function(Value)
        KillAuraSettings.Cooldown = Value
    end
}, "KillCooldown")

-- Anti-Sheriff section
local AntiSheriffSection = CombatTab:CreateSection("Anti-Sheriff")

CombatTab:CreateToggle({
    Name = "Anti-Sheriff",
    CurrentValue = false,
    Callback = function(Value)
        AntiSheriffSettings.Enabled = Value
    end
}, "AntiSheriff")

CombatTab:CreateSlider({
    Name = "Detection Range",
    Range = {5, 30},
    Increment = 1,
    CurrentValue = 15,
    Callback = function(Value)
        AntiSheriffSettings.Range = Value
    end
}, "SheriffDetectionRange")

CombatTab:CreateSlider({
    Name = "Dodge Distance",
    Range = {5, 30},
    Increment = 1,
    CurrentValue = 15,
    Callback = function(Value)
        AntiSheriffSettings.DodgeDistance = Value
    end
}, "DodgeDistance")

-- Aimbot section
local AimbotSection = CombatTab:CreateSection("Aimbot")

CombatTab:CreateToggle({
    Name = "Enable Aimbot",
    CurrentValue = false,
    Callback = function(Value)
        AimbotSettings.Enabled = Value
    end
}, "EnableAimbot")

CombatTab:CreateToggle({
    Name = "Show FOV Circle",
    CurrentValue = true,
    Callback = function(Value)
        AimbotSettings.ShowFOV = Value
        FOVCircle.Visible = Value
    end
}, "ShowFOV")

CombatTab:CreateSlider({
    Name = "FOV Size",
    Range = {30, 500},
    Increment = 10,
    CurrentValue = 150,
    Callback = function(Value)
        AimbotSettings.FOV = Value
    end
}, "FOVSize")

CombatTab:CreateSlider({
    Name = "Aimbot Sensitivity",
    Range = {0.1, 2},
    Increment = 0.1,
    CurrentValue = 0.5,
    Callback = function(Value)
        AimbotSettings.Sensitivity = Value
    end
}, "AimbotSensitivity")

CombatTab:CreateToggle({
    Name = "Team Check",
    CurrentValue = true,
    Callback = function(Value)
        AimbotSettings.TeamCheck = Value
    end
}, "TeamCheck")

CombatTab:CreateToggle({
    Name = "Aim at Murderer Only",
    CurrentValue = true,
    Callback = function(Value)
        AimbotSettings.AimAtMurderer = Value
    end
}, "AimAtMurderer")

-- Use simplified dropdown without CurrentOption to prevent issues
CombatTab:CreateDropdown({
    Name = "Target Part",
    Options = {"Head", "HumanoidRootPart", "Torso"},
    Callback = function(Value)
        AimbotSettings.TargetPart = Value
    end
})

-- Teleport Tab
local TeleportSection = TeleportTab:CreateSection("Quick Teleports")

-- Common MM2 map locations
local mapLocations = {
    {Name = "Lobby", Position = Vector3.new(-108, 138, 77)},
    {Name = "Map Voting", Position = Vector3.new(-108, 141, 85)},
    {Name = "Sheriff Spawn", Position = Vector3.new(0, 0, 0)}, -- Placeholder
    {Name = "Murderer Spawn", Position = Vector3.new(0, 0, 0)}, -- Placeholder
    {Name = "Safe Room", Position = Vector3.new(0, 0, 0)} -- Placeholder
}

-- Create teleport buttons
for _, location in pairs(mapLocations) do
    TeleportTab:CreateButton({
        Name = "Teleport to " .. location.Name,
        Callback = function()
            -- Check if teleport is safe
            if IsSafeTeleport(location.Position) or not AutoFarmSettings.SafeMode then
                HumanoidRootPart.CFrame = CFrame.new(location.Position)
                Luna:Notify({
                    Title = "Teleport",
                    Content = "Teleported to " .. location.Name
                })
            else
                Luna:Notify({
                    Title = "Teleport Failed",
                    Content = "Cannot teleport - Murderer nearby. Disable Safe Mode to override."
                })
            end
        end
    })
end

-- Teleport to player
TeleportTab:CreateSection("Player Teleports")

-- Create a dropdown of all players
local playerList = {}
for _, player in pairs(Players:GetPlayers()) do
    if player ~= LocalPlayer then
        table.insert(playerList, player.Name)
    end
end

-- Create simplified player dropdown without CurrentOption
local PlayerDropdown = TeleportTab:CreateDropdown({
    Name = "Select Player",
    Options = playerList,
    Callback = function(Value)
        TeleportSettings.TPTarget = Value
    end
})

-- Button to teleport to selected player
TeleportTab:CreateButton({
    Name = "Teleport to Player",
    Callback = function()
        if TeleportSettings.TPTarget then
            local targetPlayer = Players:FindFirstChild(TeleportSettings.TPTarget)
            if targetPlayer and targetPlayer.Character and 
               targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
                -- Check if teleport is safe
                if IsSafeTeleport(targetPlayer.Character.HumanoidRootPart.Position) or not AutoFarmSettings.SafeMode then
                    HumanoidRootPart.CFrame = targetPlayer.Character.HumanoidRootPart.CFrame
                    Luna:Notify({
                        Title = "Teleport",
                        Content = "Teleported to " .. targetPlayer.Name
                    })
                else
                    Luna:Notify({
                        Title = "Teleport Failed",
                        Content = "Cannot teleport - Murderer nearby. Disable Safe Mode to override."
                    })
                end
            else
                Luna:Notify({
                    Title = "Teleport Failed",
                    Content = "Player not found or too far away"
                })
            end
        else
            Luna:Notify({
                Title = "Teleport Failed",
                Content = "No player selected"
            })
        end
    end
})

-- Toggle for loop teleport (follow player)
TeleportTab:CreateToggle({
    Name = "Loop Teleport (Follow)",
    CurrentValue = false,
    Callback = function(Value)
        TeleportSettings.LoopTP = Value
    end
}, "LoopTeleport")

-- Misc Tab
local MiscSection = MiscTab:CreateSection("Miscellaneous")

-- Create preset emote buttons
local emotes = {
    {Name = "Floss", ID = "floss"},
    {Name = "Zombie", ID = "zombie"},
    {Name = "Ninja", ID = "ninja"},
    {Name = "Dab", ID = "dab"},
    {Name = "Sit", ID = "sit"}
}

-- Simplified emote dropdown
MiscTab:CreateDropdown({
    Name = "Select Emote",
    Options = {"floss", "zombie", "ninja", "dab", "sit"},
    Callback = function(Value)
        EmoteSettings.CurrentEmote = Value
    end
})

MiscTab:CreateButton({
    Name = "Play Emote",
    Callback = function()
        -- Look for emote remote event
        for _, obj in pairs(ReplicatedStorage:GetDescendants()) do
            if (obj.Name:match("Emote") or obj.Name:match("Dance")) and obj:IsA("RemoteEvent") then
                obj:FireServer(EmoteSettings.CurrentEmote)
                break
            end
        end
    end
})

MiscTab:CreateToggle({
    Name = "Loop Emotes",
    CurrentValue = false,
    Callback = function(Value)
        EmoteSettings.LoopEmotes = Value
    end
}, "LoopEmotes")

-- Server section
MiscTab:CreateSection("Server")

MiscTab:CreateButton({
    Name = "Rejoin Server",
    Callback = function()
        Luna:Notify({
            Title = "Server",
            Content = "Rejoining server..."
        })
        game:GetService("TeleportService"):Teleport(game.PlaceId, LocalPlayer)
    end
})

MiscTab:CreateButton({
    Name = "Server Hop",
    Callback = function()
        Luna:Notify({
            Title = "Server",
            Content = "Looking for another server..."
        })
        
        local servers = {}
        local req = game:HttpGet("https://games.roblox.com/v1/games/" .. game.PlaceId .. "/servers/Public?sortOrder=Asc&limit=100")
        local data = game:GetService("HttpService"):JSONDecode(req)
        
        if data and data.data then
            for _, server in pairs(data.data) do
                if server.playing < server.maxPlayers and server.id ~= game.JobId then
                    table.insert(servers, server.id)
                end
            end
            
            if #servers > 0 then
                game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, servers[math.random(1, #servers)])
            else
                Luna:Notify({
                    Title = "Server Hop Failed",
                    Content = "No available servers found"
                })
            end
        end
    end
})

-- Update player list when players join/leave
Players.PlayerAdded:Connect(function(player)
    -- Update the player dropdown
    local newPlayerList = {}
    for _, p in pairs(Players:GetPlayers()) do
        if p ~= LocalPlayer then
            table.insert(newPlayerList, p.Name)
        end
    end
    
    PlayerDropdown:Set({
        Options = newPlayerList,
        CurrentOption = newPlayerList[1] or "No Players"
    })
    
    -- Update roles
    wait(3) -- Wait for role assignment
    UpdateRoles()
 end)

Players.PlayerRemoving:Connect(function(player)
    -- Update the player dropdown
    local newPlayerList = {}
    for _, p in pairs(Players:GetPlayers()) do
        if p ~= LocalPlayer and p ~= player then
            table.insert(newPlayerList, p.Name)
        end
    end
    
    PlayerDropdown:Set({
        Options = newPlayerList,
        CurrentOption = newPlayerList[1] or "No Players"
    })
    
    -- Update roles
    UpdateRoles()
 end)

-- Initialize
UpdateRoles()
EnableAimbot()

-- Main loop
spawn(function()
    while true do
        wait(0.1)
        
        -- Update roles periodically
        if tick() % 3 < 0.1 then -- Every ~3 seconds
            UpdateRoles()
            
            -- Update role labels
            if Murderer then
                MurdererLabel:Set("Murderer: " .. Murderer.Name)
            else
                MurdererLabel:Set("Murderer: Unknown")
            end
            
            if Sheriff then
                SheriffLabel:Set("Sheriff: " .. Sheriff.Name)
            else
                SheriffLabel:Set("Sheriff: Unknown")
            end
            
            local myRole = SkyXFunctions:GetPlayerRole(LocalPlayer)
            MyRoleLabel:Set("Your Role: " .. myRole)
        end
        
        -- Update ESP
        if ESPSettings.Enabled then
            UpdateESP()
        end
        
        -- Auto collect coins
        if CoinSettings.Enabled then
            CollectCoins()
        end
        
        -- Auto farm
        if AutoFarmSettings.Enabled then
            AutoFarm()
        end
        
        -- Kill aura
        if KillAuraSettings.Enabled then
            KillAura()
        end
        
        -- Anti-Sheriff
        if AntiSheriffSettings.Enabled then
            AntiSheriff()
        end
        
        -- Loop teleport to target player
        if TeleportSettings.LoopTP and TeleportSettings.TPTarget then
            local targetPlayer = Players:FindFirstChild(TeleportSettings.TPTarget)
            if targetPlayer and targetPlayer.Character and 
               targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
                if IsSafeTeleport(targetPlayer.Character.HumanoidRootPart.Position) or not AutoFarmSettings.SafeMode then
                    HumanoidRootPart.CFrame = targetPlayer.Character.HumanoidRootPart.CFrame
                end
            end
        end
        
        -- Loop emotes
        if EmoteSettings.LoopEmotes then
            for _, obj in pairs(ReplicatedStorage:GetDescendants()) do
                if (obj.Name:match("Emote") or obj.Name:match("Dance")) and obj:IsA("RemoteEvent") then
                    obj:FireServer(EmoteSettings.CurrentEmote)
                    break
                end
            end
        end
    end
end)

-- Notification on load
Luna:Notify({
    Title = "SkyX MM2 Hub",
    Content = "Script loaded successfully!"
})

return SkyXFunctions
