--[[
    SkyX Hub - Orion UI Example
    
    This example shows how to use the custom-themed Orion UI
    The UI uses a sky-themed color scheme that's easy on the eyes
]]

-- Load the custom-themed Orion UI library
local OrionLib = loadstring(game:HttpGet('https://raw.githubusercontent.com/SkyXhub/skyx-all-ui-/refs/heads/main/OrionX-UI'))()

-- Detect the current game
local gameID = game.PlaceId
local gameName = "Unknown Game"

-- Game detection dictionary
local games = {
    [6284583030] = "Pet Simulator X",
    [7449423635] = "Blade Ball",
    [2753915549] = "Blox Fruits",
    [1962086868] = "Tower of Hell",
    [155615604] = "Prison Life",
    [4623386862] = "Piggy",
    [142823291] = "Murder Mystery 2",
    [537413528] = "Build A Boat",
    [189707] = "Natural Disaster Survival",
    [8304191830] = "Anime Adventures"
}

-- Set game name if detected
if games[gameID] then
    gameName = games[gameID]
end

-- Create the main window
local Window = OrionLib:MakeWindow({
    Name = "SkyX Hub | " .. gameName,
    HidePremium = true,
    SaveConfig = true,
    ConfigFolder = "SkyXHub",
    IntroText = "SkyX Hub",
    IntroIcon = "rbxassetid://10618644218" -- Replace with SkyX logo if available
})

-- Create the main tab
local MainTab = Window:MakeTab({
    Name = "Main",
    Icon = "rbxassetid://4483345998", -- Default home icon
    PremiumOnly = false
})

-- Add a welcome message to the main tab
MainTab:AddParagraph("Welcome to SkyX Hub", "The ultimate script hub for " .. gameName)

-- Add a button to copy Discord invite
MainTab:AddButton({
    Name = "Copy Discord Invite",
    Callback = function()
        if setclipboard then
            setclipboard("https://discord.gg/skyxhub")
            OrionLib:MakeNotification({
                Name = "SkyX Hub",
                Content = "Discord invite copied to clipboard!",
                Image = "rbxassetid://4483345998",
                Time = 5
            })
        else
            OrionLib:MakeNotification({
                Name = "Error",
                Content = "Your executor doesn't support clipboard functions.",
                Image = "rbxassetid://4483345998",
                Time = 5
            })
        end
    end
})

-- Create Anti-Ban tab
local AntiBanTab = Window:MakeTab({
    Name = "Anti-Ban",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

-- Anti-Ban features
AntiBanTab:AddToggle({
    Name = "Anti-Kick",
    Default = true,
    Callback = function(Value)
        -- Implementation would go here
        _G.AntiKick = Value
        OrionLib:MakeNotification({
            Name = "Anti-Ban",
            Content = "Anti-Kick " .. (Value and "enabled" or "disabled"),
            Image = "rbxassetid://4483345998",
            Time = 3
        })
    end
})

AntiBanTab:AddToggle({
    Name = "Anti-Report",
    Default = true,
    Callback = function(Value)
        -- Implementation would go here
        _G.AntiReport = Value
    end
})

AntiBanTab:AddToggle({
    Name = "Admin Detection",
    Default = true,
    Callback = function(Value)
        -- Implementation would go here
        _G.AdminDetection = Value
    end
})

AntiBanTab:AddToggle({
    Name = "Screenshot Protection",
    Default = true,
    Callback = function(Value)
        -- Implementation would go here
        _G.ScreenshotProtection = Value
    end
})

-- Anti-Ban action buttons
AntiBanTab:AddButton({
    Name = "Enable All Protections",
    Callback = function()
        -- Enable all protections
        _G.AntiKick = true
        _G.AntiReport = true
        _G.AdminDetection = true
        _G.ScreenshotProtection = true
        
        -- Update toggle UI elements (implementation would vary)
        
        OrionLib:MakeNotification({
            Name = "Anti-Ban",
            Content = "All protections enabled",
            Image = "rbxassetid://4483345998",
            Time = 3
        })
    end
})

AntiBanTab:AddButton({
    Name = "Disable All Protections",
    Callback = function()
        -- Disable all protections
        _G.AntiKick = false
        _G.AntiReport = false
        _G.AdminDetection = false
        _G.ScreenshotProtection = false
        
        -- Update toggle UI elements (implementation would vary)
        
        OrionLib:MakeNotification({
            Name = "Anti-Ban",
            Content = "All protections disabled",
            Image = "rbxassetid://4483345998",
            Time = 3
        })
    end
})

-- Create game-specific features based on the detected game
if gameID == 6284583030 then -- Pet Simulator X
    -- Create Pet Simulator X tab
    local PSXTab = Window:MakeTab({
        Name = "Pet Simulator X",
        Icon = "rbxassetid://4483345998",
        PremiumOnly = false
    })
    
    -- Add Auto Farm toggle
    PSXTab:AddToggle({
        Name = "Auto Farm Coins",
        Default = false,
        Callback = function(Value)
            -- Auto farm implementation would go here
            _G.AutoFarm = Value
            
            if Value then
                OrionLib:MakeNotification({
                    Name = "Pet Simulator X",
                    Content = "Auto Farm enabled",
                    Image = "rbxassetid://4483345998",
                    Time = 3
                })
                
                -- Auto farm code would start here
                -- This is just a placeholder loop
                spawn(function()
                    while _G.AutoFarm and wait() do
                        -- Actual farming code would go here
                    end
                end)
            else
                OrionLib:MakeNotification({
                    Name = "Pet Simulator X",
                    Content = "Auto Farm disabled",
                    Image = "rbxassetid://4483345998",
                    Time = 3
                })
            end
        end
    })
    
    -- Add Auto Hatch toggle
    PSXTab:AddToggle({
        Name = "Auto Hatch Eggs",
        Default = false,
        Callback = function(Value)
            -- Auto hatch implementation would go here
            _G.AutoHatch = Value
        end
    })
    
    -- Add Egg selector dropdown
    PSXTab:AddDropdown({
        Name = "Select Egg",
        Default = "Basic Egg",
        Options = {"Basic Egg", "Rare Egg", "Epic Egg", "Legendary Egg", "Mythical Egg"},
        Callback = function(Value)
            -- Egg selection implementation would go here
            _G.SelectedEgg = Value
        end
    })
    
elseif gameID == 7449423635 then -- Blade Ball
    -- Create Blade Ball tab
    local BBTab = Window:MakeTab({
        Name = "Blade Ball",
        Icon = "rbxassetid://4483345998",
        PremiumOnly = false
    })
    
    -- Add Auto Parry toggle
    BBTab:AddToggle({
        Name = "Auto Parry",
        Default = false,
        Callback = function(Value)
            -- Auto parry implementation would go here
            _G.AutoParry = Value
            
            if Value then
                OrionLib:MakeNotification({
                    Name = "Blade Ball",
                    Content = "Auto Parry enabled",
                    Image = "rbxassetid://4483345998",
                    Time = 3
                })
                
                -- Auto parry code would start here
                spawn(function()
                    while _G.AutoParry and wait() do
                        -- Actual parry code would go here
                    end
                end)
            else
                OrionLib:MakeNotification({
                    Name = "Blade Ball",
                    Content = "Auto Parry disabled",
                    Image = "rbxassetid://4483345998",
                    Time = 3
                })
            end
        end
    })
    
    -- Add Parry Distance slider
    BBTab:AddSlider({
        Name = "Parry Distance",
        Min = 10,
        Max = 100,
        Default = 50,
        Color = Color3.fromRGB(65, 109, 175),
        Increment = 1,
        ValueName = "studs",
        Callback = function(Value)
            -- Parry distance implementation would go here
            _G.ParryDistance = Value
        end    
    })
    
    -- Add Auto Ability toggle
    BBTab:AddToggle({
        Name = "Auto Ability",
        Default = false,
        Callback = function(Value)
            -- Auto ability implementation would go here
            _G.AutoAbility = Value
        end
    })
    
elseif gameID == 2753915549 then -- Blox Fruits
    -- Create Blox Fruits tab
    local BFTab = Window:MakeTab({
        Name = "Blox Fruits",
        Icon = "rbxassetid://4483345998",
        PremiumOnly = false
    })
    
    -- Add Auto Farm toggle
    BFTab:AddToggle({
        Name = "Auto Farm Level",
        Default = false,
        Callback = function(Value)
            -- Auto farm implementation would go here
            _G.AutoFarm = Value
        end
    })
    
    -- Add Auto Raid toggle
    BFTab:AddToggle({
        Name = "Auto Raid",
        Default = false,
        Callback = function(Value)
            -- Auto raid implementation would go here
            _G.AutoRaid = Value
        end
    })
    
    -- Add Teleport dropdown
    BFTab:AddDropdown({
        Name = "Teleport To",
        Default = "First Sea",
        Options = {"First Sea", "Second Sea", "Third Sea", "Marine Base", "Middle Town", "Jungle", "Pirate Village", "Desert", "Frozen Village", "Colosseum"},
        Callback = function(Value)
            -- Teleport implementation would go here
            _G.TeleportDestination = Value
            
            OrionLib:MakeNotification({
                Name = "Blox Fruits",
                Content = "Teleporting to " .. Value,
                Image = "rbxassetid://4483345998",
                Time = 3
            })
        end
    })
    
    -- Create Fruits section for Blox Fruits
    local FruitsTab = Window:MakeTab({
        Name = "Fruits",
        Icon = "rbxassetid://4483345998",
        PremiumOnly = false
    })
    
    -- Add fruit-related toggles
    FruitsTab:AddToggle({
        Name = "Auto Buy Random Fruit",
        Default = false,
        Callback = function(Value)
            -- Auto buy implementation would go here
            _G.AutoBuyFruit = Value
        end
    })
    
    FruitsTab:AddToggle({
        Name = "Auto Store Fruits",
        Default = false,
        Callback = function(Value)
            -- Auto store implementation would go here
            _G.AutoStoreFruit = Value
        end
    })
    
else
    -- Create universal tab for unrecognized games
    local UniversalTab = Window:MakeTab({
        Name = "Universal",
        Icon = "rbxassetid://4483345998",
        PremiumOnly = false
    })
    
    -- Add universal features
    UniversalTab:AddToggle({
        Name = "Speed Hack",
        Default = false,
        Callback = function(Value)
            -- Speed hack implementation
            _G.SpeedHack = Value
            
            if Value then
                -- Get the player's humanoid
                local plr = game.Players.LocalPlayer
                if plr.Character and plr.Character:FindFirstChild("Humanoid") then
                    plr.Character.Humanoid.WalkSpeed = 100
                end
                
                -- Apply speed hack to future characters
                plr.CharacterAdded:Connect(function(char)
                    if _G.SpeedHack and char:WaitForChild("Humanoid") then
                        char.Humanoid.WalkSpeed = 100
                    end
                end)
            else
                -- Reset speed
                local plr = game.Players.LocalPlayer
                if plr.Character and plr.Character:FindFirstChild("Humanoid") then
                    plr.Character.Humanoid.WalkSpeed = 16
                end
            end
        end
    })
    
    -- Add Jump Power toggle
    UniversalTab:AddToggle({
        Name = "Jump Power",
        Default = false,
        Callback = function(Value)
            -- Jump power implementation
            _G.JumpPower = Value
            
            if Value then
                -- Get the player's humanoid
                local plr = game.Players.LocalPlayer
                if plr.Character and plr.Character:FindFirstChild("Humanoid") then
                    plr.Character.Humanoid.JumpPower = 150
                end
                
                -- Apply jump power to future characters
                plr.CharacterAdded:Connect(function(char)
                    if _G.JumpPower and char:WaitForChild("Humanoid") then
                        char.Humanoid.JumpPower = 150
                    end
                end)
            else
                -- Reset jump power
                local plr = game.Players.LocalPlayer
                if plr.Character and plr.Character:FindFirstChild("Humanoid") then
                    plr.Character.Humanoid.JumpPower = 50
                end
            end
        end
    })
    
    -- Add Infinite Jump toggle
    UniversalTab:AddToggle({
        Name = "Infinite Jump",
        Default = false,
        Callback = function(Value)
            -- Infinite jump implementation
            _G.InfiniteJump = Value
            
            if Value then
                -- Connect jump input
                _G.JumpConnection = game:GetService("UserInputService").JumpRequest:Connect(function()
                    if _G.InfiniteJump then
                        local plr = game.Players.LocalPlayer
                        if plr.Character and plr.Character:FindFirstChild("Humanoid") then
                            plr.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
                        end
                    end
                end)
                
                OrionLib:MakeNotification({
                    Name = "Universal",
                    Content = "Infinite Jump enabled",
                    Image = "rbxassetid://4483345998",
                    Time = 3
                })
            else
                -- Disconnect jump input
                if _G.JumpConnection then
                    _G.JumpConnection:Disconnect()
                    _G.JumpConnection = nil
                end
                
                OrionLib:MakeNotification({
                    Name = "Universal",
                    Content = "Infinite Jump disabled",
                    Image = "rbxassetid://4483345998",
                    Time = 3
                })
            end
        end
    })
    
    -- Add Noclip toggle
    UniversalTab:AddToggle({
        Name = "Noclip",
        Default = false,
        Callback = function(Value)
            -- Noclip implementation
            _G.Noclip = Value
            
            if Value then
                -- Setup noclip
                _G.NoclipLoop = game:GetService("RunService").Stepped:Connect(function()
                    if _G.Noclip then
                        local plr = game.Players.LocalPlayer
                        if plr.Character then
                            for _, part in pairs(plr.Character:GetDescendants()) do
                                if part:IsA("BasePart") and part.CanCollide then
                                    part.CanCollide = false
                                end
                            end
                        end
                    end
                end)
                
                OrionLib:MakeNotification({
                    Name = "Universal",
                    Content = "Noclip enabled",
                    Image = "rbxassetid://4483345998",
                    Time = 3
                })
            else
                -- Disable noclip
                if _G.NoclipLoop then
                    _G.NoclipLoop:Disconnect()
                    _G.NoclipLoop = nil
                    
                    -- Reset collision
                    local plr = game.Players.LocalPlayer
                    if plr.Character then
                        for _, part in pairs(plr.Character:GetDescendants()) do
                            if part:IsA("BasePart") then
                                part.CanCollide = true
                            end
                        end
                    end
                end
                
                OrionLib:MakeNotification({
                    Name = "Universal",
                    Content = "Noclip disabled",
                    Image = "rbxassetid://4483345998",
                    Time = 3
                })
            end
        end
    })
end

-- Create ESP tab (universal feature)
local ESPTab = Window:MakeTab({
    Name = "ESP",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

-- Add ESP features
ESPTab:AddToggle({
    Name = "Player ESP",
    Default = false,
    Callback = function(Value)
        -- Player ESP implementation
        _G.PlayerESP = Value
        
        if Value then
            -- Setup ESP
            _G.ESPEnabled = true
            _G.ESPHighlights = {}
            
            -- Function to create ESP for a player
            local function createESP(player)
                if player == game.Players.LocalPlayer then return end
                
                local highlight = Instance.new("Highlight")
                highlight.Name = "ESP_Highlight"
                highlight.FillColor = Color3.fromRGB(255, 0, 0)
                highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
                highlight.FillTransparency = 0.5
                highlight.OutlineTransparency = 0
                
                if player.Character then
                    highlight.Parent = player.Character
                end
                
                player.CharacterAdded:Connect(function(character)
                    if _G.ESPEnabled then
                        highlight.Parent = character
                    end
                end)
                
                return highlight
            end
            
            -- Apply ESP to all players
            for _, player in pairs(game.Players:GetPlayers()) do
                if player ~= game.Players.LocalPlayer then
                    _G.ESPHighlights[player.Name] = createESP(player)
                end
            end
            
            -- Handle new players
            _G.ESPConnection = game.Players.PlayerAdded:Connect(function(player)
                if _G.ESPEnabled and player ~= game.Players.LocalPlayer then
                    _G.ESPHighlights[player.Name] = createESP(player)
                end
            end)
            
            -- Handle players leaving
            _G.ESPRemovingConnection = game.Players.PlayerRemoving:Connect(function(player)
                if _G.ESPHighlights[player.Name] then
                    _G.ESPHighlights[player.Name]:Destroy()
                    _G.ESPHighlights[player.Name] = nil
                end
            end)
            
            OrionLib:MakeNotification({
                Name = "ESP",
                Content = "Player ESP enabled",
                Image = "rbxassetid://4483345998",
                Time = 3
            })
        else
            -- Disable ESP
            _G.ESPEnabled = false
            
            -- Remove all highlights
            if _G.ESPHighlights then
                for _, highlight in pairs(_G.ESPHighlights) do
                    if highlight then
                        highlight:Destroy()
                    end
                end
                _G.ESPHighlights = {}
            end
            
            -- Disconnect events
            if _G.ESPConnection then
                _G.ESPConnection:Disconnect()
                _G.ESPConnection = nil
            end
            
            if _G.ESPRemovingConnection then
                _G.ESPRemovingConnection:Disconnect()
                _G.ESPRemovingConnection = nil
            end
            
            OrionLib:MakeNotification({
                Name = "ESP",
                Content = "Player ESP disabled",
                Image = "rbxassetid://4483345998",
                Time = 3
            })
        end
    end
})

-- Add ESP Color picker
ESPTab:AddColorpicker({
    Name = "ESP Color",
    Default = Color3.fromRGB(255, 0, 0),
    Callback = function(Value)
        -- Update ESP color
        if _G.ESPHighlights then
            for _, highlight in pairs(_G.ESPHighlights) do
                if highlight then
                    highlight.FillColor = Value
                end
            end
        end
    end
})

-- Create settings tab
local SettingsTab = Window:MakeTab({
    Name = "Settings",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

-- Add keybind for UI toggle
SettingsTab:AddKeybind({
    Name = "Toggle UI",
    Default = Enum.KeyCode.RightControl,
    Hold = false,
    Callback = function()
        -- This is handled by Orion UI internally
    end
})

-- Create credits tab
local CreditsTab = Window:MakeTab({
    Name = "Credits",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

-- Add credits
CreditsTab:AddParagraph("SkyX Hub", "Created by the SkyX Team")
CreditsTab:AddParagraph("UI Library", "Using customized OrionX UI")

-- Initialize the UI
OrionLib:Init()

-- Launch notification
OrionLib:MakeNotification({
    Name = "SkyX Hub",
    Content = "Successfully loaded for " .. gameName,
    Image = "rbxassetid://4483345998",
    Time = 5
})
